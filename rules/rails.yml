groups:
- name: Rails mtail
  interval: 1m
  rules:
  - record: verb:rails_requests_started:rate1m
    expr: sum(rate(rails_requests_started[1m])) without (fqdn, instance)
  - record: instance:rails_requests_started:rate1m
    expr: sum(rate(rails_requests_started[1m])) without (verb)
  - record: status:rails_requests_completed:rate1m
    expr: sum(rate(rails_requests_completed[1m])) without (fqdn, instance)
  - record: status:rails_requests_completed:rate1m
    expr: sum(rate(rails_requests_completed_seconds_count[1m])) without (fqdn, instance)
  - record: instance:rails_requests_completed:rate1m
    expr: sum(rate(rails_requests_completed[1m])) without (status)
  - record: instance:rails_requests_completed:rate1m
    expr: sum(rate(rails_requests_completed_seconds_count[1m])) without (status)
  - record: status:rails_requests_completed_seconds:p50
    expr: histogram_quantile(0.5, sum(rate(rails_requests_completed_seconds_bucket[1m]))
      without (fqdn, instance))
  - record: status:rails_requests_completed_seconds:p95
    expr: histogram_quantile(0.95, sum(rate(rails_requests_completed_seconds_bucket[1m]))
      without (fqdn, instance))
  - record: status:rails_requests_completed_seconds:p99
    expr: histogram_quantile(0.99, sum(rate(rails_requests_completed_seconds_bucket[1m]))
      without (fqdn, instance))
  - record: instance:rails_requests_completed_seconds:p50
    expr: histogram_quantile(0.5, sum(rate(rails_requests_completed_seconds_bucket[1m]))
      without (status))
  - record: instance:rails_requests_completed_seconds:p95
    expr: histogram_quantile(0.95, sum(rate(rails_requests_completed_seconds_bucket[1m]))
      without (status))
  - record: instance:rails_requests_completed_seconds:p99
    expr: histogram_quantile(0.99, sum(rate(rails_requests_completed_seconds_bucket[1m]))
      without (status))
  - record: type:rails_requests_started:rate1m
    expr: sum(rate(rails_requests_started[1m])) without (instance, fqdn, verb)
  - record: type:rails_requests_completed_seconds:p95
    expr: histogram_quantile(0.95, sum(rate(rails_requests_completed_seconds_bucket[1m])) without (instance, fqdn, status))
  - record: instance:rails_no_repository_for_path:rate1m
    expr: rate(rails_git_no_repository_for_such_path[1m])
  - record: type:rails_no_repository_for_path:rate1m
    expr: sum(instance:rails_no_repository_for_path:rate1m) without (instance, fqdn)

- name: Rails Redis Cache
  interval: 1m
  rules:
  # Controller/action level summary.
  - record: controller_action:gitlab_cache_operation_duration_seconds_count:rate1m
    expr: >
      sum without (instance,fqdn,operation) (
        rate(gitlab_cache_operation_duration_seconds_count[1m])
      )
  - record: controller_action:gitlab_cache_operation_duration_seconds_sum:rate1m
    expr: >
      sum without (instance,fqdn,operation) (
        rate(gitlab_cache_operation_duration_seconds_sum[1m])
      )
  - record: controller_action:gitlab_cache_operation_duration_seconds_bucket:rate1m
    expr: >
      sum without (instance,fqdn,operation) (
        rate(gitlab_cache_operation_duration_seconds_bucket[1m])
      )
  # Job-level summary
  - record: job:gitlab_cache_operation_duration_seconds_count:rate1m
    expr: >
      sum without (controller,action) (
        controller_action:gitlab_cache_operation_duration_seconds_count:rate1m
      )
  - record: job:gitlab_cache_operation_duration_seconds_sum:rate1m
    expr: >
      sum without (controller,action) (
        controller_action:gitlab_cache_operation_duration_seconds_sum:rate1m
      )
  - record: job:gitlab_cache_operation_duration_seconds_bucket:rate1m
    expr: >
      sum without (controller,action) (
        controller_action:gitlab_cache_operation_duration_seconds_bucket:rate1m
      )
    # Quantiles
  - record: controller_action:gitlab_cache_operation_duration_seconds:p95
    expr: histogram_quantile(0.95, controller_action:gitlab_cache_operation_duration_seconds_bucket:rate1m)
  - record: controller_action:gitlab_cache_operation_duration_seconds:p99
    expr: histogram_quantile(0.99, controller_action:gitlab_cache_operation_duration_seconds_bucket:rate1m)

- name: Unicorn Cache 5m
  interval: 1m
  rules:
  # Cache data, per controller/action.
  - record: controller_action:gitlab_cache_operation_duration_seconds_bucket:rate5m
    expr: >
      sum without (fqdn,instance,operation) (
        rate(gitlab_cache_operation_duration_seconds_bucket[5m])
      )
  - record: controller_action:gitlab_cache_operation_duration_seconds:p95
    expr: histogram_quantile(0.95, controller_action:gitlab_cache_operation_duration_seconds_bucket:rate5m)
  - record: controller_action:gitlab_cache_operation_duration_seconds:p99
    expr: histogram_quantile(0.99, controller_action:gitlab_cache_operation_duration_seconds_bucket:rate5m)
