groups:
- name: Rails mtail
  interval: 1m
  rules:
  - record: verb:rails_requests_started:rate1m
    expr: sum(rate(rails_requests_started[1m])) without (fqdn, instance)
  - record: instance:rails_requests_started:rate1m
    expr: sum(rate(rails_requests_started[1m])) without (verb)
  - record: status:rails_requests_completed:rate1m
    expr: sum(rate(rails_requests_completed[1m])) without (fqdn, instance)
  - record: status:rails_requests_completed:rate1m
    expr: sum(rate(rails_requests_completed_seconds_count[1m])) without (fqdn, instance)
  - record: instance:rails_requests_completed:rate1m
    expr: sum(rate(rails_requests_completed[1m])) without (status)
  - record: instance:rails_requests_completed:rate1m
    expr: sum(rate(rails_requests_completed_seconds_count[1m])) without (status)
  - record: status:rails_requests_completed_seconds:p50
    expr: histogram_quantile(0.5, sum(rate(rails_requests_completed_seconds_bucket[1m]))
      without (fqdn, instance))
  - record: status:rails_requests_completed_seconds:p95
    expr: histogram_quantile(0.95, sum(rate(rails_requests_completed_seconds_bucket[1m]))
      without (fqdn, instance))
  - record: status:rails_requests_completed_seconds:p99
    expr: histogram_quantile(0.99, sum(rate(rails_requests_completed_seconds_bucket[1m]))
      without (fqdn, instance))
  - record: instance:rails_requests_completed_seconds:p50
    expr: histogram_quantile(0.5, sum(rate(rails_requests_completed_seconds_bucket[1m]))
      without (status))
  - record: instance:rails_requests_completed_seconds:p95
    expr: histogram_quantile(0.95, sum(rate(rails_requests_completed_seconds_bucket[1m]))
      without (status))
  - record: instance:rails_requests_completed_seconds:p99
    expr: histogram_quantile(0.99, sum(rate(rails_requests_completed_seconds_bucket[1m]))
      without (status))
  - record: type:rails_requests_started:rate1m
    expr: sum(rate(rails_requests_started[1m])) without (instance, fqdn, verb)
  - record: type:rails_requests_completed_seconds:p95
    expr: histogram_quantile(0.95, sum(rate(rails_requests_completed_seconds_bucket[1m])) without (instance, fqdn, status))
  - record: instance:rails_no_repository_for_path:rate1m
    expr: rate(rails_git_no_repository_for_such_path[1m])
  - record: type:rails_no_repository_for_path:rate1m
    expr: sum(instance:rails_no_repository_for_path:rate1m) without (instance, fqdn)

- name: Rails Redis Cache
  interval: 1m
  rules:
  # Operation level summary.
  - record: operation:gitlab_cache_operation_duration_seconds_count:rate1m
    expr: >
      sum without (instance,fqdn,operation) (
        rate(gitlab_cache_operation_duration_seconds_count[1m])
      )
  - record: operation:gitlab_cache_operation_duration_seconds_sum:rate1m
    expr: >
      sum without (instance,fqdn,operation) (
        rate(gitlab_cache_operation_duration_seconds_sum[1m])
      )
  - record: operation:gitlab_cache_operation_duration_seconds_bucket:rate1m
    expr: >
      sum without (instance,fqdn,operation) (
        rate(gitlab_cache_operation_duration_seconds_bucket[1m])
      )
  # Job-level summary
  - record: job:gitlab_cache_operation_duration_seconds_count:rate1m
    expr: >
      sum without (operation) (
        operation:gitlab_cache_operation_duration_seconds_count:rate1m
      )
  - record: job:gitlab_cache_operation_duration_seconds_sum:rate1m
    expr: >
      sum without (operation) (
        operation:gitlab_cache_operation_duration_seconds_sum:rate1m
      )
  - record: job:gitlab_cache_operation_duration_seconds_bucket:rate1m
    expr: >
      sum without (operation) (
        operation:gitlab_cache_operation_duration_seconds_bucket:rate1m
      )
    # Quantiles
  - record: operation:gitlab_cache_operation_duration_seconds:p95
    expr: histogram_quantile(0.95, operation:gitlab_cache_operation_duration_seconds_bucket:rate1m)
  - record: operation:gitlab_cache_operation_duration_seconds:p99
    expr: histogram_quantile(0.99, operation:gitlab_cache_operation_duration_seconds_bucket:rate1m)

- name: Rails Cache 5m
  interval: 1m
  rules:
  # Cache data, per operation.
  - record: operation:gitlab_cache_operation_duration_seconds_bucket:rate5m
    expr: >
      sum without (fqdn,instance,operation) (
        rate(gitlab_cache_operation_duration_seconds_bucket[5m])
      )
  - record: operation:gitlab_cache_operation_duration_seconds:p95
    expr: histogram_quantile(0.95, operation:gitlab_cache_operation_duration_seconds_bucket:rate5m)
  - record: operation:gitlab_cache_operation_duration_seconds:p99
    expr: histogram_quantile(0.99, operation:gitlab_cache_operation_duration_seconds_bucket:rate5m)

- name: Unicorn Connections
  interval: 15s
  rules:
  - record: job:unicorn_active_connections:sum
    expr: >
      sum without (fqdn,instance) (
        unicorn_active_connections
      )
  - record: job:unicorn_queued_connections:sum
    expr: >
      sum without (fqdn,instance) (
        unicorn_queued_connections
      )

- name: Unicorn Worker Churn
  interval: 1m
  rules:
  - record: job:unicorn_exceeds_memory_limit_total:rate1m
    expr: >
      sum without (fqdn,instance) (
        rate(unicorn_exceeds_memory_limit_total[1m])
      )
  - record: job:unicorn_killer_terminations_total:rate1m
    expr: >
      sum without (fqdn,instance) (
        rate(unicorn_killer_terminations_total[1m])
      )
  - record: job:unicorn_pid_timeouts_total:rate1m
    expr: >
      sum without (fqdn,instance) (
        rate(unicorn_pid_timeouts_total[1m])
      )

  - record: job:unicorn_process_reaped_total:rate1m
    expr: >
      sum without (fqdn,instance) (
        rate(unicorn_process_reaped_total[1m])
      )

- name: Rails Transactions 1m
  interval: 1m
  rules:
  # Request data, per controller/action.
  - record: controller_action:gitlab_transaction_duration_seconds_count:rate1m
    expr: >
      sum without (fqdn, instance) (
        rate(gitlab_transaction_duration_seconds_count[1m])
      )
  - record: controller_action:gitlab_transaction_duration_seconds_sum:rate1m
    expr: >
      sum without (fqdn, instance) (
        rate(gitlab_transaction_duration_seconds_sum[1m])
    )
  - record: controller_action:gitlab_transaction_duration_seconds_bucket:rate1m
    expr: >
      sum without (fqdn, instance) (
         rate(gitlab_transaction_duration_seconds_bucket[1m])
      )
  - record: controller_action:gitlab_transaction_latency_seconds:rate1m
    expr: >
      controller_action:gitlab_transaction_duration_seconds_sum:rate1m
        /
      controller_action:gitlab_transaction_duration_seconds_count:rate1m
  - record: controller_action:gitlab_transaction_duration_seconds:p95
    expr: histogram_quantile(0.95, controller_action:gitlab_transaction_duration_seconds_bucket:rate1m)
  - record: controller_action:gitlab_transaction_duration_seconds:p99
    expr: histogram_quantile(0.99, controller_action:gitlab_transaction_duration_seconds_bucket:rate1m)
  # Request data, across the board.
  - record: job_environment:gitlab_transaction_duration_seconds_count:rate1m
    expr: >
      sum without (controller,action) (
        controller_action:gitlab_transaction_duration_seconds_count:rate1m
      )
  - record: job_environment:gitlab_transaction_duration_seconds_sum:rate1m
    expr: >
      sum without (controller,action) (
        controller_action:gitlab_transaction_duration_seconds_sum:rate1m
      )
  - record: job_environment:gitlab_transaction_duration_seconds_bucket:rate1m
    expr: >
      sum without (controller,action) (
        controller_action:gitlab_transaction_duration_seconds_bucket:rate1m
      )
  - record: job_environment:gitlab_transaction_duration_latency_seconds:rate1m
    expr: >
      job_environment:gitlab_transaction_duration_seconds_sum:rate1m
        /
      job_environment:gitlab_transaction_duration_seconds_count:rate1m
  - record: job_environment:gitlab_transaction_duration_seconds:p95
    expr: histogram_quantile(0.95, job_environment:gitlab_transaction_duration_seconds_bucket:rate1m)
  - record: job_environment:gitlab_transaction_duration_seconds:p99
    expr: histogram_quantile(0.99, job_environment:gitlab_transaction_duration_seconds_bucket:rate1m)

- name: Rails Transactions 5m
  interval: 1m
  rules:
  # Request data, per controller/action.
  - record: controller_action:gitlab_transaction_duration_seconds_count:rate5m
    expr: sum(rate(gitlab_transaction_duration_seconds_count[5m])) without (fqdn, instance)

  - record: controller_action:gitlab_transaction_duration_seconds_sum:rate5m
    expr: sum(rate(gitlab_transaction_duration_seconds_sum[5m])) without (fqdn, instance)

  - record: controller_action:gitlab_transaction_duration_seconds_bucket:rate5m
    expr: sum(rate(gitlab_transaction_duration_seconds_bucket{type="api"}[5m])) without (fqdn, instance)
  - record: controller_action:gitlab_transaction_duration_seconds_bucket:rate5m
    expr: sum(rate(gitlab_transaction_duration_seconds_bucket{type="git"}[5m])) without (fqdn, instance)
  - record: controller_action:gitlab_transaction_duration_seconds_bucket:rate5m
    expr: sum(rate(gitlab_transaction_duration_seconds_bucket{type="sidekiq"}[5m])) without (fqdn, instance)
  - record: controller_action:gitlab_transaction_duration_seconds_bucket:rate5m
    expr: sum(rate(gitlab_transaction_duration_seconds_bucket{type="web"}[5m])) without (fqdn, instance)

  - record: controller_action:gitlab_transaction_latency_seconds:rate5m
    expr: >
      controller_action:gitlab_transaction_duration_seconds_sum:rate5m
        /
      controller_action:gitlab_transaction_duration_seconds_count:rate5m

  - record: controller_action:gitlab_transaction_duration_seconds:p95
    expr: histogram_quantile(0.95, controller_action:gitlab_transaction_duration_seconds_bucket:rate5m)

  - record: controller_action:gitlab_transaction_duration_seconds:p99
    expr: histogram_quantile(0.99, controller_action:gitlab_transaction_duration_seconds_bucket:rate5m)

  # Request data, across the board.
  - record: job_environment:gitlab_transaction_duration_seconds_count:rate5m
    expr: sum(controller_action:gitlab_transaction_duration_seconds_count:rate5m) without (controller,action)

  - record: job_environment:gitlab_transaction_duration_seconds_sum:rate5m
    expr: sum(controller_action:gitlab_transaction_duration_seconds_sum:rate5m) without (controller,action)

  - record: job_environment:gitlab_transaction_duration_seconds_bucket:rate5m
    expr: sum(controller_action:gitlab_transaction_duration_seconds_bucket:rate5m) without (controller,action)

  - record: job_environment:gitlab_transaction_duration_latency_seconds:rate5m
    expr: >
      job_environment:gitlab_transaction_duration_seconds_sum:rate5m
        /
      job_environment:gitlab_transaction_duration_seconds_count:rate5m

  - record: job_environment:gitlab_transaction_duration_seconds:p95
    expr: histogram_quantile(0.95, job_environment:gitlab_transaction_duration_seconds_bucket:rate5m)

  - record: job_environment:gitlab_transaction_duration_seconds:p99
    expr: histogram_quantile(0.99, job_environment:gitlab_transaction_duration_seconds_bucket:rate5m)

- name: Rails SQL 1m
  interval: 1m
  rules:
  # SQL data, per controller/action.
  - record: controller_action:gitlab_sql_duration_seconds_count:rate1m
    expr: >
      sum without (fqdn, instance) (
        rate(gitlab_sql_duration_seconds_count[1m])
      )
  - record: controller_action:gitlab_sql_duration_seconds_sum:rate1m
    expr: >
      sum without (fqdn, instance) (
        rate(gitlab_sql_duration_seconds_sum[1m])
      )
  - record: controller_action:gitlab_sql_duration_seconds_bucket:rate1m
    expr: >
      sum without (fqdn, instance) (
        rate(gitlab_sql_duration_seconds_bucket[1m])
      )
  - record: controller_action:gitlab_sql_latency_seconds:rate1m
    expr: >
      controller_action:gitlab_sql_duration_seconds_sum:rate1m
        /
      controller_action:gitlab_sql_duration_seconds_count:rate1m
  - record: controller_action:gitlab_sql_duration_seconds:p95
    expr: histogram_quantile(0.95, controller_action:gitlab_sql_duration_seconds_bucket:rate1m)
  - record: controller_action:gitlab_sql_duration_seconds:p99
    expr: histogram_quantile(0.99, controller_action:gitlab_sql_duration_seconds_bucket:rate1m)
  # SQL data, across the board.
  - record: job_environment:gitlab_sql_duration_seconds_sum:rate1m
    expr: >
      sum without (controller, action) (
        controller_action:gitlab_sql_duration_seconds_sum:rate1m
      )
  - record: job_environment:gitlab_sql_duration_seconds_count:rate1m
    expr: >
      sum without (controller, action) (
        controller_action:gitlab_sql_duration_seconds_count:rate1m
      )
  - record: job_environment:gitlab_sql_duration_seconds_bucket:rate1m
    expr: >
      sum without (controller,action) (
        controller_action:gitlab_sql_duration_seconds_bucket:rate1m
      )
  - record: job_environment:gitlab_sql_latency_seconds:rate1m
    expr: >
      job_environment:gitlab_sql_duration_seconds_sum:rate1m
        /
      job_environment:gitlab_sql_duration_seconds_count:rate1m
  - record: job_environment:gitlab_sql_duration_seconds:p95
    expr: histogram_quantile(0.95, job_environment:gitlab_sql_duration_seconds_bucket:rate1m)
  - record: job_environment:gitlab_sql_duration_seconds:p99
    expr: histogram_quantile(0.99, job_environment:gitlab_sql_duration_seconds_bucket:rate1m)

- name: Rails SQL 5m
  interval: 1m
  rules:
  # SQL data, per controller/action.
  - record: controller_action:gitlab_sql_duration_seconds_count:rate5m
    expr: sum(rate(gitlab_sql_duration_seconds_count[5m])) without (fqdn, instance)

  - record: controller_action:gitlab_sql_duration_seconds_sum:rate5m
    expr: sum(rate(gitlab_sql_duration_seconds_sum[5m])) without (fqdn, instance)

  - record: controller_action:gitlab_sql_duration_seconds_bucket:rate5m
    expr: sum(rate(gitlab_sql_duration_seconds_bucket{type="api"}[5m])) without (fqdn, instance)
  - record: controller_action:gitlab_sql_duration_seconds_bucket:rate5m
    expr: sum(rate(gitlab_sql_duration_seconds_bucket{type="git"}[5m])) without (fqdn, instance)
  - record: controller_action:gitlab_sql_duration_seconds_bucket:rate5m
    expr: sum(rate(gitlab_sql_duration_seconds_bucket{type="sidekiq"}[5m])) without (fqdn, instance)
  - record: controller_action:gitlab_sql_duration_seconds_bucket:rate5m
    expr: sum(rate(gitlab_sql_duration_seconds_bucket{type="web"}[5m])) without (fqdn, instance)

  - record: controller_action:gitlab_sql_latency_seconds:rate5m
    expr: >
      controller_action:gitlab_sql_duration_seconds_sum:rate5m
        /
      controller_action:gitlab_sql_duration_seconds_count:rate5m

  - record: controller_action:gitlab_sql_duration_seconds:p95
    expr: histogram_quantile(0.95, controller_action:gitlab_sql_duration_seconds_bucket:rate5m)

  - record: controller_action:gitlab_sql_duration_seconds:p99
    expr: histogram_quantile(0.99, controller_action:gitlab_sql_duration_seconds_bucket:rate5m)

  # SQL data, across the board.
  - record: job_environment:gitlab_sql_duration_seconds_sum:rate5m
    expr: sum(controller_action:gitlab_sql_duration_seconds_sum:rate5m) without (controller, action)

  - record: job_environment:gitlab_sql_duration_seconds_count:rate5m
    expr: sum(controller_action:gitlab_sql_duration_seconds_count:rate5m) without (controller, action)

  - record: job_environment:gitlab_sql_duration_seconds_bucket:rate5m
    expr: sum(controller_action:gitlab_sql_duration_seconds_bucket:rate5m) without (controller,action)

  - record: job_environment:gitlab_sql_latency_seconds:rate5m
    expr: >
      job_environment:gitlab_sql_duration_seconds_sum:rate5m
        /
      job_environment:gitlab_sql_duration_seconds_count:rate5m

  - record: job_environment:gitlab_sql_duration_seconds:p95
    expr: histogram_quantile(0.95, job_environment:gitlab_sql_duration_seconds_bucket:rate5m)

  - record: job_environment:gitlab_sql_duration_seconds:p99
    expr: histogram_quantile(0.99, job_environment:gitlab_sql_duration_seconds_bucket:rate5m)

- name: Rails Gitaly 1m
  interval: 1m
  rules:
  # Gitaly data, per controller/action.
  - record: controller_action:gitaly_duration_seconds_bucket:rate1m
    expr: >
      sum without (fqdn, instance, rpc, gitaly_service) (
        rate(gitaly_controller_action_duration_seconds_bucket[1m])
      )
  - record: controller_action:gitaly_duration_seconds:p95
    expr: histogram_quantile(0.95, controller_action:gitaly_duration_seconds_bucket:rate1m)
  - record: controller_action:gitaly_duration_seconds:p99
    expr: histogram_quantile(0.99, controller_action:gitaly_duration_seconds_bucket:rate1m)

- name: Rails Gitaly 5m
  interval: 1m
  rules:
  # Gitaly data, per controller/action.
  - record: controller_action:gitaly_duration_seconds_bucket:rate5m
    expr: sum(rate(gitaly_controller_action_duration_seconds_bucket[5m])) without(fqdn, instance, rpc, gitaly_service)

  - record: controller_action:gitaly_duration_seconds:p95
    expr: histogram_quantile(0.95, controller_action:gitaly_duration_seconds_bucket:rate5m)

  - record: controller_action:gitaly_duration_seconds:p99
    expr: histogram_quantile(0.99, controller_action:gitaly_duration_seconds_bucket:rate5m)
