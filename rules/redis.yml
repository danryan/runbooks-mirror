groups:
- name: redis.rules
  rules:
  - record: cmd:redis_command_call_duration_seconds_count:irate1m
    expr: >
      sum by (cmd,environment) (
        irate(redis_command_call_duration_seconds_count[1m])
      )
  - record: redis:keyspace_hits:irate1m
    expr: irate(redis_keyspace_hits_total[1m])
  - record: redis:keyspace_misses:irate1m
    expr: irate(redis_keyspace_misses_total[1m])
  - record: redis:net_input_bytes:irate1m
    expr: irate(redis_net_input_bytes_total[1m])
  - record: redis:net_output_bytes:irate1m
    expr: irate(redis_net_output_bytes_total[1m])
  - record: redis:expired_keys:irate1m
    expr: irate(redis_expired_keys_total[1m])
  - record: redis:evicted_keys:irate1m
    expr: irate(redis_evicted_keys_total[1m])
  - record: redis:commands_processed:irate1m
    expr: irate(redis_commands_processed_total[1m])
  - record: redis:connections_received:irate1m
    expr: irate(redis_connections_received_total[1m])
  - record: gitlab:redis_disconnected_slaves
    expr: >
      count without (fqdn, instance, job) (redis_connected_slaves) -
      sum without (fqdn, instance, job) (redis_connected_slaves) -
      1
  - record: gitlab:redis_cluster_nodes:count
    expr: count without (fqdn,instance) (up{job="gitlab-redis"})
  - record: gitlab:redis_master
    expr: redis_connected_slaves > 1
  - record: instance:redis_cpu_usage:rate1m
    expr: >
      sum by (environment, type, fqdn, instance, pod) (
        rate(namedprocess_namegroup_thread_cpu_seconds_total{type=~"redis.*", groupname="redis-server", threadname="redis-server"}[1m]) or rate(container_cpu_usage_seconds_total:labeled{type=~"redis.*"}[1m])
      )
- name: redis.alerts
  rules:
  - alert: SentinelLossOfRedundancy
    for: 15m
    expr: |
      (
      sum by (environment, tier, type, stage, shard) (namedprocess_namegroup_num_procs{groupname="redis-sentinel"})
      /
      count by (environment, tier, type, stage, shard)       (max_over_time(namedprocess_namegroup_num_procs{groupname="redis-sentinel"}[1h]))
      ) < 1
    labels:
      pager: pagerduty
      severity: s2
      alert_type: cause
    annotations:
      title: Less than 100% of sentinel processes running in the {{ $labels.type }} cluster
      description: |
        There should be a single sentinel process per VM in the {{ $labels.type }} cluster.
        This likely means that sentinel has stopped on one of the {{ .Labels.type }} sentinel nodes.
