groups:
- name: haproxy availability
  interval: 60s
  rules:
  - record: instance:haproxy_availability:ratio
    expr: >
      avg_over_time(haproxy_up[1m])
  - record: backend:haproxy_backend_availability:ratio
    expr: >
      avg without (fqdn, instance) (
        avg_over_time(haproxy_backend_up[1m])
      )
  - record: server:haproxy_server_availability:ratio
    expr: >
      avg without (fqdn, instance, backend) (
        avg_over_time(haproxy_server_up[1m])
      )

- name: haproxy traffic
  rules:
  - record: backend_code:haproxy_server_http_responses_total:irate1m
    expr: >
      sum without (fqdn, instance, server) (
        irate(haproxy_server_http_responses_total[1m])
      )
  - record: frontend_code:haproxy_frontend_http_responses_total:irate1m
    expr: >
      sum without (fqdn, instance) (
        irate(haproxy_frontend_http_responses_total[1m])
      )

  - record: job_frontend:haproxy_frontend_bytes_in_total:irate1m
    expr: >
      sum without (fqdn, instance) (
        irate(haproxy_frontend_bytes_in_total[1m])
      )
  - record: job_frontend:haproxy_frontend_bytes_out_total:irate1m
    expr: >
      sum without (fqdn, instance) (
        irate(haproxy_frontend_bytes_out_total[1m])
      )

  - record: job_backend:haproxy_backend_response_errors_total:irate1m
    expr: >
      sum without (fqdn, instance) (
        irate(haproxy_backend_response_errors_total[1m])
      )
  - record: job_frontend:haproxy_frontend_request_errors_total:irate1m
    expr: >
      sum without (fqdn, instance) (
        irate(haproxy_frontend_request_errors_total[1m])
      )

  - alert: HighWebErrorRate
    expr: sum(backend_code:haproxy_server_http_responses_total:irate1m{backend="web",code="5xx",tier="lb"})
      - sum(backend_code:haproxy_server_http_responses_total:irate1m{backend="web",code!="5xx",tier="lb"})
      > 0
    for: 15s
    labels:
      pager: pagerduty
      severity: critical
    annotations:
      description: We are having more 5xx returns than any other reply. Web traffic
        is being impacted and the service is probably down. Have you thought about
        turning it off and on again?
      runbook: troubleshooting/haproxy.md
      title: High Error Rate on Front End Web
  - alert: High4xxApiRateLimit
    expr: sum(backend_code:haproxy_server_http_responses_total:irate1m{backend="api_rate_limit",code="4xx",tier="lb"})
      / sum(backend_code:haproxy_server_http_responses_total:irate1m{tier="lb"})
      > 0.1
    for: 5m
    labels:
      pager: pagerduty
      severity: critical
    annotations:
      description: We are seeing an increase of 4xx errors on the load balancing api
        rate limiting backend, more than 10% of http requests for at least 5 minutes.
      runbook: troubleshooting/haproxy.md
      title: High 4xx Error Rate on Front End Web on backend api_rate_limit
  - alert: High4xxRateLimit
    expr: sum(backend_code:haproxy_server_http_responses_total:irate1m{backend!="registry",code="4xx",tier="lb"})
      / sum(backend_code:haproxy_server_http_responses_total:irate1m{backend!="registry",tier="lb"})
      > 0.25
    for: 5m
    labels:
      pager: pagerduty
      severity: critical
    annotations:
      description: We are seeing an increase of 4xx errors on the load balancing across
        all backends, more than 25% of http requests for at least 5 minutes.
      runbook: troubleshooting/haproxy.md
      title: High 4xx Error Rate on Front End Web
  - alert: IncreasedErrorRateHTTPSGit
    expr: sum(backend_code:haproxy_server_http_responses_total:irate1m{code="5xx",tier="lb",backend="https_git"}) > 20
    for: 15s
    labels:
      pager: pagerduty
      severity: critical
    annotations:
      description: We are having a high rate of 5xx on https_git backend. It's likely that customers are impacted.
      runbook: troubleshooting/high-error-rate.md
      title: Increased Error Rate Across Fleet
  - alert: IncreasedErrorRateOtherBackends
    expr: sum(backend_code:haproxy_server_http_responses_total:irate1m{code="5xx",tier="lb",backend!="https_git"}) by (backend) > 20
    for: 15s
    labels:
      pager: pagerduty
      severity: critical
    annotations:
      description: We are having a high rate of 5xx accross other backends (web(sockets)?/api/registry/etc, anything except https_git). It's likely that customers are impacted.
      runbook: troubleshooting/high-error-rate.md
      title: Increased Error Rate Across Fleet
  - alert: IncreasedBackendConnectionErrors
    expr: rate(haproxy_backend_connection_errors_total[1m]) > .1
    for: 10s
    labels:
      pager: pagerduty
      severity: critical
    annotations:
      description: We are seeing an increase in backend connection errors on {{$labels.fqdn}} for backend {{$labels.backend}}.
        This likely indicates that requests are being sent to servers in a backend that are unable to fulfil them which will
        result in connection errors.
      runbook: troubleshooting/haproxy.md
      title: Increased HAProxy Backend Connection Errors
  - alert: IncreasedServerResponseErrors
    expr: rate(haproxy_server_response_errors_total[1m]) > .5
    for: 10s
    labels:
      pager: pagerduty
      severity: critical
    annotations:
      description: We are seeing an increase in server response errors on {{$labels.fqdn}} for backend/server {{$labels.backend}}/{{$labels.server}}.
        This likely indicates that requests are being sent to servers and there are errors reported to users.
      runbook: troubleshooting/haproxy.md
      title: Increased Server Response Errors
  - alert: IncreasedServerConnectionErrors
    expr: rate(haproxy_server_connection_errors_total[1m]) > .1
    for: 10s
    labels:
      pager: pagerduty
      severity: critical
    annotations:
      description: We are seeing an increase in server connection errors on {{$labels.fqdn}} for backend/server {{$labels.backend}}/{{$labels.server}}.
        This likely indicates that requests are being sent to servers and there are errors reported to users.
      runbook: troubleshooting/haproxy.md
      title: Increased Server Connection Errors
  - alert: HAProxyHighCPU
    expr: rate(haproxy_process_cpu_seconds_total[30s]) > 0.95
    for: 15m
    labels:
      pager: pagerduty
      severity: critical
    annotations:
      description: HAProxy process high CPU usage on {{ $labels.fqdn }}
      runbook: troubleshooting/haproxy.md
      title: HAProxy process high CPU usage on {{ $labels.fqdn }}
