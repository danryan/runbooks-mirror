# WARNING. DO NOT EDIT THIS FILE BY HAND. USE ./rules-jsonnet/service-key-metrics.jsonnet TO GENERATE IT
# YOUR CHANGES WILL BE OVERRIDDEN
groups:
- name: 'Prometheus Intermediate Metrics per feature: redis-sessions - burn-rate 5m'
  interval: 1m
  rules:
  - record: gitlab:component:feature_category:execution:ops:rate_5m
    labels:
      component: primary_server
      feature_category: not_owned
      stage: main
      tier: db
      type: redis-sessions
    expr: |
      sum by (env,environment) (
        rate(redis_commands_processed_total{type="redis-sessions"}[5m]) and on (instance) redis_instance_info{role="master"}
      )
  - record: gitlab:component:feature_category:execution:apdex:success:rate_5m
    labels:
      component: rails_redis_client
      feature_category: not_owned
      stage: main
      tier: db
      type: redis-sessions
    expr: |
      (
        sum by (env,environment) (
          rate(gitlab_redis_client_requests_duration_seconds_bucket{le="0.5",storage="sessions"}[5m])
        )
        +
        sum by (env,environment) (
          rate(gitlab_redis_client_requests_duration_seconds_bucket{le="0.75",storage="sessions"}[5m])
        )
      )
      /
      2
  - record: gitlab:component:feature_category:execution:apdex:weight:score_5m
    labels:
      component: rails_redis_client
      feature_category: not_owned
      stage: main
      tier: db
      type: redis-sessions
    expr: |
      sum by (env,environment) (
        rate(gitlab_redis_client_requests_duration_seconds_bucket{le="+Inf",storage="sessions"}[5m])
      )
  - record: gitlab:component:feature_category:execution:ops:rate_5m
    labels:
      component: rails_redis_client
      feature_category: not_owned
      stage: main
      tier: db
      type: redis-sessions
    expr: |
      sum by (env,environment) (
        rate(gitlab_redis_client_requests_total{storage="sessions"}[5m])
      )
  - record: gitlab:component:feature_category:execution:error:rate_5m
    labels:
      component: rails_redis_client
      feature_category: not_owned
      stage: main
      tier: db
      type: redis-sessions
    expr: |
      (
        sum by (env,environment) (
          rate(gitlab_redis_client_exceptions_total{storage="sessions"}[5m])
        )
      )
      or
      (
        0 * group by(env,environment) (
          gitlab:component:feature_category:execution:ops:rate_5m{component="rails_redis_client",feature_category="not_owned",stage="main",tier="db",type="redis-sessions"}
        )
      )
  - record: gitlab:component:feature_category:execution:ops:rate_5m
    labels:
      component: secondary_servers
      feature_category: not_owned
      stage: main
      tier: db
      type: redis-sessions
    expr: |
      sum by (env,environment) (
        rate(redis_commands_processed_total{type="redis-sessions"}[5m]) and on (instance) redis_instance_info{role="slave"}
      )
- name: 'Prometheus Intermediate Metrics per feature: redis-sessions - burn-rate 30m'
  interval: 2m
  rules:
  - record: gitlab:component:feature_category:execution:ops:rate_30m
    labels:
      component: primary_server
      feature_category: not_owned
      stage: main
      tier: db
      type: redis-sessions
    expr: |
      sum by (env,environment) (
        rate(redis_commands_processed_total{type="redis-sessions"}[30m]) and on (instance) redis_instance_info{role="master"}
      )
  - record: gitlab:component:feature_category:execution:apdex:success:rate_30m
    labels:
      component: rails_redis_client
      feature_category: not_owned
      stage: main
      tier: db
      type: redis-sessions
    expr: |
      (
        sum by (env,environment) (
          rate(gitlab_redis_client_requests_duration_seconds_bucket{le="0.5",storage="sessions"}[30m])
        )
        +
        sum by (env,environment) (
          rate(gitlab_redis_client_requests_duration_seconds_bucket{le="0.75",storage="sessions"}[30m])
        )
      )
      /
      2
  - record: gitlab:component:feature_category:execution:apdex:weight:score_30m
    labels:
      component: rails_redis_client
      feature_category: not_owned
      stage: main
      tier: db
      type: redis-sessions
    expr: |
      sum by (env,environment) (
        rate(gitlab_redis_client_requests_duration_seconds_bucket{le="+Inf",storage="sessions"}[30m])
      )
  - record: gitlab:component:feature_category:execution:ops:rate_30m
    labels:
      component: rails_redis_client
      feature_category: not_owned
      stage: main
      tier: db
      type: redis-sessions
    expr: |
      sum by (env,environment) (
        rate(gitlab_redis_client_requests_total{storage="sessions"}[30m])
      )
  - record: gitlab:component:feature_category:execution:error:rate_30m
    labels:
      component: rails_redis_client
      feature_category: not_owned
      stage: main
      tier: db
      type: redis-sessions
    expr: |
      (
        sum by (env,environment) (
          rate(gitlab_redis_client_exceptions_total{storage="sessions"}[30m])
        )
      )
      or
      (
        0 * group by(env,environment) (
          gitlab:component:feature_category:execution:ops:rate_30m{component="rails_redis_client",feature_category="not_owned",stage="main",tier="db",type="redis-sessions"}
        )
      )
  - record: gitlab:component:feature_category:execution:ops:rate_30m
    labels:
      component: secondary_servers
      feature_category: not_owned
      stage: main
      tier: db
      type: redis-sessions
    expr: |
      sum by (env,environment) (
        rate(redis_commands_processed_total{type="redis-sessions"}[30m]) and on (instance) redis_instance_info{role="slave"}
      )
- name: 'Prometheus Intermediate Metrics per feature: redis-sessions - burn-rate 1h'
  interval: 1m
  rules:
  - record: gitlab:component:feature_category:execution:ops:rate_1h
    labels:
      component: primary_server
      feature_category: not_owned
      stage: main
      tier: db
      type: redis-sessions
    expr: |
      sum by (env,environment) (
        rate(redis_commands_processed_total{type="redis-sessions"}[1h]) and on (instance) redis_instance_info{role="master"}
      )
  - record: gitlab:component:feature_category:execution:apdex:success:rate_1h
    labels:
      component: rails_redis_client
      feature_category: not_owned
      stage: main
      tier: db
      type: redis-sessions
    expr: |
      (
        sum by (env,environment) (
          rate(gitlab_redis_client_requests_duration_seconds_bucket{le="0.5",storage="sessions"}[1h])
        )
        +
        sum by (env,environment) (
          rate(gitlab_redis_client_requests_duration_seconds_bucket{le="0.75",storage="sessions"}[1h])
        )
      )
      /
      2
  - record: gitlab:component:feature_category:execution:apdex:weight:score_1h
    labels:
      component: rails_redis_client
      feature_category: not_owned
      stage: main
      tier: db
      type: redis-sessions
    expr: |
      sum by (env,environment) (
        rate(gitlab_redis_client_requests_duration_seconds_bucket{le="+Inf",storage="sessions"}[1h])
      )
  - record: gitlab:component:feature_category:execution:ops:rate_1h
    labels:
      component: rails_redis_client
      feature_category: not_owned
      stage: main
      tier: db
      type: redis-sessions
    expr: |
      sum by (env,environment) (
        rate(gitlab_redis_client_requests_total{storage="sessions"}[1h])
      )
  - record: gitlab:component:feature_category:execution:error:rate_1h
    labels:
      component: rails_redis_client
      feature_category: not_owned
      stage: main
      tier: db
      type: redis-sessions
    expr: |
      (
        sum by (env,environment) (
          rate(gitlab_redis_client_exceptions_total{storage="sessions"}[1h])
        )
      )
      or
      (
        0 * group by(env,environment) (
          gitlab:component:feature_category:execution:ops:rate_1h{component="rails_redis_client",feature_category="not_owned",stage="main",tier="db",type="redis-sessions"}
        )
      )
  - record: gitlab:component:feature_category:execution:ops:rate_1h
    labels:
      component: secondary_servers
      feature_category: not_owned
      stage: main
      tier: db
      type: redis-sessions
    expr: |
      sum by (env,environment) (
        rate(redis_commands_processed_total{type="redis-sessions"}[1h]) and on (instance) redis_instance_info{role="slave"}
      )
