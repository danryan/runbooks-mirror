groups:
- name: Gitaly grpc handled
  interval: 1m
  rules:
  - record: gitaly_grpc:grpc_server_handled_total:rate1m
    expr: >
      sum without (fqdn,instance) (
        rate(grpc_server_handled_total{job="gitaly"}[1m])
      )
  - record: gitaly:grpc_server_handled_total:rate1m
    expr: >
      sum without (grpc_code) (
        gitaly_grpc:grpc_server_handled_total:rate1m
      )
  - record: gitaly:grpc_server_handled_total:error_rate1m
    expr: gitaly_grpc:grpc_server_handled_total:rate1m{grpc_code!="OK",grpc_code!="Canceled",grpc_code!="NotFound"}
  - record: gitaly:grpc_server_handled_total:instance_error_rate1m
    expr: >
      sum without (grpc_code, grpc_method, grpc_service, grpc_type) (
        rate(grpc_server_handled_total{job="gitaly",grpc_code!="OK"}[1m])
      )

- name: Gitaly grpc server handling buckets
  interval: 1m
  rules:
  - record: gitaly_instance:grpc_server_handling_seconds_bucket:rate1m
    expr: >
      sum without (grpc_service, grpc_type) (
        rate(grpc_server_handling_seconds_bucket{job="gitaly"}[1m])
      )
  - record: gitaly:grpc_server_handling_seconds_bucket:rate1m
    expr: >
      sum without (fqdn, instance) (
        gitaly_instance:grpc_server_handling_seconds_bucket:rate1m
      )
  - record: gitaly:grpc_server_handling_seconds:p95
    expr: >
      histogram_quantile(0.95,
        sum without (grpc_method) (
          gitaly_instance:grpc_server_handling_seconds_bucket:rate1m
        )
      )
  - record: gitaly:grpc_server_handling_seconds:p50
    expr: >
      histogram_quantile(0.5,
        sum without (grpc_method) (
          gitaly_instance:grpc_server_handling_seconds_bucket:rate1m
        )
      )

- name: Gitaly grpc server handled
  rules:
  - record: gitaly_instance_grpc_method_code:grpc_server_handled_total:irate1m
    expr: >
      sum without (fqdn, instance, grpc_service, grpc_type) (
        irate(grpc_server_handled_total{job="gitaly"}[1m])
      )

- name: Gitaly grpc misc
  interval: 1m
  rules:
  - record: gitaly:grpc_server_handling_seconds:avg5m
    expr: >
       avg without (fqdn, instance, grpc_service, grpc_type) (
         rate(grpc_server_handling_seconds_sum{job="gitaly"}[5m])
           /
         rate(grpc_server_handling_seconds_count{job="gitaly"}[5m]) > 0
       )
  - record: instance:gitaly_grpc_errors_total:rate1m
    expr: >
      sum without (grpc_method, grpc_type, grpc_service, grpc_code) (
        rate(grpc_server_handled_total{job="gitaly",grpc_code!="OK"}[1m])
      )

- name: Gitaly rate limiting
  rules:
  - record: gitaly:gitaly_rate_limiting_queued:grpc_method
    expr: sum(gitaly_rate_limiting_queued) by (environment, grpc_method, job)

- name: Gitaly misc alerts
  rules:
  - alert: GCPScheduledSnapshotMissingForGitaly
    expr: |
      count(up{type="gitaly", job="gitaly", env="gprd", shard!="praefect"} == 1) > count(present_over_time(stackdriver_gce_disk_logging_googleapis_com_user_scheduled_snapshots{env="gprd", disk_name=~"(file|gitaly)-.*-stor-gprd-data$"}[2h]))
    for: 1h
    labels:
      severity: s2
      pager: pagerduty
      alert_type: cause
      type: gitaly
    annotations:
      description: Recent GCP scheduled snapshot are missing for one or more disks. Please follow the runbook to review the problem.
      runbook: docs/disaster-recovery/gcp-snapshots.md
      title: GCP scheduled snapshots are missing for at least one Gitaly data disk in Production
      promql_template_1: present_over_time(stackdriver_gce_disk_logging_googleapis_com_user_scheduled_snapshots{env="gprd", disk_name=~"(file|gitaly)-.*-stor-gprd-data$"}[2h]) == 0
