groups:
- name: Gitaly grpc handled
  interval: 1m
  rules:
  - record: gitaly_grpc:grpc_server_handled_total:rate1m
    expr: >
      sum without (fqdn,instance) (
        rate(grpc_server_handled_total{job="gitaly"}[1m])
      )
  - record: gitaly:grpc_server_handled_total:rate1m
    expr: >
      sum without (grpc_code) (
        gitaly_grpc:grpc_server_handled_total:rate1m
      )
  - record: gitaly:grpc_server_handled_total:error_rate1m
    expr: gitaly_grpc:grpc_server_handled_total:rate1m{grpc_code!="OK",grpc_code!="Canceled",grpc_code!="NotFound"}
  - record: gitaly:grpc_server_handled_total:instance_error_rate1m
    expr: >
      sum without (grpc_code, grpc_method, grpc_service, grpc_type) (
        rate(grpc_server_handled_total{job="gitaly",grpc_code!="OK"}[1m])
      )
  - alert: GitalyInstanceErrorRateTooHigh
    expr: gitaly:grpc_server_handled_total:instance_error_rate1m > 5
    for: 5m
    labels:
      channel: g_create_gitaly
      pager: pagerduty
      severity: s1
    annotations:
      description: Gitaly error rate for the last 5 minutes is over 5 on {{$labels.instance}}.
        Check Gitaly logs and consider disabling it on that host.
      runbook: troubleshooting/gitaly-error-rate.md
      title: 'Gitaly error rate is too high: {{$value | printf "%.2f" }}'

- name: Gitaly grpc server handling buckets
  interval: 1m
  rules:
  - record: gitaly_instance:grpc_server_handling_seconds_bucket:rate1m
    expr: >
      sum without (grpc_service, grpc_type) (
        rate(grpc_server_handling_seconds_bucket{job="gitaly"}[1m])
      )
  - record: gitaly:grpc_server_handling_seconds_bucket:rate1m
    expr: >
      sum without (fqdn, instance) (
        gitaly_instance:grpc_server_handling_seconds_bucket:rate1m
      )
  - record: gitaly:grpc_server_handling_seconds:p95
    expr: >
      histogram_quantile(0.95,
        sum without (grpc_method) (
          gitaly_instance:grpc_server_handling_seconds_bucket:rate1m
        )
      )
  - record: gitaly:grpc_server_handling_seconds:p50
    expr: >
      histogram_quantile(0.5,
        sum without (grpc_method) (
          gitaly_instance:grpc_server_handling_seconds_bucket:rate1m
        )
      )

- name: Gitaly grpc server handled
  rules:
  - record: gitaly_instance_grpc_method_code:grpc_server_handled_total:irate1m
    expr: >
      sum without (fqdn, instance, grpc_service, grpc_type) (
        irate(grpc_server_handled_total{job="gitaly"}[1m])
      )

- name: Gitaly grpc misc
  interval: 1m
  rules:
  - record: gitaly:grpc_server_handling_seconds:avg5m
    expr: >
       avg without (fqdn, instance, grpc_service, grpc_type) (
         rate(grpc_server_handling_seconds_sum{job="gitaly"}[5m])
           /
         rate(grpc_server_handling_seconds_count{job="gitaly"}[5m]) > 0
       )
  - record: instance:gitaly_grpc_errors_total:rate1m
    expr: >
      sum without (grpc_method, grpc_type, grpc_service, grpc_code) (
        rate(grpc_server_handled_total{job="gitaly",grpc_code!="OK"}[1m])
      )

- name: Gitaly rate limiting
  rules:
  - record: gitaly:gitaly_rate_limiting_queued:grpc_method
    expr: sum(gitaly_rate_limiting_queued) by (environment, grpc_method, job)

- name: Gitaly misc alerts
  rules:
  - alert: GitalyFileServerDown
    expr: up{job="gitaly",tier="stor",type="gitaly"} == 0
    for: 1m
    labels:
      channel: g_create_gitaly
      pager: pagerduty
      severity: s1
    annotations:
      description: Gitaly has been marked as down for the past minute on {{$labels.instance}}.
        Check Gitaly logs and restart the process if necessary
      runbook: troubleshooting/gitaly-down.md
      title: Gitaly is down on {{ $labels.fqdn }}
  - alert: GitalyVersionMismatch
    expr: >
      count(
        sum by (environment, version) (
          gitlab_build_info{tier="stor",type="gitaly"}
        ) > 0
      ) == 2
    for: 30m
    labels:
      channel: g_create_gitaly
      pager: pagerduty
      severity: s1
    annotations:
      description: During a deployment, two distinct versions of Gitaly may be running
        alongside one another, but this should not be the case for more than 30m.
        Visit https://dashboards.gitlab.net/dashboard/db/gitaly-version-tracker?orgId=1
        for details of versions deployed across the fleet.
      runbook: troubleshooting/gitaly-version-mismatch.md
      title: 'Gitaly: two versions of Gitaly have been running alongside one another
        in production for more than 30 minutes'
  - alert: GitalyVersionMismatchSevere
    expr: >
      count(
        sum by (environment, version) (
         gitlab_build_info{tier="stor",type="gitaly"}
        ) > 0
      ) > 2
    for: 1m
    labels:
      channel: g_create_gitaly
      pager: pagerduty
      severity: s1
    annotations:
      description: Three of more versions of Gitaly are currently running alongside
        one another in production. This should never occur and indicates serious deployment
        failures. Visit https://dashboards.gitlab.net/dashboard/db/gitaly-version-tracker?orgId=1
        for details of versions deployed across the fleet.
      runbook: troubleshooting/gitaly-version-mismatch.md
      title: 'Gitaly: multiple versions of Gitaly are currently running in production'
  - alert: GitalyPermissionDenied
    expr: sum(gitaly_grpc:grpc_server_handled_total:rate1m{grpc_code="PermissionDenied"}) > 10
    for: 10s
    labels:
      channel: g_create_gitaly
      pager: pagerduty
      severity: s1
    annotations:
      description: Gitaly authention failing, authentication tokens might be misconfigured, or severe clockdrift is occurring.
      runbook: troubleshooting/gitaly-permission-denied.md
      title: 'Gitaly: Auth-tokens are invalid, failing RPCs'


- name: Misc Gitaly Alerts
  rules:
  - alert: GitalyPubSubSendRateLow
    expr: |
      stackdriver_pubsub_topic_pubsub_googleapis_com_topic_send_message_operation_count{topic_id="pubsub-gitaly-inf-gprd"} / 60 < 100
    for: 5m
    labels:
      channel: g_create_gitaly
      severity: s4
    annotations:
      description: >
        Reach out to the Gitaly team, ensure logging is set properly.
      runbook: troubleshooting/gitaly-pubsub.md
      title: Gitaly PubSub send operation is low

  - alert: GitLabComLatencyGitalyCritical
    expr: gitaly:grpc_server_handling_seconds:p95 >= 60
    for: 5m
    labels:
      pager: pagerduty
      severity: s1
    annotations:
      description: Reach out to the Gitaly team and mitigate the problem restarting
        gitaly on the affected node if it's causing a partial outage.
      runbook: troubleshooting/gitaly-latency.md
      title: Gitaly latency on {{ $labels.fqdn }} has been over 1m during the last 5m

  - alert: GitalyNewVersionDeployed
    expr: |
      sum by (version) (
        gitlab_build_info{job="gitaly",type="gitaly"})
          unless (
            sum by (version) (gitlab_build_info{job="gitaly",type="gitaly"} offset 1h
          )
      ) > 2
    for: 5m
    labels:
      channel: g_create_gitaly
      severity: s4
    annotations:
      title: New Gitaly version is being deployed
      description: >
        Gitaly version {{ $labels.version }} is being deployed to {{ $labels.environment }} (stage {{ $labels.stage }}).

