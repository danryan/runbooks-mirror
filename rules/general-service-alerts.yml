groups:
  - name: slo_alerts.rules
    rules:
      # Warn: Latency SLO not being met
      - alert: service_apdex_slo_out_of_bounds_lower_5m
        expr: |
          avg(gitlab_service_apdex:ratio) by (environment, tier, type, stage)
          < ignoring(environment, stage) group_left
            avg(slo:min:gitlab_service_apdex:ratio) by (tier, type)
        for: 5m
        labels:
          rules_domain: general
          metric: gitlab_service_apdex:ratio
          severity: warn
          period: 5m
          bound: lower
        annotations:
          description: |
            The `{{ $labels.type }}` service (`{{ $labels.stage }}` stage) is not meeting its latency SLOs

            The service is taking longer to respond to requests than usual. This could be caused by
            user abuse, application changes in upstream services that lead to higher request rates or slower
            requested, or slowdown in downstream services. Check operation rates in upstream and downstream
            services, error rates and check ELK for abuse.
          runbook: "troubleshooting/service-{{ $labels.type }}.md"
          title: "The `{{ $labels.type }}` service (`{{ $labels.stage }}` stage) has a apdex score (latency) below SLO"
          grafana_dashboard_id: "26q8nTzZz/service-platform-metrics"
          grafana_panel_id: "5"
          grafana_variables: "environment,type,stage"
          grafana_min_zoom_hours: 6
          link1_title: "Definition"
          link1_url: "https://gitlab.com/gitlab-com/runbooks/blob/master/troubleshooting/definition-service-apdex.md"
          promql_template_1: 'gitlab_service_apdex:ratio{type="$type", stage="$stage"}'
          promql_template_2: 'gitlab_component_apdex:ratio{type="$type", stage="$stage"}'

      # Warn: Error ratio SLO not being met
      - alert: service_apdex_slo_out_of_bounds_lower_5m
        expr: |
          avg(gitlab_service_errors:ratio) by (environment, tier, type, stage)
          > ignoring(environment, stage) group_left
          avg(slo:max:gitlab_service_errors:ratio) by (tier, type)
        for: 5m
        labels:
          rules_domain: general
          metric: gitlab_service_errors:ratio
          severity: warn
          period: 5m
          bound: lower
        annotations:
          description: |
            The `{{ $labels.type }}` service (`{{ $labels.stage }}` stage) has an error-ratio higher than SLOs

            A high proportion of requests to the `{{ $labels.type }}` service are resulting in errors.
            This ratio is higher than the defined SLO for the service.
          runbook: "troubleshooting/service-{{ $labels.type }}.md"
          title: "The `{{ $labels.type }}` service (`{{ $labels.stage }}` stage) has an error-ratio exceeding SLO"
          grafana_dashboard_id: "26q8nTzZz/service-platform-metrics"
          grafana_panel_id: "6"
          grafana_variables: "environment,type,stage"
          grafana_min_zoom_hours: 6
          link1_title: "Definition"
          link1_url: "https://gitlab.com/gitlab-com/runbooks/blob/master/troubleshooting/definition-service-error-rate.md"
          promql_template_1: 'gitlab_service_errors:ratio{type="$type", stage="$stage"}'
          promql_template_2: 'gitlab_component_errors:ratio{type="$type", stage="$stage"}'

  - name: service_availability.rules
    rules:
      ################################################
      # Availability: what ratio of the expected number of service processes are healthy?
      ################################################

      # Warn: Availability below 75%
      - alert: service_availability_out_of_bounds_lower_5m
        expr: |
          gitlab_service_availability:ratio
          <
          0.75
        for: 5m
        labels:
          rules_domain: general
          metric: gitlab_service_availability:ratio
          severity: warn
          period: 5m
          bound: lower
          threshold_value: "0.75"
        annotations:
          description: |
            The ratio of services that are available to serve the `{{ $labels.type }}` service (`{{ $labels.stage }}` stage)
            is unusually low, and a unusually large proportion of the fleet is not responding.

            This may be caused the service crashing and restarting due to segfaults, memory pressure,
            application errors. Check error rate metrics, application logs, sentry for root cause.
          runbook: "troubleshooting/service-{{ $labels.type }}.md"
          title: "The `{{ $labels.type }}` service (`{{ $labels.stage }}` stage) is less available than normal"
          grafana_dashboard_id: "26q8nTzZz/service-platform-metrics"
          grafana_panel_id: "7"
          grafana_variables: "environment,type,stage"
          grafana_min_zoom_hours: 12
          link1_title: "Definition"
          link1_url: "https://gitlab.com/gitlab-com/runbooks/blob/master/troubleshooting/definition-service-availability.md"
          promql_template_1: 'gitlab_service_availability:ratio{type="$type", stage="$stage"}'
          promql_template_2: 'gitlab_component_availability:ratio{type="$type", stage="$stage"}'

      # Error: Availability below 50%
      - alert: service_availability_out_of_bounds_lower_5m
        expr: |
          gitlab_service_availability:ratio
          <
          0.5
        for: 5m
        labels:
          rules_domain: general
          metric: gitlab_service_availability:ratio
          severity: error
          period: 5m
          bound: lower
          threshold_value: "0.5"
        annotations:
          description: |
            The ratio of services that are available to serve the `{{ $labels.type }}` service (`{{ $labels.stage }}` stage)
            is unusually low, and a unusually large proportion of the fleet is not responding.

            This may be caused the service crashing and restarting due to segfaults, memory pressure,
            application errors. Check error rate metrics, application logs, sentry for root cause.
          runbook: "troubleshooting/service-{{ $labels.type }}.md"
          title: "The `{{ $labels.type }}` service is less available than normal"
          grafana_dashboard_id: "26q8nTzZz/service-platform-metrics"
          grafana_panel_id: "7"
          grafana_variables: "environment,type,stage"
          grafana_min_zoom_hours: 12
          link1_title: "Definition"
          link1_url: "https://gitlab.com/gitlab-com/runbooks/blob/master/troubleshooting/definition-service-availability.md"
          promql_template_1: 'gitlab_service_availability:ratio{type="$type", stage="$stage"}'
          promql_template_2: 'gitlab_component_availability:ratio{type="$type", stage="$stage"}'

      ################################################
      # Operation Rate: how many operations is this service handling per second?
      ################################################

      # ------------------------------------
      # Upper bound thresholds exceeded
      # ------------------------------------

      # Warn: Operation rate above 2 sigma
      - alert: service_ops_out_of_bounds_upper_5m
        expr: |
          (
            (gitlab_service_ops:rate -  gitlab_service_ops:rate:prediction) /
            gitlab_service_ops:rate:stddev_over_time_1w
          )
          >
          3
        for: 5m
        labels:
          rules_domain: general
          metric: gitlab_service_ops:rate
          severity: warn
          period: 5m
          bound: upper
          threshold_sigma: "3"
        annotations:
          description: |
            The `{{ $labels.type }}` service (`{{ $labels.stage }}` stage) is receiving more requests than normal.

            This is often caused by user generated traffic, sometimes abuse. It can also be cause by
            application changes that lead to higher operations rates or from retries in the event of
            errors. Check the abuse reporting watches in Elastic, ELK for possible abuse,
            error rates (possibly on upstream services) for root cause.
          runbook: "troubleshooting/service-{{ $labels.type }}.md"
          title: "Anomaly detection: The `{{ $labels.type }}` service (`{{ $labels.stage }}` stage) is receiving more requests than normal"
          grafana_dashboard_id: "26q8nTzZz/service-platform-metrics"
          grafana_panel_id: "8"
          grafana_variables: "environment,type,stage"
          grafana_min_zoom_hours: 12
          link1_title: "Definition"
          link1_url: "https://gitlab.com/gitlab-com/runbooks/blob/master/troubleshooting/definition-service-ops-rate.md"
          promql_template_1: 'gitlab_service_ops:rate{type="$type", stage="$stage"}'
          promql_template_2: 'gitlab_component_ops:rate{type="$type", stage="$stage"}'

      # ------------------------------------
      # Lower bound thresholds exceeded
      # ------------------------------------

      # Warn: Operation rate below 2 sigma
      - alert: service_ops_out_of_bounds_lower_5m
        expr: |
          (
            (gitlab_service_ops:rate -  gitlab_service_ops:rate:prediction) /
            gitlab_service_ops:rate:stddev_over_time_1w
          )
          <
          -3
        for: 5m
        labels:
          rules_domain: general
          metric: gitlab_service_ops:rate
          severity: warn
          period: 5m
          bound: lower
          threshold_sigma: "3"
        annotations:
          description: |
            The `{{ $labels.type }}` service (`{{ $labels.stage }}` stage) is receiving fewer requests than normal.

            This is often caused by a failure in an upstream service - for example, an upstream load balancer rejected
            all incoming traffic. In many cases, this is as serious or more serious than a traffic spike. Check
            upstream services for errors that may be leading to traffic flow issues in downstream services.
          runbook: "troubleshooting/service-{{ $labels.type }}.md"
          title: "Anomaly detection: The `{{ $labels.type }}` service (`{{ $labels.stage }}` stage) is receiving fewer requests than normal"
          grafana_dashboard_id: "26q8nTzZz/service-platform-metrics"
          grafana_panel_id: "8"
          grafana_variables: "environment,type,stage"
          grafana_min_zoom_hours: 12
          link1_title: "Definition"
          link1_url: "https://gitlab.com/gitlab-com/runbooks/blob/master/troubleshooting/definition-service-ops-rate.md"
          promql_template_1: 'gitlab_service_ops:rate{type="$type", stage="$stage"}'
          promql_template_2: 'gitlab_component_ops:rate{type="$type", stage="$stage"}'
