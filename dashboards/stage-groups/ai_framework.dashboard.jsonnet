// This file is autogenerated using scripts/update_stage_groups_dashboards.rb
// Please feel free to customize this file.
local stageGroupDashboards = import './stage-group-dashboards.libsonnet';
local grafana = import 'github.com/grafana/grafonnet-lib/grafonnet/grafana.libsonnet';
local basic = import 'grafana/basic.libsonnet';
local layout = import 'grafana/layout.libsonnet';

stageGroupDashboards.dashboard('ai_framework')
.stageGroupDashboardTrailer()
.addPanel(
  grafana.row.new(title='Metrics for Gitlab Duo chat'),
  gridPos={ x: 0, y: 1000, w: 24, h: 1 }
)
.addPanels(
  layout.grid([
    basic.timeseries(
      title='Rate of chat answers by last used tool',
      description='The total rate of chat answers by tool which was used as the last one.',
      query=|||
        sum by(tool) (rate(gitlab_sli_llm_chat_answers_apdex_total[$__rate_interval]))
      |||,
      legendFormat='last used tool {{ tool }}',
      yAxisLabel='Rate per second',
    ),
    basic.timeseries(
      title='Success ratio of chat answers by tool',
      description='Ratio of success (not error) answers by tool.',
      query=|||
        sum by(tool) (rate(gitlab_sli_llm_chat_answers_apdex_success_total[$__rate_interval]))/sum by(tool) (rate(gitlab_sli_llm_chat_answers_apdex_total[$__rate_interval]))
      |||,
      legendFormat='{{ tool }} operation',
      yAxisLabel='Rate per second',
    )
  ], cols=2, startRow=1001)
)
.addPanel(
  grafana.row.new(title='Metrics for AI provider requests'),
  gridPos={ x: 0, y: 1002, w: 24, h: 1 }
)
.addPanels(
  layout.grid([
    basic.timeseries(
      title='Rate of AI provider requests',
      description='The total rate of AI requests by provider.',
      query=|||
        sum by(client) (rate(gitlab_sli_llm_client_request_apdex_total[$__rate_interval]))
      |||,
      legendFormat='{{ client }}',
      yAxisLabel='Rate per second',
    ),
    basic.timeseries(
      title='Success ratio of AI provider requests',
      description='Ratio of AI provider success requests.',
      query=|||
        sum by(client) (rate(gitlab_sli_llm_client_request_apdex_success_total[$__rate_interval]))/sum by(client) (rate(gitlab_sli_llm_client_request_apdex_total[$__rate_interval]))
      |||,
      legendFormat='{{ client }}',
      yAxisLabel='Rate per second',
    )
  ], cols=2, startRow=1003)
)

