// This file is autogenerated using scripts/update_stage_groups_dashboards.rb
// Please feel free to customize this file.
local stageGroupDashboards = import './stage-group-dashboards.libsonnet';
local grafana = import 'github.com/grafana/grafonnet-lib/grafonnet/grafana.libsonnet';
local basic = import 'grafana/basic.libsonnet';
local layout = import 'grafana/layout.libsonnet';

stageGroupDashboards.dashboard('continuous_integration')
.addPanel(
  grafana.row.new(title='Metrics for build logs'),
  gridPos={ x: 0, y: 1000, w: 24, h: 1 }
)
.addPanels(
  layout.grid([
    grafana.text.new(
      title='Understanding metrics for CI/CD build logs',
      mode='markdown',
      content=|||
        These panels show basic metrics for CI/CD build logs.

        You can read more about what each individual operation (like `streamed`,
        `corrupted`) means by looking at the definition of these metrics in
        [gitlab/trace/metrics.rb][metrics-definition] file.

        [metrics-definition]: https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/trace/metrics.rb#L9
      |||
    ),
    basic.timeseries(
      title='Rate of build logs streamed events',
      description='The total rate of partial build logs received by GitLab',
      query=|||
        sum(rate(gitlab_ci_trace_operations_total{operation="streamed", environment="$environment"}[$__interval])) by (operation)
      |||,
      legendFormat='build logs {{ operation }} by runners',
      yAxisLabel='Rate per second',
    ),
    basic.timeseries(
      title='Rate of invalid build logs detected',
      description='The total rate of invalid build logs detected (including mutated ones).',
      query=|||
        sum(rate(gitlab_ci_trace_operations_total{operation="invalid", environment="$environment"}[$__interval])) by (operation)
      |||,
      legendFormat='{{ operation }} build logs',
      yAxisLabel='Rate per second',
    ),
    basic.timeseries(
      title='Rate of corrupted build logs detected',
      description='The total rate of corrupted build logs detected.',
      query=|||
        sum(increase(gitlab_ci_trace_operations_total{operation="corrupted", environment="$environment"}[$__interval])) by (operation)
      |||,
      legendFormat='{{ operation }} build logs',
      yAxisLabel='Rate per second',
    ),
    basic.timeseries(
      title='All metrics for build logs',
      description='The rate of different operations happening related to build logs.',
      query=|||
        sum(rate(gitlab_ci_trace_operations_total{environment="$environment"}[$__interval])) by (operation)
      |||,
      legendFormat='{{ operation }} operation',
      yAxisLabel='Rate per second',
    ),
    basic.timeseries(
      title='Build logs being sent from the runners',
      description='Byterate of build logs being sent from the runners.',
      query=|||
        sum(rate(gitlab_ci_trace_bytes_total{environment="$environment"}[$__interval]))
      |||,
      format='Bps',
      legendFormat='build logs received',
      yAxisLabel='Bytes received per second',
    ),
  ], cols=2, startRow=1001)
)
.stageGroupDashboardTrailer()
