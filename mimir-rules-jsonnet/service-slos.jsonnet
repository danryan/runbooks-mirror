local separateMimirRecordingFiles = (import 'recording-rules/lib/mimir/separate-mimir-recording-files.libsonnet').separateMimirRecordingFiles;
local serviceSlosRules = import 'recording-rules/service-slos.libsonnet';
local services = (import 'gitlab-metrics-config.libsonnet').monitoredServices;

local outputPromYaml(groups) =
  std.manifestYamlDoc({
    groups: groups,
  });

local rulesWithThanosRulerLabel = std.map(
  function(rule)
    local originalLabels = rule.labels;
    rule {
      // temporary solution until we move away from Thanos Ruler completely
      labels: originalLabels { monitor: 'global' },
    }
  ,
  serviceSlosRules.rules(services)
);

separateMimirRecordingFiles(
  function(service, selector, extraArgs)
    {
      'service-slos': outputPromYaml([{
        name: 'Autogenerated Service SLOs',
        interval: '5m',
        rules: rulesWithThanosRulerLabel,
      }]),
    }
)
