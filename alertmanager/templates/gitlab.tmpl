{{ define "gitlab.title" }}
    {{- if .GroupLabels.type -}}
        {{- printf "%s - Service %s (%s)" .Status .GroupLabels.type .CommonLabels.env -}}
    {{- else -}}
        {{- printf "%s - %s (%s)" .Status .CommonAnnotations.title .CommonLabels.env -}}
    {{- end -}}
{{ end }}

{{ define "gitlab.text" }}
    {{- if eq .Status "firing" -}}
        {{- printf ":fire: Alerts :fire:\n" -}}

        {{- range .Alerts -}}
            {{/* If we have a Grafana datasource ID the alert has come from Mimir so link to Grafana's explore page */}}
            {{- if and .Annotations.grafana_datasource_id .GeneratorURL -}}
                {{/* First we need to pull the query expression from the generator URL */}}
                {{- $expr := (.GeneratorURL | reReplaceAll ".*expr=" "" | reReplaceAll "&g0.*" "" | reReplaceAll "%7B" "{" | reReplaceAll "%3D" "=" | reReplaceAll "%3E" ">" | reReplaceAll "%3C" "<" | reReplaceAll "%22" "\"" | reReplaceAll "%2C" "," | reReplaceAll "%21" "!" | reReplaceAll "%7D" "}" | reReplaceAll "\\+" " " | reReplaceAll "%2A" "*" | reReplaceAll "%2F" "/" | reReplaceAll "%28" "(" | reReplaceAll "%29" ")" | reReplaceAll "%5E" "^" | reReplaceAll "%5B" "[" | reReplaceAll "%5D" "]" | reReplaceAll `"` `\"`) -}}
                {{/* Then we need to insert the query expression into the panes JSON object that Grafana expects and URL encode it */}}
                {{- $panes := urlquery (printf `{"00v":{"datasource":"%s","queries":[{"refId":"A","expr":"%s","range":true,"instant":true,"datasource":{"type":"prometheus","uid":"%s"},"editorMode":"code"}],"range":{"from":"now-1h","to":"now"}}}` .Annotations.grafana_datasource_id $expr .Annotations.grafana_datasource_id) -}}
                {{/* Finally we build the link to the Grafana explore page */}}
                {{- printf "*<https://dashboards.gitlab.net/explore?schemaVersion=1&orgId=1&panes=%s|%s>*\n" $panes .Labels.alertname -}}
            {{- else if .GeneratorURL -}}
                {{- printf "*<%s|%s>*" .GeneratorURL .Labels.alertname -}}
            {{- else -}}
                {{- printf "*%s*" .Labels.alertname -}}
            {{- end -}}

            {{/* If we don't have a Grafana datasource ID fall back to the Thanos link */}}
            {{- if or (eq .Annotations.grafana_datasource_id nil) (eq .Annotations.grafana_datasource_id "") }}
                {{- if .Annotations.promql_template_1 -}}
                    {{- printf " :point_right: <https://thanos.gitlab.net/graph?g0.expr=%s|Thanos Graph>\n" (.Annotations.promql_template_1 | urlquery) -}}
                {{- else -}}
                    {{- printf "\n" -}}
                {{- end -}}
            {{- end -}}

            {{- printf "%s\n\n" .Annotations.title -}}
            {{- printf "%s\n\n" .Annotations.description -}}
        {{- end -}}

        {{- if gt (len .CommonLabels) 0 -}}
            {{- $removeLabels := stringSlice "alert_class" "environment" "feature_category" "pager" "monitor" "rules_domain" "severity" "slo_alert" "user_impacting" -}}
            {{- $filteredLabels := .CommonLabels.Remove $removeLabels -}}

            {{- printf "\n:label: Labels :label:\n" -}}

            {{- range $filteredLabels.SortedPairs -}}
                {{- printf "*%s*: %s\n" .Name .Value -}}
            {{- end -}}
        {{- end -}}
    {{- end -}}
{{ end }}

{{ define "gitlab.runbook.link" }}
  {{- if eq .CommonAnnotations.link "" -}}
    https://ops.gitlab.net/gitlab-com/runbooks/blob/master/{{ .CommonAnnotations.runbook -}}
  {{- else -}}
    {{- .CommonAnnotations.link -}}
  {{- end -}}
{{- end }}
