################################################
# This file needs to be kept in sync with runbooks/alertmanager/alertmanager.yml.erb
# It's a temporary state until all config is moved over to the other file, see: https://gitlab.com/gitlab-com/gl-infra/infrastructure/issues/7071
################################################

templates:
- "<%= node["alertmanager"]["templates"]["dir"] %>/*.tmpl"

route:
  repeat_interval: 8h

  # Route most alerts to the main alerts channel in slack
  receiver: main_alerts_channel
  group_by: ['env', 'tier', 'type', 'alertname', 'stage']

  routes:
<% if @conf['snitch']['api_key'] -%>
  ################################################
  # Send heartbeats to Dead Man's Snitch.
  ################################################
  - match:
      alertname: SnitchHeartBeat
    receiver: dead_mans_snitch
    group_wait: 1m
    group_interval: 5m
    repeat_interval: 5m
    continue: false

<% end -%>
  ################################################
  # General Alerts
  # Treat these specially until https://gitlab.com/gitlab-com/gl-infra/infrastructure/issues/4881 is complete
  ################################################
<% if @conf['slack_bridge'] && @conf['slack_bridge']['webhook_url'] %>
  - match:
      rules_domain: general
    receiver: slack_bridge
    group_by: ['env', 'tier', 'type', 'alertname', 'stage']
    continue: true
<% end %>

  - match:
      rules_domain: general
      pager: ""
    group_by: ['env', 'tier', 'type', 'alertname', 'stage']
    receiver: slack_alerts_general
    continue: false

  - match:
      rules_domain: general
      pager: pagerduty
    group_by: ['env', 'tier', 'type', 'alertname', 'stage']
    receiver: slack_alerts_general
    continue: true

  ################################################
  # Team Alerts
  # Route certain alerts directly to teams
  ################################################
  # Gitaly warnings do not fallthrough
  - match:
      channel: gitaly
      severity: warn
    group_by: ['env', 'alertname','instance','job', 'stage']
    receiver: gitaly_low_priority_alerts_channel
    continue: false

  # Gitaly errors do not fallthrough
  - match:
      channel: gitaly
      severity: error
    group_by: ['env', 'alertname','instance','job', 'stage']
    receiver: gitaly_alerts_channel
    continue: false

  - match:
      channel: gitaly
    group_by: ['env', 'alertname','instance','job', 'stage']
    receiver: gitaly_alerts_channel
    continue: true

  # ci-cd warnings do not fallthrough
  - match:
      channel: ci-cd
      severity: warn
    group_by: ['env', 'alertname', 'stage']
    receiver: cicd_alerts_channel
    continue: false

  # ci-cd errors do not fallthrough
  - match:
      channel: ci-cd
      severity: error
    group_by: ['env', 'alertname', 'stage']
    receiver: cicd_alerts_channel
    continue: false

  - match:
      channel: ci-cd
    group_by: ['env', 'alertname', 'stage']
    receiver: cicd_alerts_channel
    continue: true

  # database warnings do not fallthrough
  - match:
      channel: database
      severity: warn
    group_by: ['env', 'alertname', 'stage']
    receiver: database_low_priority_alerts_channel
    continue: false

  # database errors do not fallthrough
  - match:
      channel: database
      severity: error
    group_by: ['env', 'alertname', 'stage']
    receiver: database_alerts_channel
    continue: false

  - match:
      channel: database
    group_by: ['env', 'alertname', 'stage']
    receiver: database_alerts_channel
    continue: true

<% if @conf['issues'] -%>
  ################################################
  # Issue routes: GitLab issues
  ################################################
  - match:
      pager: issue
    group_by: ['env', 'alertname', 'stage']
    group_wait: 10m
    group_interval: 1h
    repeat_interval: 3d
    continue: true
    routes:
<% @conf['issues'].each do |project, token| -%>
      - match:
          project: '<%= project %>'
        receiver: 'issue:<%= project %>'
<% end -%>

<% end -%>
  ################################################
  # Endgate routes: pagerduty and slack
  ################################################
  # Pagerduty alerts go to #production and pagerduty
  # NOTE: Make sure this is the second last matcher
  - match:
      pager: pagerduty
    routes:
    <% if node['alertmanager']['non_critical_pagerduty_environments'].any? %>
    - receiver: non_prod_pagerduty
      match_re:
        env: <%= node['alertmanager']['non_critical_pagerduty_environments'].join('|') %>
      group_by: ['env', 'alertname', 'stage']
      continue: false
    <% end %>
    - receiver: slo_dr
      match:
        slo_alert: yes
        env: dr
      continue: false
    - receiver: slo_gprd_cny
      match:
        slo_alert: yes
        env: gprd
        stage: cny
      continue: true
    - receiver: slo_gprd_main
      match:
        slo_alert: yes
        env: gprd
        stage: main
      continue: true
    - receiver: pager_alerts_channel
      match:
        slo_alert: yes
      group_by: ['env', 'tier', 'type', 'alertname', 'stage']
      continue: false
    - receiver: slo_non_prod
      match:
        slo_alert: yes
      continue: false
    - receiver: prod_pagerduty
      group_by: ['env', 'alertname', 'stage']
      continue: true
    - receiver: pager_alerts_channel
      group_by: ['env', 'tier', 'type', 'alertname', 'stage']
      continue: true

    continue: false

  # Everything else goes to #alerts
  # NOTE: Make sure this is the last matcher
  - receiver: main_alerts_channel
    group_by: ['env', 'tier', 'type', 'alertname', 'stage']
    continue: false

receivers:
################################################
# Pagerduty
################################################
<% %w(prod_pagerduty non_prod_pagerduty slo_dr slo_gprd_cny slo_gprd_main slo_non_prod).each do |pagerduty| %>
<% if @conf[pagerduty] %>
- name: <%= pagerduty %>
  pagerduty_configs:
  - service_key: "<%= @conf[pagerduty]['service_key'] %>"
    description: '{{ template "slack.title" . }}'
    client: 'GitLab Alertmanager'
    client_url: '{{ template "slack.link" . }}'
    details: { note : '{{ template "slack.text" . }}'}
    send_resolved: true
<% end %>
<% end %>

################################################
# Slack Channel Alerts
################################################
<% %w(main_alerts_channel pager_alerts_channel database_alerts_channel database_low_priority_alerts_channel gitaly_alerts_channel gitaly_low_priority_alerts_channel cicd_alerts_channel).each do   |slack_channel| %>
- name: "<%=slack_channel%>"
  slack_configs:
  - api_url: "<%= @conf['slack']['api_url'] %>"
    send_resolved: true
    channel: "<%= node['alertmanager']['slack'][slack_channel] %>"
    icon_emoji: '{{ template "slack.icon" . }}'
    color: '{{ template "slack.color" . }}'
    title: '{{ template "slack.title" . }}'
    title_link: '{{ template "slack.link" . }}'
    text: '{{ template "slack.text" . }}'
<% end %>

# This is temporary while https://gitlab.com/gitlab-com/gl-infra/infrastructure/issues/4881 is ongoing
- name: slack_alerts_general
  slack_configs:
  - api_url: "<%= @conf['slack']['api_url'] %>"
    channel: '#alerts-gen-svc-test'
    send_resolved: true
    icon_emoji: '{{ template "slack.icon" . }}'
    title: '{{ template "slack.title" . }}'
    title_link: '{{ template "slack.link" . }}'
    text: '{{ template "slack.debug" . }}'

################################################
# WebHooks
################################################
<% if @conf['snitch']['api_key'] -%>
- name: dead_mans_snitch
  webhook_configs:
  - url: "https://nosnch.in/<%= @conf['snitch']['api_key'] %>"
    send_resolved: false
<% end -%>
<% if @conf['slack_bridge'] && @conf['slack_bridge']['webhook_url'] %>
- name: slack_bridge
  webhook_configs:
  - url: "<%= @conf['slack_bridge']['webhook_url'] %>"
    send_resolved: true
    http_config:
      bearer_token: "<%= @conf['slack_bridge']['bearer_token'] %>"
<% end %>
<% if @conf['issues'] -%>
<% @conf['issues'].each do |project, token| -%>
- name: "issue:<%= project %>"
  webhook_configs:
  - url: "https://<%= project %>/prometheus/alerts/notify.json"
    send_resolved: true
    http_config:
      bearer_token: "<%= token %>"
<% end -%>
<% end -%>
