<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="198" onload="init(evt)" viewBox="0 0 1200 198" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="198" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="181.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="181.00"> </text><svg id="frames" x="10" width="1180" total_samples="6042831290"><g><title>automatic_trial_registration (1,797,263 samples, 0.03%)</title><rect x="0.0022%" y="117" width="0.0297%" height="15" fill="rgb(226,89,89)" fg:x="135478" fg:w="1797263"/><text x="0.2522%" y="127.50"></text></g><g><title>billing_in_side_nav (53,922,781 samples, 0.89%)</title><rect x="0.0320%" y="117" width="0.8923%" height="15" fill="rgb(232,97,97)" fg:x="1932741" fg:w="53922781"/><text x="0.2820%" y="127.50"></text></g><g><title>bypass_registration (2,602,125 samples, 0.04%)</title><rect x="0.9243%" y="117" width="0.0431%" height="15" fill="rgb(236,103,103)" fg:x="55855522" fg:w="2602125"/><text x="1.1743%" y="127.50"></text></g><g><title>combined_registration (20,901,251 samples, 0.35%)</title><rect x="0.9813%" y="117" width="0.3459%" height="15" fill="rgb(235,102,102)" fg:x="59299765" fg:w="20901251"/><text x="1.2313%" y="127.50"></text></g><g><title>cross_stage_fdm (22,832,954 samples, 0.38%)</title><rect x="1.3328%" y="117" width="0.3779%" height="15" fill="rgb(230,94,94)" fg:x="80538589" fg:w="22832954"/><text x="1.5828%" y="127.50"></text></g><g><title>empty_repo_upload (286,632,575 samples, 4.74%)</title><rect x="1.7106%" y="117" width="4.7433%" height="15" fill="rgb(237,105,105)" fg:x="103371543" fg:w="286632575"/><text x="1.9606%" y="127.50">empty_..</text></g><g><title>force_company_trial (1,489,016 samples, 0.02%)</title><rect x="6.4540%" y="117" width="0.0246%" height="15" fill="rgb(245,115,115)" fg:x="390004118" fg:w="1489016"/><text x="6.7040%" y="127.50"></text></g><g><title>conn_by_agent_id (2,334,729 samples, 0.04%)</title><rect x="6.4836%" y="85" width="0.0386%" height="15" fill="rgb(235,100,100)" fg:x="391795461" fg:w="2334729"/><text x="6.7336%" y="95.50"></text></g><g><title>conn_by_project_id (2,140,304 samples, 0.04%)</title><rect x="6.5223%" y="85" width="0.0354%" height="15" fill="rgb(235,100,100)" fg:x="394130190" fg:w="2140304"/><text x="6.7723%" y="95.50"></text></g><g><title>agent_tracker2 (4,589,313 samples, 0.08%)</title><rect x="6.4836%" y="101" width="0.0759%" height="15" fill="rgb(232,97,97)" fg:x="391795461" fg:w="4589313"/><text x="6.7336%" y="111.50"></text></g><g><title>gitlab-kas (5,802,522 samples, 0.10%)</title><rect x="6.4836%" y="117" width="0.0960%" height="15" fill="rgb(235,102,102)" fg:x="391795461" fg:w="5802522"/><text x="6.7336%" y="127.50"></text></g><g><title>tunnel_tracker2 (1,213,209 samples, 0.02%)</title><rect x="6.5596%" y="101" width="0.0201%" height="15" fill="rgb(233,98,98)" fg:x="396384774" fg:w="1213209"/><text x="6.8096%" y="111.50"></text></g><g><title>kas_by_agent_id (1,213,209 samples, 0.02%)</title><rect x="6.5596%" y="85" width="0.0201%" height="15" fill="rgb(225,86,86)" fg:x="396384774" fg:w="1213209"/><text x="6.8096%" y="95.50"></text></g><g><title>group_contact_sales (3,799,284 samples, 0.06%)</title><rect x="6.5797%" y="117" width="0.0629%" height="15" fill="rgb(242,111,111)" fg:x="397597983" fg:w="3799284"/><text x="6.8297%" y="127.50"></text></g><g><title>in_product_guidance_environments_webide (9,625,609 samples, 0.16%)</title><rect x="6.6425%" y="117" width="0.1593%" height="15" fill="rgb(236,103,103)" fg:x="401397267" fg:w="9625609"/><text x="6.8925%" y="127.50"></text></g><g><title>invite_email_from (58,582,990 samples, 0.97%)</title><rect x="6.8018%" y="117" width="0.9695%" height="15" fill="rgb(237,104,104)" fg:x="411022876" fg:w="58582990"/><text x="7.0518%" y="127.50"></text></g><g><title>invite_email_preview_text (1,487,259 samples, 0.02%)</title><rect x="7.7713%" y="117" width="0.0246%" height="15" fill="rgb(237,104,104)" fg:x="469605866" fg:w="1487259"/><text x="8.0213%" y="127.50"></text></g><g><title>invite_for_help_continuous_onboarding (5,709,332 samples, 0.09%)</title><rect x="7.7959%" y="117" width="0.0945%" height="15" fill="rgb(237,104,104)" fg:x="471093125" fg:w="5709332"/><text x="8.0459%" y="127.50"></text></g><g><title>invite_members_in_comment (6,998,698 samples, 0.12%)</title><rect x="7.8997%" y="117" width="0.1158%" height="15" fill="rgb(237,104,104)" fg:x="477365410" fg:w="6998698"/><text x="8.1497%" y="127.50"></text></g><g><title>jobs_to_be_done (10,521,394 samples, 0.17%)</title><rect x="8.0217%" y="117" width="0.1741%" height="15" fill="rgb(240,109,109)" fg:x="484740011" fg:w="10521394"/><text x="8.2717%" y="127.50"></text></g><g><title>logged_out_marketing_header (1,993,819,145 samples, 32.99%)</title><rect x="8.1959%" y="117" width="32.9948%" height="15" fill="rgb(233,98,98)" fg:x="495261405" fg:w="1993819145"/><text x="8.4459%" y="127.50">logged_out_marketing_header</text></g><g><title>member_areas_of_focus (9,048,598 samples, 0.15%)</title><rect x="41.1906%" y="117" width="0.1497%" height="15" fill="rgb(234,100,100)" fg:x="2489080550" fg:w="9048598"/><text x="41.4406%" y="127.50"></text></g><g><title>members (11,232,750 samples, 0.19%)</title><rect x="41.3404%" y="117" width="0.1859%" height="15" fill="rgb(234,100,100)" fg:x="2498129148" fg:w="11232750"/><text x="41.5904%" y="127.50"></text></g><g><title>invite_email (11,232,750 samples, 0.19%)</title><rect x="41.3404%" y="101" width="0.1859%" height="15" fill="rgb(237,104,104)" fg:x="2498129148" fg:w="11232750"/><text x="41.5904%" y="111.50"></text></g><g><title>new_project_readme (16,137,463 samples, 0.27%)</title><rect x="41.5263%" y="117" width="0.2671%" height="15" fill="rgb(244,114,114)" fg:x="2509361898" fg:w="16137463"/><text x="41.7763%" y="127.50"></text></g><g><title>new_project_readme_content (21,446,506 samples, 0.35%)</title><rect x="41.7933%" y="117" width="0.3549%" height="15" fill="rgb(244,114,114)" fg:x="2525499361" fg:w="21446506"/><text x="42.0433%" y="127.50"></text></g><g><title>new_repo (36,162,213 samples, 0.60%)</title><rect x="42.1482%" y="117" width="0.5984%" height="15" fill="rgb(244,114,114)" fg:x="2546945867" fg:w="36162213"/><text x="42.3982%" y="127.50"></text></g><g><title>phone_verification_for_low_risk_users (3,690,652 samples, 0.06%)</title><rect x="42.7474%" y="117" width="0.0611%" height="15" fill="rgb(242,112,112)" fg:x="2583154939" fg:w="3690652"/><text x="42.9974%" y="127.50"></text></g><g><title>pipeline_editor_walkthrough (2,124,442 samples, 0.04%)</title><rect x="42.8085%" y="117" width="0.0352%" height="15" fill="rgb(240,109,109)" fg:x="2586845591" fg:w="2124442"/><text x="43.0585%" y="127.50"></text></g><g><title>pipeline_empty_state_templates (3,557,846 samples, 0.06%)</title><rect x="42.8437%" y="117" width="0.0589%" height="15" fill="rgb(240,109,109)" fg:x="2588970033" fg:w="3557846"/><text x="43.0937%" y="127.50"></text></g><g><title>pql_three_cta_test (3,751,723 samples, 0.06%)</title><rect x="42.9025%" y="117" width="0.0621%" height="15" fill="rgb(247,119,119)" fg:x="2592527879" fg:w="3751723"/><text x="43.1525%" y="127.50"></text></g><g><title>prominent_create_board_btn (8,765,572 samples, 0.15%)</title><rect x="42.9648%" y="117" width="0.1451%" height="15" fill="rgb(244,114,114)" fg:x="2596290293" fg:w="8765572"/><text x="43.2148%" y="127.50"></text></g><g><title>promote_mr_approvals_in_free (4,943,070 samples, 0.08%)</title><rect x="43.1099%" y="117" width="0.0818%" height="15" fill="rgb(244,114,114)" fg:x="2605055865" fg:w="4943070"/><text x="43.3599%" y="127.50"></text></g><g><title>promote_premium_billing_page (1,556,880 samples, 0.03%)</title><rect x="43.1917%" y="117" width="0.0258%" height="15" fill="rgb(244,114,114)" fg:x="2609998935" fg:w="1556880"/><text x="43.4417%" y="127.50"></text></g><g><title>registrations_group_invite (1,583,583 samples, 0.03%)</title><rect x="43.2176%" y="117" width="0.0262%" height="15" fill="rgb(239,107,107)" fg:x="2611568621" fg:w="1583583"/><text x="43.4676%" y="127.50"></text></g><g><title>repo_integrations_link (232,134,378 samples, 3.84%)</title><rect x="43.2438%" y="117" width="3.8415%" height="15" fill="rgb(241,110,110)" fg:x="2613152204" fg:w="232134378"/><text x="43.4938%" y="127.50">repo..</text></g><g><title>runners_availability_section (12,783,203 samples, 0.21%)</title><rect x="47.0857%" y="117" width="0.2115%" height="15" fill="rgb(237,104,104)" fg:x="2845311752" fg:w="12783203"/><text x="47.3357%" y="127.50"></text></g><g><title>sast_entry_points (35,907,129 samples, 0.59%)</title><rect x="47.2973%" y="117" width="0.5942%" height="15" fill="rgb(229,92,92)" fg:x="2858094955" fg:w="35907129"/><text x="47.5473%" y="127.50"></text></g><g><title>tier_badge (478,331,881 samples, 7.92%)</title><rect x="47.8915%" y="117" width="7.9157%" height="15" fill="rgb(232,97,97)" fg:x="2894004085" fg:w="478331881"/><text x="48.1415%" y="127.50">tier_badge</text></g><g><title>trial_registration_with_reassurance (4,224,716 samples, 0.07%)</title><rect x="55.8072%" y="117" width="0.0699%" height="15" fill="rgb(231,96,96)" fg:x="3372335966" fg:w="4224716"/><text x="56.0572%" y="127.50"></text></g><g><title>hash (3,381,834,836 samples, 55.96%)</title><rect x="0.0000%" y="133" width="55.9644%" height="15" fill="rgb(231,95,95)" fg:x="0" fg:w="3381834836"/><text x="0.2500%" y="143.50">hash</text></g><g><title>video_tutorials_continuous_onboarding (5,274,154 samples, 0.09%)</title><rect x="55.8771%" y="117" width="0.0873%" height="15" fill="rgb(229,92,92)" fg:x="3376560682" fg:w="5274154"/><text x="56.1271%" y="127.50"></text></g><g><title>list (6,796,447 samples, 0.11%)</title><rect x="55.9644%" y="133" width="0.1125%" height="15" fill="rgb(227,89,89)" fg:x="3381834836" fg:w="6796447"/><text x="56.2144%" y="143.50"></text></g><g><title>gitlab (6,795,342 samples, 0.11%)</title><rect x="55.9644%" y="117" width="0.1125%" height="15" fill="rgb(235,102,102)" fg:x="3381835941" fg:w="6795342"/><text x="56.2144%" y="127.50"></text></g><g><title>job_waiter (6,795,342 samples, 0.11%)</title><rect x="55.9644%" y="101" width="0.1125%" height="15" fill="rgb(240,109,109)" fg:x="3381835941" fg:w="6795342"/><text x="56.2144%" y="111.50"></text></g><g><title>$UUID (6,795,342 samples, 0.11%)</title><rect x="55.9644%" y="85" width="0.1125%" height="15" fill="rgb(233,98,98)" fg:x="3381835941" fg:w="6795342"/><text x="56.2144%" y="95.50"></text></g><g><title>session (988,053,987 samples, 16.35%)</title><rect x="56.0771%" y="117" width="16.3508%" height="15" fill="rgb(237,104,104)" fg:x="3388642331" fg:w="988053987"/><text x="56.3271%" y="127.50">session</text></g><g><title>lookup (988,053,987 samples, 16.35%)</title><rect x="56.0771%" y="101" width="16.3508%" height="15" fill="rgb(236,102,102)" fg:x="3388642331" fg:w="988053987"/><text x="56.3271%" y="111.50">lookup</text></g><g><title>user (988,053,987 samples, 16.35%)</title><rect x="56.0771%" y="85" width="16.3508%" height="15" fill="rgb(231,96,96)" fg:x="3388642331" fg:w="988053987"/><text x="56.3271%" y="95.50">user</text></g><g><title>gitlab (988,053,987 samples, 16.35%)</title><rect x="56.0771%" y="69" width="16.3508%" height="15" fill="rgb(235,102,102)" fg:x="3388642331" fg:w="988053987"/><text x="56.3271%" y="79.50">gitlab</text></g><g><title>$NUMBER (988,053,987 samples, 16.35%)</title><rect x="56.0771%" y="53" width="16.3508%" height="15" fill="rgb(241,110,110)" fg:x="3388642331" fg:w="988053987"/><text x="56.3271%" y="63.50">$NUMBER</text></g><g><title>webhook_recursion_detection (18,259,702 samples, 0.30%)</title><rect x="72.4279%" y="117" width="0.3022%" height="15" fill="rgb(233,99,99)" fg:x="4376696318" fg:w="18259702"/><text x="72.6779%" y="127.50"></text></g><g><title>$UUID (18,259,702 samples, 0.30%)</title><rect x="72.4279%" y="101" width="0.3022%" height="15" fill="rgb(233,98,98)" fg:x="4376696318" fg:w="18259702"/><text x="72.6779%" y="111.50"></text></g><g><title>set (1,006,325,758 samples, 16.65%)</title><rect x="56.0769%" y="133" width="16.6532%" height="15" fill="rgb(236,103,103)" fg:x="3388631283" fg:w="1006325758"/><text x="56.3269%" y="143.50">set</text></g><g><title> (15,363,703 samples, 0.25%)</title><rect x="72.7301%" y="117" width="0.2542%" height="15" fill="rgb(255,130,130)" fg:x="4394957041" fg:w="15363703"/><text x="72.9801%" y="127.50"></text></g><g><title>hll_counters (15,358,538 samples, 0.25%)</title><rect x="72.7302%" y="101" width="0.2542%" height="15" fill="rgb(236,103,103)" fg:x="4394962206" fg:w="15358538"/><text x="72.9802%" y="111.50"></text></g><g><title>Approvals (11,399,518 samples, 0.19%)</title><rect x="72.9843%" y="117" width="0.1886%" height="15" fill="rgb(239,108,108)" fg:x="4410320771" fg:w="11399518"/><text x="73.2343%" y="127.50"></text></g><g><title>last_sha_approved (11,399,518 samples, 0.19%)</title><rect x="72.9843%" y="101" width="0.1886%" height="15" fill="rgb(223,84,84)" fg:x="4410320771" fg:w="11399518"/><text x="73.2343%" y="111.50"></text></g><g><title>$NUMBER (11,399,518 samples, 0.19%)</title><rect x="72.9843%" y="85" width="0.1886%" height="15" fill="rgb(241,110,110)" fg:x="4410320771" fg:w="11399518"/><text x="73.2343%" y="95.50"></text></g><g><title>approval (11,399,518 samples, 0.19%)</title><rect x="72.9843%" y="69" width="0.1886%" height="15" fill="rgb(236,102,102)" fg:x="4410320771" fg:w="11399518"/><text x="73.2343%" y="79.50"></text></g><g><title>$NUMBER (11,399,518 samples, 0.19%)</title><rect x="72.9843%" y="53" width="0.1886%" height="15" fill="rgb(241,110,110)" fg:x="4410320771" fg:w="11399518"/><text x="73.2343%" y="63.50"></text></g><g><title>any_web_hook_failed (1,714,825 samples, 0.03%)</title><rect x="73.1735%" y="117" width="0.0284%" height="15" fill="rgb(240,109,109)" fg:x="4421750979" fg:w="1714825"/><text x="73.4235%" y="127.50"></text></g><g><title>$NUMBER (1,714,825 samples, 0.03%)</title><rect x="73.1735%" y="101" width="0.0284%" height="15" fill="rgb(241,110,110)" fg:x="4421750979" fg:w="1714825"/><text x="73.4235%" y="111.50"></text></g><g><title>builds (1,083,508 samples, 0.02%)</title><rect x="73.2019%" y="85" width="0.0179%" height="15" fill="rgb(224,85,85)" fg:x="4423465859" fg:w="1083508"/><text x="73.4519%" y="95.50"></text></g><g><title>$NUMBER (1,083,508 samples, 0.02%)</title><rect x="73.2019%" y="69" width="0.0179%" height="15" fill="rgb(241,110,110)" fg:x="4423465859" fg:w="1083508"/><text x="73.4519%" y="79.50"></text></g><g><title>last_update (661,122 samples, 0.01%)</title><rect x="73.2089%" y="53" width="0.0109%" height="15" fill="rgb(223,84,84)" fg:x="4423888245" fg:w="661122"/><text x="73.4589%" y="63.50"></text></g><g><title>ci (1,251,794 samples, 0.02%)</title><rect x="73.2019%" y="117" width="0.0207%" height="15" fill="rgb(226,87,87)" fg:x="4423465859" fg:w="1251794"/><text x="73.4519%" y="127.50"></text></g><g><title>minutes (1,251,794 samples, 0.02%)</title><rect x="73.2019%" y="101" width="0.0207%" height="15" fill="rgb(228,92,92)" fg:x="4423465859" fg:w="1251794"/><text x="73.4519%" y="111.50"></text></g><g><title>ci_minutes_usage (19,928,186 samples, 0.33%)</title><rect x="73.2226%" y="117" width="0.3298%" height="15" fill="rgb(222,82,82)" fg:x="4424717653" fg:w="19928186"/><text x="73.4726%" y="127.50"></text></g><g><title>$NUMBER (19,928,186 samples, 0.33%)</title><rect x="73.2226%" y="101" width="0.3298%" height="15" fill="rgb(241,110,110)" fg:x="4424717653" fg:w="19928186"/><text x="73.4726%" y="111.50"></text></g><g><title>$NUMBER (19,928,186 samples, 0.33%)</title><rect x="73.2226%" y="85" width="0.3298%" height="15" fill="rgb(241,110,110)" fg:x="4424717653" fg:w="19928186"/><text x="73.4726%" y="95.50"></text></g><g><title>updated (19,928,186 samples, 0.33%)</title><rect x="73.2226%" y="69" width="0.3298%" height="15" fill="rgb(236,102,102)" fg:x="4424717653" fg:w="19928186"/><text x="73.4726%" y="79.50"></text></g><g><title>git-receive-pack-reference-counter (820,920 samples, 0.01%)</title><rect x="73.5524%" y="117" width="0.0136%" height="15" fill="rgb(235,102,102)" fg:x="4444647271" fg:w="820920"/><text x="73.8024%" y="127.50"></text></g><g><title>agent_limit (1,750,604 samples, 0.03%)</title><rect x="73.5672%" y="101" width="0.0290%" height="15" fill="rgb(232,97,97)" fg:x="4445540411" fg:w="1750604"/><text x="73.8172%" y="111.50"></text></g><g><title>gitlab-kas (1,843,990 samples, 0.03%)</title><rect x="73.5660%" y="117" width="0.0305%" height="15" fill="rgb(235,102,102)" fg:x="4445468191" fg:w="1843990"/><text x="73.8160%" y="127.50"></text></g><g><title>$HASH (1,135,567 samples, 0.02%)</title><rect x="73.5965%" y="101" width="0.0188%" height="15" fill="rgb(232,97,97)" fg:x="4447312181" fg:w="1135567"/><text x="73.8465%" y="111.50"></text></g><g><title>gitlab-sidekiq-status (1,136,542 samples, 0.02%)</title><rect x="73.5965%" y="117" width="0.0188%" height="15" fill="rgb(235,102,102)" fg:x="4447312181" fg:w="1136542"/><text x="73.8465%" y="127.50"></text></g><g><title>group_wikis (987,262 samples, 0.02%)</title><rect x="73.6161%" y="117" width="0.0163%" height="15" fill="rgb(242,111,111)" fg:x="4448494125" fg:w="987262"/><text x="73.8661%" y="127.50"></text></g><g><title>$NUMBER (987,262 samples, 0.02%)</title><rect x="73.6161%" y="101" width="0.0163%" height="15" fill="rgb(241,110,110)" fg:x="4448494125" fg:w="987262"/><text x="73.8661%" y="111.50"></text></g><g><title>pushes_since_gc (987,262 samples, 0.02%)</title><rect x="73.6161%" y="85" width="0.0163%" height="15" fill="rgb(237,104,104)" fg:x="4448494125" fg:w="987262"/><text x="73.8661%" y="95.50"></text></g><g><title>latest_ingested_sbom_pipeline_id (974,080 samples, 0.02%)</title><rect x="73.6324%" y="117" width="0.0161%" height="15" fill="rgb(222,82,82)" fg:x="4449481430" fg:w="974080"/><text x="73.8824%" y="127.50"></text></g><g><title>$NUMBER (974,080 samples, 0.02%)</title><rect x="73.6324%" y="101" width="0.0161%" height="15" fill="rgb(241,110,110)" fg:x="4449481430" fg:w="974080"/><text x="73.8824%" y="111.50"></text></g><g><title>build_artifacts_size (12,730,683 samples, 0.21%)</title><rect x="73.6538%" y="37" width="0.2107%" height="15" fill="rgb(224,85,85)" fg:x="4450772769" fg:w="12730683"/><text x="73.9038%" y="47.50"></text></g><g><title>counters (19,309,432 samples, 0.32%)</title><rect x="73.6538%" y="85" width="0.3195%" height="15" fill="rgb(229,93,93)" fg:x="4450772769" fg:w="19309432"/><text x="73.9038%" y="95.50"></text></g><g><title>ProjectStatistics (19,309,432 samples, 0.32%)</title><rect x="73.6538%" y="69" width="0.3195%" height="15" fill="rgb(247,119,119)" fg:x="4450772769" fg:w="19309432"/><text x="73.9038%" y="79.50"></text></g><g><title>$NUMBER (19,309,432 samples, 0.32%)</title><rect x="73.6538%" y="53" width="0.3195%" height="15" fill="rgb(241,110,110)" fg:x="4450772769" fg:w="19309432"/><text x="73.9038%" y="63.50"></text></g><g><title>storage_size (6,206,864 samples, 0.10%)</title><rect x="73.8706%" y="37" width="0.1027%" height="15" fill="rgb(235,102,102)" fg:x="4463875337" fg:w="6206864"/><text x="74.1206%" y="47.50"></text></g><g><title>project (19,309,528 samples, 0.32%)</title><rect x="73.6538%" y="117" width="0.3195%" height="15" fill="rgb(244,114,114)" fg:x="4450772769" fg:w="19309528"/><text x="73.9038%" y="127.50"></text></g><g><title>$NUMBER (19,309,528 samples, 0.32%)</title><rect x="73.6538%" y="101" width="0.3195%" height="15" fill="rgb(241,110,110)" fg:x="4450772769" fg:w="19309528"/><text x="73.9038%" y="111.50"></text></g><g><title>project_wikis (10,252,260 samples, 0.17%)</title><rect x="73.9733%" y="117" width="0.1697%" height="15" fill="rgb(244,114,114)" fg:x="4470082297" fg:w="10252260"/><text x="74.2233%" y="127.50"></text></g><g><title>$NUMBER (10,252,260 samples, 0.17%)</title><rect x="73.9733%" y="101" width="0.1697%" height="15" fill="rgb(241,110,110)" fg:x="4470082297" fg:w="10252260"/><text x="74.2233%" y="111.50"></text></g><g><title>pushes_since_gc (10,252,260 samples, 0.17%)</title><rect x="73.9733%" y="85" width="0.1697%" height="15" fill="rgb(237,104,104)" fg:x="4470082297" fg:w="10252260"/><text x="74.2233%" y="95.50"></text></g><g><title>fetches_since_gc (212,051,119 samples, 3.51%)</title><rect x="74.1430%" y="85" width="3.5091%" height="15" fill="rgb(242,111,111)" fg:x="4480334557" fg:w="212051119"/><text x="74.3930%" y="95.50">fet..</text></g><g><title>projects (1,379,118,701 samples, 22.82%)</title><rect x="74.1430%" y="117" width="22.8224%" height="15" fill="rgb(244,114,114)" fg:x="4480334557" fg:w="1379118701"/><text x="74.3930%" y="127.50">projects</text></g><g><title>$NUMBER (1,379,118,701 samples, 22.82%)</title><rect x="74.1430%" y="101" width="22.8224%" height="15" fill="rgb(241,110,110)" fg:x="4480334557" fg:w="1379118701"/><text x="74.3930%" y="111.50">$NUMBER</text></g><g><title>pushes_since_gc (1,167,067,582 samples, 19.31%)</title><rect x="77.6521%" y="85" width="19.3133%" height="15" fill="rgb(237,104,104)" fg:x="4692385676" fg:w="1167067582"/><text x="77.9021%" y="95.50">pushes_since_gc</text></g><g><title>redirect_namespace (1,804,076 samples, 0.03%)</title><rect x="96.9654%" y="117" width="0.0299%" height="15" fill="rgb(241,110,110)" fg:x="5859453258" fg:w="1804076"/><text x="97.2154%" y="127.50"></text></g><g><title>$NUMBER (1,804,076 samples, 0.03%)</title><rect x="96.9654%" y="101" width="0.0299%" height="15" fill="rgb(241,110,110)" fg:x="5859453258" fg:w="1804076"/><text x="97.2154%" y="111.50"></text></g><g><title>session (22,088,534 samples, 0.37%)</title><rect x="96.9960%" y="117" width="0.3655%" height="15" fill="rgb(237,104,104)" fg:x="5861304007" fg:w="22088534"/><text x="97.2460%" y="127.50"></text></g><g><title>gitlab (22,088,534 samples, 0.37%)</title><rect x="96.9960%" y="101" width="0.3655%" height="15" fill="rgb(235,102,102)" fg:x="5861304007" fg:w="22088534"/><text x="97.2460%" y="111.50"></text></g><g><title>$HASH (22,088,534 samples, 0.37%)</title><rect x="96.9960%" y="85" width="0.3655%" height="15" fill="rgb(232,97,97)" fg:x="5861304007" fg:w="22088534"/><text x="97.2460%" y="95.50"></text></g><g><title>string (1,493,148,738 samples, 24.71%)</title><rect x="72.7301%" y="133" width="24.7094%" height="15" fill="rgb(233,98,98)" fg:x="4394957041" fg:w="1493148738"/><text x="72.9801%" y="143.50">string</text></g><g><title>web_hooks (4,713,207 samples, 0.08%)</title><rect x="97.3615%" y="117" width="0.0780%" height="15" fill="rgb(233,99,99)" fg:x="5883392572" fg:w="4713207"/><text x="97.6115%" y="127.50"></text></g><g><title>last_failure (4,713,207 samples, 0.08%)</title><rect x="97.3615%" y="101" width="0.0780%" height="15" fill="rgb(223,84,84)" fg:x="5883392572" fg:w="4713207"/><text x="97.6115%" y="111.50"></text></g><g><title>ci_unlock_pipeline_requests (12,117,335 samples, 0.20%)</title><rect x="97.4395%" y="117" width="0.2005%" height="15" fill="rgb(222,82,82)" fg:x="5888105779" fg:w="12117335"/><text x="97.6895%" y="127.50"></text></g><g><title>queue (12,117,335 samples, 0.20%)</title><rect x="97.4395%" y="101" width="0.2005%" height="15" fill="rgb(236,103,103)" fg:x="5888105779" fg:w="12117335"/><text x="97.6895%" y="111.50"></text></g><g><title>epic (677,270 samples, 0.01%)</title><rect x="97.6403%" y="101" width="0.0112%" height="15" fill="rgb(243,113,113)" fg:x="5900236045" fg:w="677270"/><text x="97.8903%" y="111.50"></text></g><g><title>$NUMBER (677,270 samples, 0.01%)</title><rect x="97.6403%" y="85" width="0.0112%" height="15" fill="rgb(241,110,110)" fg:x="5900236045" fg:w="677270"/><text x="97.8903%" y="95.50"></text></g><g><title>issue (24,367,296 samples, 0.40%)</title><rect x="97.6515%" y="101" width="0.4032%" height="15" fill="rgb(234,99,99)" fg:x="5900913315" fg:w="24367296"/><text x="97.9015%" y="111.50"></text></g><g><title>$NUMBER (24,367,296 samples, 0.40%)</title><rect x="97.6515%" y="85" width="0.4032%" height="15" fill="rgb(241,110,110)" fg:x="5900913315" fg:w="24367296"/><text x="97.9015%" y="95.50"></text></g><g><title>recent_items (142,478,490 samples, 2.36%)</title><rect x="97.6403%" y="117" width="2.3578%" height="15" fill="rgb(242,111,111)" fg:x="5900236045" fg:w="142478490"/><text x="97.8903%" y="127.50">r..</text></g><g><title>mergerequest (117,433,924 samples, 1.94%)</title><rect x="98.0547%" y="101" width="1.9434%" height="15" fill="rgb(230,94,94)" fg:x="5925280611" fg:w="117433924"/><text x="98.3047%" y="111.50">m..</text></g><g><title>$NUMBER (117,433,924 samples, 1.94%)</title><rect x="98.0547%" y="85" width="1.9434%" height="15" fill="rgb(241,110,110)" fg:x="5925280611" fg:w="117433924"/><text x="98.3047%" y="95.50">$..</text></g><g><title>all (6,042,831,290 samples, 100%)</title><rect x="0.0000%" y="149" width="100.0000%" height="15" fill="rgb(255,130,130)" fg:x="0" fg:w="6042831290"/><text x="0.2500%" y="159.50"></text></g><g><title>zset (154,725,511 samples, 2.56%)</title><rect x="97.4395%" y="133" width="2.5605%" height="15" fill="rgb(241,110,110)" fg:x="5888105779" fg:w="154725511"/><text x="97.6895%" y="143.50">zs..</text></g></svg></svg>