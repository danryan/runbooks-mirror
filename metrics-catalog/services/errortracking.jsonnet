local metricsCatalog = import 'servicemetrics/metrics.libsonnet';
local toolingLinks = import 'toolinglinks/toolinglinks.libsonnet';

local rateMetric = metricsCatalog.rateMetric;

metricsCatalog.serviceDefinition({
  type: 'errortracking',
  tier: 'sv',
  monitoringThresholds: {},
  serviceDependencies: {
    api: true,
  },
  provisioning: {
    kubernetes: false,
    vms: false,
  },
  serviceLevelIndicators: {
    loadbalancer: {
      severity: 's3',  // Don't page SREs for this SLI
      userImpacting: false,
      serviceAggregation: false,
      team: 'observability',
      description: |||
        Error Tracking allows developers to discover and view errors generated by their application
      |||,

      local errortrackingSelector = {
        team: 'observability',
        job: 'default/traefik',
        service: { re: '.*errortracking-api.*' },
      },

      requestRate: rateMetric(
        counter='traefik_service_requests_total',
        selector=errortrackingSelector,
      ),

      errorRate: rateMetric(
        counter='traefik_service_requests_total',
        selector=errortrackingSelector {
          code: { re: '^5.*' },
        },
      ),

      significantLabels: [],

      toolingLinks: [
        toolingLinks.kibana(title='Observability', index='observability'),
      ],
    },
  },
})
