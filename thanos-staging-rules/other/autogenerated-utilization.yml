---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: other-autogenerated-utilization
  labels:
    ruler: thanos
    shard: '2'
  annotations: {}
spec:
  # WARNING. DO NOT EDIT THIS FILE BY HAND. USE ./thanos-staging-rules-jsonnet/utilization.jsonnet TO GENERATE IT
  # YOUR CHANGES WILL BE OVERRIDDEN
  groups:
  - name: Utilization Rules (autogenerated)
    interval: 5m
    rules:
    - record: gitlab_component_utilization:cloudflare_data_transfer_bytes:1d
      labels:
        component: cloudflare_data_transfer
        metrics_subsystem: utilization
        resource_labels: zone
        summaryType: aggregate
        unit: bytes
      expr: |
        sum by (env,tier,type,stage) (
          rate(cloudflare_zone_bandwidth_country{env!~"gprd|ops",type="cloudflare"}[1d])
        )
    - record: gitlab_component_utilization:kube_node_cpu_requests_percent:1h
      labels:
        component: kube_node_cpu_requests
        metrics_subsystem: utilization
        resource_labels: type,shard
        summaryType: aggregate
        unit: percent
      expr: |
        avg by (env,tier,type,stage,shard) (
          sum by (env,tier,type,stage,node) (
            kube_pod_container_resource_requests{resource="cpu", unit="core", env!~"gprd|ops",type=~"kube|redis-cluster-cache|redis-cluster-feature-flag|redis-cluster-shared-state|redis-cluster-queues-meta|redis-sidekiq|redis-tracechunks|redis-cluster-ratelimiting|redis-cluster-chat-cache|redis-sessions|redis-registry-cache|redis-repository-cache|redis-db-load-balancing|redis-pubsub|redis|vault"}
          )
          / on (node) group_left(cluster,env,tier,type,stage,shard)
          kube_node_status_allocatable:labeled{env!~"gprd|ops",type=~"kube|redis-cluster-cache|redis-cluster-feature-flag|redis-cluster-shared-state|redis-cluster-queues-meta|redis-sidekiq|redis-tracechunks|redis-cluster-ratelimiting|redis-cluster-chat-cache|redis-sessions|redis-registry-cache|redis-repository-cache|redis-db-load-balancing|redis-pubsub|redis|vault",resource="cpu"}
        )
        * 100
    - record: gitlab_component_utilization:kube_node_memory_requests_percent:1h
      labels:
        component: kube_node_memory_requests
        metrics_subsystem: utilization
        resource_labels: type,shard
        summaryType: aggregate
        unit: percent
      expr: |
        avg by (env,tier,type,stage,shard) (
          sum by (env,tier,type,stage,node) (
            kube_pod_container_resource_requests{resource="memory", unit="byte", env!~"gprd|ops",type=~"kube|redis-cluster-cache|redis-cluster-feature-flag|redis-cluster-shared-state|redis-cluster-queues-meta|redis-sidekiq|redis-tracechunks|redis-cluster-ratelimiting|redis-cluster-chat-cache|redis-sessions|redis-registry-cache|redis-repository-cache|redis-db-load-balancing|redis-pubsub|redis|vault"}
          )
          / on (node) group_left(cluster,env,tier,type,stage,shard)
          kube_node_status_allocatable:labeled{env!~"gprd|ops",type=~"kube|redis-cluster-cache|redis-cluster-feature-flag|redis-cluster-shared-state|redis-cluster-queues-meta|redis-sidekiq|redis-tracechunks|redis-cluster-ratelimiting|redis-cluster-chat-cache|redis-sessions|redis-registry-cache|redis-repository-cache|redis-db-load-balancing|redis-pubsub|redis|vault",resource="memory"}
        )
        * 100
    - record: gitlab_component_utilization:pg_dead_tup_rate_tuples:1h
      labels:
        component: pg_dead_tup_rate
        metrics_subsystem: utilization
        resource_labels: relname
        summaryType: aggregate
        unit: tuples
      expr: |
        sum by (env,tier,type,stage) (
          deriv(pg_stat_user_tables_n_dead_tup{env!~"gprd|ops",type=~"patroni|patroni-registry|patroni-embedding|patroni-ci|postgres-archive|sentry"}[1h]) > 0
          and on (instance, job) (pg_replication_is_replica==0)
        )
    - record: gitlab_component_utilization:pg_table_size_bytes:topk:1h
      labels:
        component: pg_table_size
        metrics_subsystem: utilization
        resource_labels: relname
        summaryType: topk
        unit: bytes
      expr: |
        topk by(env,tier,type,stage) (10,
          avg by (env,tier,type,stage,relname) (
            avg_over_time(pg_total_relation_size_bytes{env!~"gprd|ops",type=~"patroni|patroni-registry|patroni-embedding|patroni-ci|postgres-archive|sentry"}[1h])
            and on (job, instance) (
              pg_replication_is_replica{env!~"gprd|ops",type=~"patroni|patroni-registry|patroni-embedding|patroni-ci|postgres-archive|sentry"} == 0
            )
          )
        )
    - record: gitlab_component_utilization:pg_vacuum_time_per_day_seconds:1d
      labels:
        component: pg_vacuum_time_per_day
        metrics_subsystem: utilization
        summaryType: aggregate
        unit: seconds
      expr: |
        sum by (env,tier,type,stage) (
          increase(fluentd_pg_auto_vacuum_elapsed_seconds_total{env!~"gprd|ops",type=~"patroni|patroni-registry|patroni-embedding|patroni-ci|sentry"}[1d])
        )
    - record: gitlab_component_utilization:pg_wraparound_time_seconds:1d
      labels:
        component: pg_wraparound_time
        metrics_subsystem: utilization
        summaryType: aggregate
        unit: seconds
      expr: |
        (2^31 - 10^6)
        /
        (
          avg by (env,tier,type,stage) (deriv(pg_txid_current{env!~"gprd|ops",type=~"patroni|patroni-registry|patroni-embedding|patroni-ci|postgres-archive|sentry"}[1d]) > 0)
        )
