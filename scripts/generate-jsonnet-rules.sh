#!/usr/bin/env bash

set -euo pipefail
IFS=$'\n\t'

cd "$(dirname "${BASH_SOURCE[0]}")/.."

# Convert the service catalog yaml into a JSON file in a format thats consumable by jsonnet
ruby -rjson -ryaml -e "puts YAML.load(ARGF.read).to_json" ./services/service-catalog.yml >./services/service_catalog.json

tmpdir=$(mktemp -d 2>/dev/null || mktemp -d -t 'generate-jsonnet-rules')
trap 'rm -rf "${tmpdir}"' EXIT

function render_multi_jsonnet() {
  local filename="$1"

  output_files="$(jsonnet -J ./rules-jsonnet -J ./metrics-catalog/ -J ./services/ --string --multi "${tmpdir}" "${filename}")"

  warning="# WARNING. DO NOT EDIT THIS FILE BY HAND. USE ${filename} TO GENERATE IT
# YOUR CHANGES WILL BE OVERRIDDEN"

  for i in ${output_files}; do
    local b
    b=$(basename "${i}")

    (
      echo "$warning"
      ./scripts/fix-prom-rules.rb "${i}"
    ) >"./rules/autogenerated-${b}"

    rm -f "${i}"
    echo "./rules/autogenerated-${b}"
  done
}

for file in ./rules-jsonnet/*; do
  render_multi_jsonnet "${file}"
done
