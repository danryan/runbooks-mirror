#!/usr/bin/env ruby

require 'yaml'

def validate(service_catalog_path)
  service_catalog_yaml = YAML.load_file(service_catalog_path)
  services = service_catalog_yaml["services"]

  raise "Service catalog must contain one or more teams" unless service_catalog_yaml["teams"] && !service_catalog_yaml["teams"].empty?
  raise "Service catalog must contain one or more tiers" unless service_catalog_yaml["tiers"] && !service_catalog_yaml["tiers"].empty?
  raise "Service catalog must contain one or more services" unless services && !services.empty?

  team_map = service_catalog_yaml["teams"].inject({}) { |map, team| map[team["name"]] = team; map }
  tier_map = service_catalog_yaml["tiers"].inject({}) { |map, tier| map[tier["name"]] = tier; map }

  services.each do |service|
    service_name =service["name"]

    service_teams = service["teams"]
    service_teams.each do |team| 
      raise "unknown team '#{team}''" unless team_map[team]
    end
    
    raise "unknown tier '#{service["tier"]}''" unless tier_map[service["tier"]]
    raise "service '#{service_name}' requires a criticality attribute" unless service["technical"]["criticality"]
    raise "service '#{service_name}' requires at least one logging configuration" unless service["technical"]["logging"] && !service["technical"]["logging"].empty?
  end
end

begin
  validate(File.join(__dir__, "..", "services", "service-catalog.yml"))
rescue StandardError => e
  STDERR.puts "error: #{e.message}"
  exit 1
end
