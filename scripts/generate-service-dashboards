#!/usr/bin/env ruby
# frozen_string_literal: true

require 'fileutils'
require 'yaml'
require_relative '../lib/monitored_services'

def generate(service)
  file = "dashboards/#{service}/main.dashboard.jsonnet"
  puts "Generating missing #{file}"

  content = <<~JSONNET
    // This file is autogenerated using scripts/generate-service-dashboards
    // Please feel free to customize this file.
    local serviceDashboard = import 'gitlab-dashboards/service_dashboard.libsonnet';

    serviceDashboard.overview('#{service}')
    .overviewTrailer()
  JSONNET

  dirname = File.dirname(file)
  FileUtils.mkdir_p(dirname) unless File.directory?(dirname)
  File.write(file, content)
end

begin
  service_names = MonitoredServices.get_service_names
  service_names.map { |name| generate(name) unless MonitoredServices.has_dashboard?(name) }
rescue StandardError => e
  warn [e.message, *e.backtrace].join("\n")
  exit 1
end
