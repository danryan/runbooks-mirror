#! /usr/bin/env ruby
# frozen_string_literal: true
require 'net/http'
require 'yaml'
require 'json'
require 'fileutils'

stages_url = 'https://gitlab.com/gitlab-com/www-gitlab-com/-/raw/master/data/stages.yml'
mapping_path = File.join(File.dirname(__FILE__), '../services/stage-group-mapping.jsonnet')

response = Net::HTTP.get(URI(stages_url))
stages_yml = YAML.safe_load(response)

resulting_group_info = {}

stages_yml['stages'].each do |stage, stage_info|
  stage_info['groups'].each do |group, group_info|
    resulting_group_info[group] = {
      name: group_info['name'],
      stage: stage,
      feature_categories: group_info['categories']
    }
  end
end

FileUtils.mkdir_p(File.dirname(mapping_path))
File.open(mapping_path, "w") do |f|
  f.write(
    <<~JSONNET
    // This file is autogenerated using scripts/update-stage-groups-feature-categories
    // Please don't update manually
    #{JSON.pretty_generate(resulting_group_info, object_nl: "\n", array_nl: "\n", indent: '  ')}
    JSONNET
  )
end

# The generated JSON doesn't look right in jsonnet, so running our fmt cleans it
# up
`make jsonnet-fmt JSONNET_FILES=#{mapping_path}`

exec("git diff --exit-code -- #{mapping_path}") if ENV['CI']
