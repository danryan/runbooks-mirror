# WARNING. DO NOT EDIT THIS FILE BY HAND. USE ./mimir-rules-jsonnet/sli_aggregations.jsonnet TO GENERATE IT
# YOUR CHANGES WILL BE OVERRIDDEN
groups:
- name: 'SLI Aggregations: sentry - pg_transactions - 5m burn-rate'
  interval: 1m
  rules:
  - record: sli_aggregations:stackdriver_cloudsql_database_cloudsql_googleapis_com_database_postgresql_transaction_count:rate_5m
    expr: |
      sum by (component,database_id,env,environment,feature_category,fqdn,product_stage,region,shard,stage,stage_group,tier,type) (
        rate(stackdriver_cloudsql_database_cloudsql_googleapis_com_database_postgresql_transaction_count{database_id=~"gitlab-ops:sentry",env="ops",type=~"sentry"}[5m] offset 30s)
      )
- name: 'SLI Aggregations: sentry - rabbitmq_queue - 5m burn-rate'
  interval: 1m
  rules:
  - record: sli_aggregations:rabbitmq_queue_messages:rate_5m
    expr: |
      sum by (component,env,environment,feature_category,fqdn,namespace,product_stage,region,shard,stage,stage_group,tier,type) (
        rate(rabbitmq_queue_messages{env="ops",namespace=~"sentry",type=~"sentry"}[5m] offset 30s)
      )
- name: 'SLI Aggregations: sentry - redis_primary_server - 5m burn-rate'
  interval: 1m
  rules:
  - record: sli_aggregations:redis_commands_processed_total:rate_5m
    expr: |
      sum by (component,env,environment,feature_category,fqdn,instance,namespace,product_stage,region,shard,stage,stage_group,tier,type) (
        rate(redis_commands_processed_total{env="ops",namespace=~"sentry",type=~"sentry"}[5m] offset 30s)
      )
- name: 'SLI Aggregations: sentry - sentry_events - 5m burn-rate'
  interval: 1m
  rules:
  - record: sli_aggregations:nginx_ingress_controller_request_duration_seconds_bucket:rate_5m
    expr: |
      sum by (api_version,component,env,environment,feature_category,fqdn,le,namespace,product_stage,region,shard,stage,stage_group,status,tier,type) (
        rate(nginx_ingress_controller_request_duration_seconds_bucket{env="ops",namespace=~"sentry",type=~"sentry"}[5m] offset 30s)
      )
  - record: sli_aggregations:nginx_ingress_controller_requests:rate_5m
    expr: |
      sum by (api_version,component,env,environment,feature_category,fqdn,namespace,product_stage,region,shard,stage,stage_group,status,tier,type) (
        rate(nginx_ingress_controller_requests{env="ops",namespace=~"sentry",type=~"sentry"}[5m] offset 30s)
      )
- name: 'SLI Aggregations: sentry - pg_transactions - 30m burn-rate'
  interval: 2m
  rules:
  - record: sli_aggregations:stackdriver_cloudsql_database_cloudsql_googleapis_com_database_postgresql_transaction_count:rate_30m
    expr: |
      sum by (component,database_id,env,environment,feature_category,fqdn,product_stage,region,shard,stage,stage_group,tier,type) (
        rate(stackdriver_cloudsql_database_cloudsql_googleapis_com_database_postgresql_transaction_count{database_id=~"gitlab-ops:sentry",env="ops",type=~"sentry"}[30m] offset 30s)
      )
- name: 'SLI Aggregations: sentry - rabbitmq_queue - 30m burn-rate'
  interval: 2m
  rules:
  - record: sli_aggregations:rabbitmq_queue_messages:rate_30m
    expr: |
      sum by (component,env,environment,feature_category,fqdn,namespace,product_stage,region,shard,stage,stage_group,tier,type) (
        rate(rabbitmq_queue_messages{env="ops",namespace=~"sentry",type=~"sentry"}[30m] offset 30s)
      )
- name: 'SLI Aggregations: sentry - redis_primary_server - 30m burn-rate'
  interval: 2m
  rules:
  - record: sli_aggregations:redis_commands_processed_total:rate_30m
    expr: |
      sum by (component,env,environment,feature_category,fqdn,instance,namespace,product_stage,region,shard,stage,stage_group,tier,type) (
        rate(redis_commands_processed_total{env="ops",namespace=~"sentry",type=~"sentry"}[30m] offset 30s)
      )
- name: 'SLI Aggregations: sentry - sentry_events - 30m burn-rate'
  interval: 2m
  rules:
  - record: sli_aggregations:nginx_ingress_controller_request_duration_seconds_bucket:rate_30m
    expr: |
      sum by (api_version,component,env,environment,feature_category,fqdn,le,namespace,product_stage,region,shard,stage,stage_group,status,tier,type) (
        rate(nginx_ingress_controller_request_duration_seconds_bucket{env="ops",namespace=~"sentry",type=~"sentry"}[30m] offset 30s)
      )
  - record: sli_aggregations:nginx_ingress_controller_requests:rate_30m
    expr: |
      sum by (api_version,component,env,environment,feature_category,fqdn,namespace,product_stage,region,shard,stage,stage_group,status,tier,type) (
        rate(nginx_ingress_controller_requests{env="ops",namespace=~"sentry",type=~"sentry"}[30m] offset 30s)
      )
- name: 'SLI Aggregations: sentry - pg_transactions - 1h burn-rate'
  interval: 1m
  rules:
  - record: sli_aggregations:stackdriver_cloudsql_database_cloudsql_googleapis_com_database_postgresql_transaction_count:rate_1h
    expr: |
      sum by (component,database_id,env,environment,feature_category,fqdn,product_stage,region,shard,stage,stage_group,tier,type) (
        rate(stackdriver_cloudsql_database_cloudsql_googleapis_com_database_postgresql_transaction_count{database_id=~"gitlab-ops:sentry",env="ops",type=~"sentry"}[1h] offset 30s)
      )
- name: 'SLI Aggregations: sentry - rabbitmq_queue - 1h burn-rate'
  interval: 1m
  rules:
  - record: sli_aggregations:rabbitmq_queue_messages:rate_1h
    expr: |
      sum by (component,env,environment,feature_category,fqdn,namespace,product_stage,region,shard,stage,stage_group,tier,type) (
        rate(rabbitmq_queue_messages{env="ops",namespace=~"sentry",type=~"sentry"}[1h] offset 30s)
      )
- name: 'SLI Aggregations: sentry - redis_primary_server - 1h burn-rate'
  interval: 1m
  rules:
  - record: sli_aggregations:redis_commands_processed_total:rate_1h
    expr: |
      sum by (component,env,environment,feature_category,fqdn,instance,namespace,product_stage,region,shard,stage,stage_group,tier,type) (
        rate(redis_commands_processed_total{env="ops",namespace=~"sentry",type=~"sentry"}[1h] offset 30s)
      )
- name: 'SLI Aggregations: sentry - sentry_events - 1h burn-rate'
  interval: 1m
  rules:
  - record: sli_aggregations:nginx_ingress_controller_request_duration_seconds_bucket:rate_1h
    expr: |
      sum by (api_version,component,env,environment,feature_category,fqdn,le,namespace,product_stage,region,shard,stage,stage_group,status,tier,type) (
        rate(nginx_ingress_controller_request_duration_seconds_bucket{env="ops",namespace=~"sentry",type=~"sentry"}[1h] offset 30s)
      )
  - record: sli_aggregations:nginx_ingress_controller_requests:rate_1h
    expr: |
      sum by (api_version,component,env,environment,feature_category,fqdn,namespace,product_stage,region,shard,stage,stage_group,status,tier,type) (
        rate(nginx_ingress_controller_requests{env="ops",namespace=~"sentry",type=~"sentry"}[1h] offset 30s)
      )
