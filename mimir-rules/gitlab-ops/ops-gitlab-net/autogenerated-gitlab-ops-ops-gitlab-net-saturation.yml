# WARNING. DO NOT EDIT THIS FILE BY HAND. USE ./mimir-rules-jsonnet/saturation.jsonnet TO GENERATE IT
# YOUR CHANGES WILL BE OVERRIDDEN
groups:
- name: Saturation Rules (autogenerated)
  interval: 1m
  rules:
  - record: gitlab_component_saturation:ratio
    labels:
      component: cloudsql_cpu
      stage: main
      tier: inf
      type: monitoring
    expr: |
      max by(env, environment, shard) (
        clamp_min(
          clamp_max(
            avg_over_time(stackdriver_cloudsql_database_cloudsql_googleapis_com_database_cpu_utilization{env="ops",type="ops-gitlab-net"}[5m])
            ,
            1)
        ,
        0)
      )
  - record: gitlab_component_saturation:ratio
    labels:
      component: cloudsql_disk
      stage: main
      tier: inf
      type: monitoring
    expr: |
      max by(env, environment, shard) (
        clamp_min(
          clamp_max(
            avg_over_time(stackdriver_cloudsql_database_cloudsql_googleapis_com_database_disk_utilization{env="ops",type="ops-gitlab-net"}[5m])
            ,
            1)
        ,
        0)
      )
  - record: gitlab_component_saturation:ratio
    labels:
      component: cloudsql_memory
      stage: main
      tier: inf
      type: monitoring
    expr: |
      max by(env, environment, shard) (
        clamp_min(
          clamp_max(
            avg_over_time(stackdriver_cloudsql_database_cloudsql_googleapis_com_database_memory_utilization{env="ops",type="ops-gitlab-net"}[5m])
            ,
            1)
        ,
        0)
      )
  - record: gitlab_component_saturation:ratio
    labels:
      component: kube_container_cpu
    expr: |
      quantile by(env, environment, tier, type, stage, shard) (
        0.99,
        clamp_min(
          clamp_max(
            (
              sum by (env, environment, tier, type, stage, shard, pod, container) (
                rate(container_cpu_usage_seconds_total:labeled{container!="", container!="POD", env="ops",type="ops-gitlab-net"}[1h])
              )
              unless on(env, environment, tier, type, stage, shard, pod, container) (
                last_over_time(container_spec_cpu_quota:labeled{container!="", container!="POD", env="ops",type="ops-gitlab-net"}[1h])
              )
            )
            /
            sum by(env, environment, tier, type, stage, shard, pod, container) (
              kube_pod_container_resource_requests:labeled{container!="", container!="POD", resource="cpu", env="ops",type="ops-gitlab-net"}
            )
            ,
            1)
        ,
        0)
      )
  - record: gitlab_component_saturation:ratio
    labels:
      component: kube_container_cpu_limit
    expr: |
      max by(env, environment, tier, type, stage, shard) (
        clamp_min(
          clamp_max(
            sum by (env, environment, tier, type, stage, shard, pod, container) (
              rate(container_cpu_usage_seconds_total:labeled{container!="", container!="POD", env="ops",type="ops-gitlab-net"}[5m])
            )
            /
            sum by(env, environment, tier, type, stage, shard, pod, container) (
              container_spec_cpu_quota:labeled{container!="", container!="POD", env="ops",type="ops-gitlab-net"}
              /
              container_spec_cpu_period:labeled{container!="", container!="POD", env="ops",type="ops-gitlab-net"}
            )
            ,
            1)
        ,
        0)
      )
  - record: gitlab_component_saturation:ratio
    labels:
      component: kube_container_rss
    expr: |
      max by(env, environment, tier, type, stage, shard) (
        clamp_min(
          clamp_max(
            container_memory_rss:labeled{container!="", container!="POD", env="ops",type="ops-gitlab-net"}
            /
            (container_spec_memory_limit_bytes:labeled{container!="", container!="POD", env="ops",type="ops-gitlab-net"} > 0)
            ,
            1)
        ,
        0)
      )
  - record: gitlab_component_saturation:ratio
    labels:
      component: kube_container_throttling
    expr: |
      quantile by(env, environment, tier, type, stage, shard) (
        0.99,
        clamp_min(
          clamp_max(
            avg by (env, environment, tier, type, stage, shard, pod, container)(
              rate(container_cpu_cfs_throttled_periods_total:labeled{container!="", env="ops",type="ops-gitlab-net"}[5m])
              /
              rate(container_cpu_cfs_periods_total:labeled{container!="", env="ops",type="ops-gitlab-net"}[5m])
            )
            ,
            1)
        ,
        0)
      )
  - record: gitlab_component_saturation:ratio
    labels:
      component: kube_go_memory
    expr: |
      max by(env, environment, tier, type, stage, shard) (
        clamp_min(
          clamp_max(
            go_memstats_alloc_bytes{env="ops",type="ops-gitlab-net"}
            / on(env, environment, tier, type, stage, shard, cluster, pod) group_left()
            topk by(env, environment, tier, type, stage, shard, cluster, pod) (1,
              container_spec_memory_limit_bytes:labeled{container=~"gitlab-pages|gitlab-workhorse|kas|registry|thanos-store",env="ops",type="ops-gitlab-net"}
            )
            ,
            1)
        ,
        0)
      )
  - record: gitlab_component_saturation:ratio
    labels:
      component: kube_horizontalpodautoscaler_desired_replicas
    expr: |
      max by(env, environment, tier, type, stage, shard) (
        clamp_min(
          clamp_max(
            kube_horizontalpodautoscaler_status_desired_replicas:labeled{env="ops",type="ops-gitlab-net", shard!~"ai-abstraction-layer|database-throttled|elasticsearch|gitaly-throttled|urgent-authorized-projects", namespace!~"pubsubbeat"}
            /
            kube_horizontalpodautoscaler_spec_max_replicas:labeled{env="ops",type="ops-gitlab-net", shard!~"ai-abstraction-layer|database-throttled|elasticsearch|gitaly-throttled|urgent-authorized-projects", namespace!~"pubsubbeat"}
            ,
            1)
        ,
        0)
      )
  - record: gitlab_component_saturation:ratio
    labels:
      component: kube_persistent_volume_claim_disk_space
      stage: main
      tier: inf
      type: kube
    expr: |
      max by(env, environment, shard) (
        clamp_min(
          clamp_max(
            kubelet_volume_stats_used_bytes:labeled{env="ops",type="ops-gitlab-net"}
            /
            kubelet_volume_stats_capacity_bytes:labeled{env="ops",type="ops-gitlab-net"}
            ,
            1)
        ,
        0)
      )
  - record: gitlab_component_saturation:ratio
    labels:
      component: kube_persistent_volume_claim_inodes
      stage: main
      tier: inf
      type: kube
    expr: |
      max by(env, environment, shard) (
        clamp_min(
          clamp_max(
            kubelet_volume_stats_inodes_used:labeled{env="ops",type="ops-gitlab-net"}
            /
            kubelet_volume_stats_inodes:labeled{env="ops",type="ops-gitlab-net"}
            ,
            1)
        ,
        0)
      )
  - record: gitlab_component_saturation:ratio
    labels:
      component: open_fds
    expr: |
      max by(env, environment, tier, type, stage, shard) (
        clamp_min(
          clamp_max(
            (
              process_open_fds{env="ops",type="ops-gitlab-net"}
              /
              process_max_fds{env="ops",type="ops-gitlab-net"}
            )
            or
            (
              ruby_file_descriptors{env="ops",type="ops-gitlab-net"}
              /
              ruby_process_max_fds{env="ops",type="ops-gitlab-net"}
            )
            ,
            1)
        ,
        0)
      )
  - record: gitlab_component_saturation:ratio
    labels:
      component: ruby_thread_contention
    expr: |
      quantile by(env, environment, tier, type, stage, shard) (
        0.99,
        clamp_min(
          clamp_max(
            rate(ruby_process_cpu_seconds_total{env="ops",type="ops-gitlab-net"}[1h])
            ,
            1)
        ,
        0)
      )
