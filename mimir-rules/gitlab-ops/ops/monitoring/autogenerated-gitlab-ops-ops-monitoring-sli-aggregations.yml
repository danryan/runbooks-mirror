# WARNING. DO NOT EDIT THIS FILE BY HAND. USE ./mimir-rules-jsonnet/sli_aggregations.jsonnet TO GENERATE IT
# YOUR CHANGES WILL BE OVERRIDDEN
groups:
- name: 'SLI Aggregations: monitoring - 5m burn-rate'
  interval: 1m
  rules:
  - record: sli_aggregations:grafana_datasource_request_total:rate_5m
    expr: |
      sum by (code,component,datasource,env,environment,feature_category,fqdn,job,pod,product_stage,queue,region,shard,stage,stage_group,tier,type,urgency,worker) (
        rate(grafana_datasource_request_total{env="ops",job=~"grafana",shard=~"default",type=~"monitoring"}[5m] offset 30s)
      )
  - record: sli_aggregations:grafana_http_request_duration_seconds_bucket:rate_5m
    expr: |
      sum by (code,component,env,environment,feature_category,fqdn,job,le,pod,product_stage,queue,region,shard,stage,stage_group,tier,type,urgency,worker) (
        rate(grafana_http_request_duration_seconds_bucket{env="ops",job=~"grafana",shard=~"default",type=~"monitoring"}[5m] offset 30s)
      )
  - record: sli_aggregations:grafana_image_renderer_service_http_request_duration_seconds_bucket:rate_5m
    expr: |
      sum by (component,env,environment,feature_category,fqdn,job,le,pod,product_stage,queue,region,shard,stage,stage_group,status_code,tier,type,urgency,worker) (
        rate(grafana_image_renderer_service_http_request_duration_seconds_bucket{env="ops",job=~"grafana-image-renderer",shard=~"default",type=~"monitoring"}[5m] offset 30s)
      )
  - record: sli_aggregations:prometheus_http_request_duration_seconds_bucket:rate_5m
    expr: |
      sum by (component,env,environment,feature_category,fqdn,handler,job,le,pod,product_stage,queue,region,shard,stage,stage_group,tier,type,urgency,worker) (
        rate(prometheus_http_request_duration_seconds_bucket{env="ops",job=~"prometheus.*",type=~"monitoring"}[5m] offset 30s)
      )
  - record: sli_aggregations:prometheus_http_requests_total:rate_5m
    expr: |
      sum by (code,component,env,environment,feature_category,fqdn,handler,job,pod,product_stage,queue,region,shard,stage,stage_group,tier,type,urgency,worker) (
        rate(prometheus_http_requests_total{env="ops",job=~"prometheus.*",type=~"monitoring"}[5m] offset 30s)
      )
  - record: sli_aggregations:prometheus_notifications_errors_total:rate_5m
    expr: |
      sum by (alertmanager,component,env,environment,feature_category,fqdn,job,pod,product_stage,queue,region,shard,stage,stage_group,tier,type,urgency,worker) (
        rate(prometheus_notifications_errors_total{env="ops",job=~"prometheus",type=~"monitoring"}[5m] offset 30s)
      )
  - record: sli_aggregations:prometheus_notifications_sent_total:rate_5m
    expr: |
      sum by (alertmanager,component,env,environment,feature_category,fqdn,job,pod,product_stage,queue,region,shard,stage,stage_group,tier,type,urgency,worker) (
        rate(prometheus_notifications_sent_total{env="ops",job=~"prometheus",type=~"monitoring"}[5m] offset 30s)
      )
  - record: sli_aggregations:prometheus_rule_evaluation_failures_total:rate_5m
    expr: |
      sum by (component,env,environment,feature_category,fqdn,job,pod,product_stage,queue,region,rule_group,shard,stage,stage_group,tier,type,urgency,worker) (
        rate(prometheus_rule_evaluation_failures_total{env="ops",type=~"monitoring"}[5m] offset 30s)
      )
  - record: sli_aggregations:prometheus_rule_evaluations_total:rate_5m
    expr: |
      sum by (component,env,environment,feature_category,fqdn,job,pod,product_stage,queue,region,rule_group,shard,stage,stage_group,tier,type,urgency,worker) (
        rate(prometheus_rule_evaluations_total{env="ops",type=~"monitoring"}[5m] offset 30s)
      )
  - record: sli_aggregations:prometheus_rule_group_iterations_missed_total:rate_5m
    expr: |
      sum by (component,env,environment,feature_category,fqdn,job,pod,product_stage,queue,region,rule_group,shard,stage,stage_group,tier,type,urgency,worker) (
        rate(prometheus_rule_group_iterations_missed_total{env="ops",type=~"monitoring"}[5m] offset 30s)
      )
  - record: sli_aggregations:prometheus_rule_group_iterations_total:rate_5m
    expr: |
      sum by (component,env,environment,feature_category,fqdn,job,pod,product_stage,queue,region,rule_group,shard,stage,stage_group,tier,type,urgency,worker) (
        rate(prometheus_rule_group_iterations_total{env="ops",type=~"monitoring"}[5m] offset 30s)
      )
  - record: sli_aggregations:stackdriver_https_lb_rule_loadbalancing_googleapis_com_https_request_count:rate_5m
    expr: |
      sum by (component,env,environment,feature_category,fqdn,product_stage,project_id,proxy_continent,queue,region,response_code,response_code_class,shard,stage,stage_group,tier,type,urgency,url_map_name,worker) (
        rate(stackdriver_https_lb_rule_loadbalancing_googleapis_com_https_request_count{env="ops",project_id=~"gitlab-ops",type=~"monitoring",url_map_name=~"k8s2-um-4zodnh0s-grafana-grafana-cfagrqyu"}[5m] offset 30s)
      )
- name: 'SLI Aggregations: monitoring - 30m burn-rate'
  interval: 2m
  rules:
  - record: sli_aggregations:grafana_datasource_request_total:rate_30m
    expr: |
      sum by (code,component,datasource,env,environment,feature_category,fqdn,job,pod,product_stage,queue,region,shard,stage,stage_group,tier,type,urgency,worker) (
        rate(grafana_datasource_request_total{env="ops",job=~"grafana",shard=~"default",type=~"monitoring"}[30m] offset 30s)
      )
  - record: sli_aggregations:grafana_http_request_duration_seconds_bucket:rate_30m
    expr: |
      sum by (code,component,env,environment,feature_category,fqdn,job,le,pod,product_stage,queue,region,shard,stage,stage_group,tier,type,urgency,worker) (
        rate(grafana_http_request_duration_seconds_bucket{env="ops",job=~"grafana",shard=~"default",type=~"monitoring"}[30m] offset 30s)
      )
  - record: sli_aggregations:grafana_image_renderer_service_http_request_duration_seconds_bucket:rate_30m
    expr: |
      sum by (component,env,environment,feature_category,fqdn,job,le,pod,product_stage,queue,region,shard,stage,stage_group,status_code,tier,type,urgency,worker) (
        rate(grafana_image_renderer_service_http_request_duration_seconds_bucket{env="ops",job=~"grafana-image-renderer",shard=~"default",type=~"monitoring"}[30m] offset 30s)
      )
  - record: sli_aggregations:prometheus_http_request_duration_seconds_bucket:rate_30m
    expr: |
      sum by (component,env,environment,feature_category,fqdn,handler,job,le,pod,product_stage,queue,region,shard,stage,stage_group,tier,type,urgency,worker) (
        rate(prometheus_http_request_duration_seconds_bucket{env="ops",job=~"prometheus.*",type=~"monitoring"}[30m] offset 30s)
      )
  - record: sli_aggregations:prometheus_http_requests_total:rate_30m
    expr: |
      sum by (code,component,env,environment,feature_category,fqdn,handler,job,pod,product_stage,queue,region,shard,stage,stage_group,tier,type,urgency,worker) (
        rate(prometheus_http_requests_total{env="ops",job=~"prometheus.*",type=~"monitoring"}[30m] offset 30s)
      )
  - record: sli_aggregations:prometheus_notifications_errors_total:rate_30m
    expr: |
      sum by (alertmanager,component,env,environment,feature_category,fqdn,job,pod,product_stage,queue,region,shard,stage,stage_group,tier,type,urgency,worker) (
        rate(prometheus_notifications_errors_total{env="ops",job=~"prometheus",type=~"monitoring"}[30m] offset 30s)
      )
  - record: sli_aggregations:prometheus_notifications_sent_total:rate_30m
    expr: |
      sum by (alertmanager,component,env,environment,feature_category,fqdn,job,pod,product_stage,queue,region,shard,stage,stage_group,tier,type,urgency,worker) (
        rate(prometheus_notifications_sent_total{env="ops",job=~"prometheus",type=~"monitoring"}[30m] offset 30s)
      )
  - record: sli_aggregations:prometheus_rule_evaluation_failures_total:rate_30m
    expr: |
      sum by (component,env,environment,feature_category,fqdn,job,pod,product_stage,queue,region,rule_group,shard,stage,stage_group,tier,type,urgency,worker) (
        rate(prometheus_rule_evaluation_failures_total{env="ops",type=~"monitoring"}[30m] offset 30s)
      )
  - record: sli_aggregations:prometheus_rule_evaluations_total:rate_30m
    expr: |
      sum by (component,env,environment,feature_category,fqdn,job,pod,product_stage,queue,region,rule_group,shard,stage,stage_group,tier,type,urgency,worker) (
        rate(prometheus_rule_evaluations_total{env="ops",type=~"monitoring"}[30m] offset 30s)
      )
  - record: sli_aggregations:prometheus_rule_group_iterations_missed_total:rate_30m
    expr: |
      sum by (component,env,environment,feature_category,fqdn,job,pod,product_stage,queue,region,rule_group,shard,stage,stage_group,tier,type,urgency,worker) (
        rate(prometheus_rule_group_iterations_missed_total{env="ops",type=~"monitoring"}[30m] offset 30s)
      )
  - record: sli_aggregations:prometheus_rule_group_iterations_total:rate_30m
    expr: |
      sum by (component,env,environment,feature_category,fqdn,job,pod,product_stage,queue,region,rule_group,shard,stage,stage_group,tier,type,urgency,worker) (
        rate(prometheus_rule_group_iterations_total{env="ops",type=~"monitoring"}[30m] offset 30s)
      )
  - record: sli_aggregations:stackdriver_https_lb_rule_loadbalancing_googleapis_com_https_request_count:rate_30m
    expr: |
      sum by (component,env,environment,feature_category,fqdn,product_stage,project_id,proxy_continent,queue,region,response_code,response_code_class,shard,stage,stage_group,tier,type,urgency,url_map_name,worker) (
        rate(stackdriver_https_lb_rule_loadbalancing_googleapis_com_https_request_count{env="ops",project_id=~"gitlab-ops",type=~"monitoring",url_map_name=~"k8s2-um-4zodnh0s-grafana-grafana-cfagrqyu"}[30m] offset 30s)
      )
- name: 'SLI Aggregations: monitoring - 1h burn-rate'
  interval: 1m
  rules:
  - record: sli_aggregations:grafana_datasource_request_total:rate_1h
    expr: |
      sum by (code,component,datasource,env,environment,feature_category,fqdn,job,pod,product_stage,queue,region,shard,stage,stage_group,tier,type,urgency,worker) (
        rate(grafana_datasource_request_total{env="ops",job=~"grafana",shard=~"default",type=~"monitoring"}[1h] offset 30s)
      )
  - record: sli_aggregations:grafana_http_request_duration_seconds_bucket:rate_1h
    expr: |
      sum by (code,component,env,environment,feature_category,fqdn,job,le,pod,product_stage,queue,region,shard,stage,stage_group,tier,type,urgency,worker) (
        rate(grafana_http_request_duration_seconds_bucket{env="ops",job=~"grafana",shard=~"default",type=~"monitoring"}[1h] offset 30s)
      )
  - record: sli_aggregations:grafana_image_renderer_service_http_request_duration_seconds_bucket:rate_1h
    expr: |
      sum by (component,env,environment,feature_category,fqdn,job,le,pod,product_stage,queue,region,shard,stage,stage_group,status_code,tier,type,urgency,worker) (
        rate(grafana_image_renderer_service_http_request_duration_seconds_bucket{env="ops",job=~"grafana-image-renderer",shard=~"default",type=~"monitoring"}[1h] offset 30s)
      )
  - record: sli_aggregations:prometheus_http_request_duration_seconds_bucket:rate_1h
    expr: |
      sum by (component,env,environment,feature_category,fqdn,handler,job,le,pod,product_stage,queue,region,shard,stage,stage_group,tier,type,urgency,worker) (
        rate(prometheus_http_request_duration_seconds_bucket{env="ops",job=~"prometheus.*",type=~"monitoring"}[1h] offset 30s)
      )
  - record: sli_aggregations:prometheus_http_requests_total:rate_1h
    expr: |
      sum by (code,component,env,environment,feature_category,fqdn,handler,job,pod,product_stage,queue,region,shard,stage,stage_group,tier,type,urgency,worker) (
        rate(prometheus_http_requests_total{env="ops",job=~"prometheus.*",type=~"monitoring"}[1h] offset 30s)
      )
  - record: sli_aggregations:prometheus_notifications_errors_total:rate_1h
    expr: |
      sum by (alertmanager,component,env,environment,feature_category,fqdn,job,pod,product_stage,queue,region,shard,stage,stage_group,tier,type,urgency,worker) (
        rate(prometheus_notifications_errors_total{env="ops",job=~"prometheus",type=~"monitoring"}[1h] offset 30s)
      )
  - record: sli_aggregations:prometheus_notifications_sent_total:rate_1h
    expr: |
      sum by (alertmanager,component,env,environment,feature_category,fqdn,job,pod,product_stage,queue,region,shard,stage,stage_group,tier,type,urgency,worker) (
        rate(prometheus_notifications_sent_total{env="ops",job=~"prometheus",type=~"monitoring"}[1h] offset 30s)
      )
  - record: sli_aggregations:prometheus_rule_evaluation_failures_total:rate_1h
    expr: |
      sum by (component,env,environment,feature_category,fqdn,job,pod,product_stage,queue,region,rule_group,shard,stage,stage_group,tier,type,urgency,worker) (
        rate(prometheus_rule_evaluation_failures_total{env="ops",type=~"monitoring"}[1h] offset 30s)
      )
  - record: sli_aggregations:prometheus_rule_evaluations_total:rate_1h
    expr: |
      sum by (component,env,environment,feature_category,fqdn,job,pod,product_stage,queue,region,rule_group,shard,stage,stage_group,tier,type,urgency,worker) (
        rate(prometheus_rule_evaluations_total{env="ops",type=~"monitoring"}[1h] offset 30s)
      )
  - record: sli_aggregations:prometheus_rule_group_iterations_missed_total:rate_1h
    expr: |
      sum by (component,env,environment,feature_category,fqdn,job,pod,product_stage,queue,region,rule_group,shard,stage,stage_group,tier,type,urgency,worker) (
        rate(prometheus_rule_group_iterations_missed_total{env="ops",type=~"monitoring"}[1h] offset 30s)
      )
  - record: sli_aggregations:prometheus_rule_group_iterations_total:rate_1h
    expr: |
      sum by (component,env,environment,feature_category,fqdn,job,pod,product_stage,queue,region,rule_group,shard,stage,stage_group,tier,type,urgency,worker) (
        rate(prometheus_rule_group_iterations_total{env="ops",type=~"monitoring"}[1h] offset 30s)
      )
  - record: sli_aggregations:stackdriver_https_lb_rule_loadbalancing_googleapis_com_https_request_count:rate_1h
    expr: |
      sum by (component,env,environment,feature_category,fqdn,product_stage,project_id,proxy_continent,queue,region,response_code,response_code_class,shard,stage,stage_group,tier,type,urgency,url_map_name,worker) (
        rate(stackdriver_https_lb_rule_loadbalancing_googleapis_com_https_request_count{env="ops",project_id=~"gitlab-ops",type=~"monitoring",url_map_name=~"k8s2-um-4zodnh0s-grafana-grafana-cfagrqyu"}[1h] offset 30s)
      )
