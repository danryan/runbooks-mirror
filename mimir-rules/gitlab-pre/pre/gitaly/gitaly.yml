groups:
- name: Gitaly grpc handled
  interval: 1m
  rules:
  - record: gitaly_grpc:grpc_server_handled_total:rate1m
    expr: >
      sum without (fqdn,instance) (
        rate(grpc_server_handled_total{job="scrapeConfig/monitoring/prometheus-agent-gitaly", env="pre"}[1m])
      )
  - record: gitaly:grpc_server_handled_total:rate1m
    expr: >
      sum without (grpc_code) (
        gitaly_grpc:grpc_server_handled_total:rate1m{env="pre"}
      )
  - record: gitaly:grpc_server_handled_total:error_rate1m
    expr: gitaly_grpc:grpc_server_handled_total:rate1m{grpc_code!="OK",grpc_code!="Canceled",grpc_code!="NotFound", env="pre"}
  - record: gitaly:grpc_server_handled_total:instance_error_rate1m
    expr: >
      sum without (grpc_code, grpc_method, grpc_service, grpc_type) (
        rate(grpc_server_handled_total{job="scrapeConfig/monitoring/prometheus-agent-gitaly",grpc_code!="OK",env="pre"}[1m])
      )

- name: Gitaly grpc server handling buckets
  interval: 1m
  rules:
  - record: gitaly_instance:grpc_server_handling_seconds_bucket:rate1m
    expr: >
      sum without (grpc_service, grpc_type) (
        rate(grpc_server_handling_seconds_bucket{job="scrapeConfig/monitoring/prometheus-agent-gitaly",env="pre"}[1m])
      )
  - record: gitaly:grpc_server_handling_seconds_bucket:rate1m
    expr: >
      sum without (fqdn, instance) (
        gitaly_instance:grpc_server_handling_seconds_bucket:rate1m{env="pre"}
      )
  - record: gitaly:grpc_server_handling_seconds:p95
    expr: >
      histogram_quantile(0.95,
        sum without (grpc_method) (
          gitaly_instance:grpc_server_handling_seconds_bucket:rate1m{env="pre"}
        )
      )
  - record: gitaly:grpc_server_handling_seconds:p50
    expr: >
      histogram_quantile(0.5,
        sum without (grpc_method) (
          gitaly_instance:grpc_server_handling_seconds_bucket:rate1m{env="pre"}
        )
      )

- name: Gitaly grpc server handled
  rules:
  - record: gitaly_instance_grpc_method_code:grpc_server_handled_total:irate1m
    expr: >
      sum without (fqdn, instance, grpc_service, grpc_type) (
        irate(grpc_server_handled_total{job="scrapeConfig/monitoring/prometheus-agent-gitaly",env="pre"}[1m])
      )

- name: Gitaly grpc misc
  interval: 1m
  rules:
  - record: gitaly:grpc_server_handling_seconds:avg5m
    expr: >
       avg without (fqdn, instance, grpc_service, grpc_type) (
         rate(grpc_server_handling_seconds_sum{job="scrapeConfig/monitoring/prometheus-agent-gitaly",env="pre"}[5m])
           /
         rate(grpc_server_handling_seconds_count{job="scrapeConfig/monitoring/prometheus-agent-gitaly",env="pre"}[5m]) > 0
       )
  - record: instance:gitaly_grpc_errors_total:rate1m
    expr: >
      sum without (grpc_method, grpc_type, grpc_service, grpc_code) (
        rate(grpc_server_handled_total{job="scrapeConfig/monitoring/prometheus-agent-gitaly",grpc_code!="OK",env="pre"}[1m])
      )

- name: Gitaly rate limiting
  rules:
  - record: gitaly:gitaly_rate_limiting_queued:grpc_method
    expr: sum(gitaly_rate_limiting_queued{env="pre"}) by (environment, grpc_method, job)

