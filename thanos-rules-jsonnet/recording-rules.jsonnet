local recordingRuleRenderer = import './lib/recording_rule_renderer.libsonnet';
local services = import './services/all.jsonnet';

local outputPromYaml(groups) =
  std.manifestYamlDoc({
    groups: groups,
  });

// Select all services with `autogenerateRecordingRules` (default on)
local selectedServices = std.filter(function(service) ({ autogenerateRecordingRules: true } + service).autogenerateRecordingRules, services);

{
  'service-slos.yml':
    outputPromYaml([{
      name: 'Autogenerated Service SLOs',
      interval: '5m',
      partial_response_strategy: 'warn',
      rules: recordingRuleRenderer.serviceSLOs(selectedServices),
    }]),

  'component-error-ratios.yml':
    outputPromYaml([{
      name: 'Autogenerated Multiwindow Component Errors Ratios',
      interval: '1m',
      partial_response_strategy: 'warn',
      rules: recordingRuleRenderer.multiwindowComponentErrorRatios(includeMonitorSelector=true),
    }]),

  'service-error-ratios.yml':
    outputPromYaml([{
      name: 'Autogenerated Multiwindow Service Errors Ratios',
      interval: '1m',
      partial_response_strategy: 'warn',
      rules: recordingRuleRenderer.multiwindowServiceErrorRatios(includeMonitorSelector=true),
    }]),
}
