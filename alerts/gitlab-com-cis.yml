groups:
- name: gitlab-com-ci.rules
  rules:
  - alert: TooManyPendingBuildsOnSharedRunnerProject
    expr: (ci_pending_builds{has_minutes="yes",shared_runners="yes"} > 500) and (topk(1,
      predict_linear(ci_pending_builds{has_minutes="yes",shared_runners="yes"}[15m],
      3600)) > 1000)
    for: 5m
    labels:
      channel: ci-cd
      severity: warn
    annotations:
      description: The number of pending builds for projects with shared runners is
        increasing and will be too high in 1h ({{$value}}). This may suggest problems
        with auto-scaling provider or Runner stability. You should check Runner's
        logs. Check http://performance.gitlab.net/dashboard/db/ci.
      title: 'The number of pending builds for projects with shared runners will be
        too high in 1h: {{$value | printf "%.2f" }}'
  - alert: TooManyPendingJobsPerNamespace
    expr: max(ci_pending_builds{has_minutes="yes",namespace!="",shared_runners="yes"})
      > 500
    for: 1m
    labels:
      channel: ci-cd
      severity: warn
    annotations:
      description: Number of pending jobs per namespace for projects with shared runners
        enabled is too high ({{$value}}). Check https://performance.gitlab.net/dashboard/db/ci?panelId=33&fullscreen
      runbook: troubleshooting/ci_pending_builds.md#2-verify-graphs-and-potential-outcomes-out-of-the-graphs-as-described-in-ci-graphsci_graphsmd
      title: 'Number of pending jobs per namespace too high: {{$value}}'
  - alert: NoJobsOnSharedRunners
    expr: sum(ci_runner_builds{job="shared-runners"}) == 0
    for: 5m
    labels:
      channel: ci-cd
      severity: warn
    annotations:
      description: Number of builds running on shared runners for the last 5 minutes
        is 0. This may suggest problems with auto-scaling provider or Runner stability.
        You should check Runner's logs. Check http://performance.gitlab.net/dashboard/db/ci.
      title: 'Number of builds running on shared runners is too low: {{$value}}'
  - alert: TooManyJobsOnSharedRunners
    expr: sum(ci_runner_builds{job="shared-runners"}) > 300
    for: 15m
    labels:
      channel: ci-cd
      severity: warn
    annotations:
      description: This may suggest problems with our autoscaled machines fleet OR
        abusive usage of Runners. Check https://performance.gitlab.net/dashboard/db/ci
        and https://log.gitlap.com/app/kibana#/dashboard/5d3921f0-79e0-11e7-a8e2-f91bfad41e34
      title: Number of jobs running on shared runners is over 300 for the last 15
        minutes
  - alert: RunnersManagerDown
    expr: up{job=~"shared-runners|shared-runners-gitlab-org|shared-runners-high-cpu|private-runners|omnibus-runners"}
      == 0
    for: 5m
    labels:
      pager: ci-cd
      severity: critical
    annotations:
      description: 'This impacts CI execution builds, consider tweeting: !tweet ''Builds
        are being delayed due to our shared runners manager being non responsive.
        We are restarting it to restore the service and then investigating the root
        cause''. Hosts impacted - {{ $labels.instance }}'
      runbook: troubleshooting/runners_manager_is_down.md
      title: Runners manager is down on {{ $labels.instance }}
  - alert: RunnerMachineCreationRateHigh
    expr: sum(ci_docker_machines_provider_machine_states{state="creating"}) / (sum(ci_docker_machines_provider_machine_states{state="idle"})
      + 1) > 100
    for: 1m
    labels:
      channel: ci-cd
      severity: warn
    annotations:
      description: Machine creation rate for the last 1 minute is at least {{$value}}
        times greater than machines idle rate. This may by a symptom of problems with
        the auto-scaling provider. Check http://performance.gitlab.net/dashboard/db/ci.
      runbook: troubleshooting/ci_graphs.md#runners-manager-auto-scaling
      title: 'Machine creation rate for runners is too high: {{$value | printf "%.2f"
        }}'
  - alert: RunnersCacheDown
    expr: (probe_success{instance=~"runners-cache.*:(5000/v2|9000/minio/login)"} ==
      0)
    for: 5m
    labels:
      severity: critical
    annotations:
      description: 'This impacts CI execution builds, consider tweeting: !tweet ''CI
        executions are being delayed due to our runners cache being down at GitLab.com,
        we are investigating the root cause'''
      runbook: troubleshooting/runners_cache_is_down.md
      title: Runners cache service {{ $labels.instance }} on {{ $labels.fqdn }} has
        been down for more than 5 minutes.
  - alert: RunnersCacheNginxDown
    expr: up{job="runners-cache-server"} == 0
    for: 5m
    labels:
      severity: critical
    annotations:
      description: 'This impacts CI execution builds, consider tweeting: !tweet ''CI
        executions are being delayed due to our runners cache being down at GitLab.com,
        we are investigating the root cause'''
      runbook: troubleshooting/runners_cache_is_down.md
      title: Runners cache nginx service on {{ $labels.fqdn }} has been down for more
        than 5 minutes.
  - alert: RunnersCacheServerHasTooManyConnections
    expr: node_netstat_Tcp_CurrEstab{fqdn=~"runners-cache-.*.gitlab.com"} > 500
    for: 20m
    labels:
      pager: ci-cd
      severity: critical
    annotations:
      description: 'This impacts CI execution builds, consider tweeting: !tweet ''CI
        jobs are being delayed due to issues with Shared Runners cache server. We
        are restarting it to restore the service.''. Hosts impacted - {{ $labels.instance
        }}'
      runbook: troubleshooting/ci_too_many_connections_on_runners_cache_server.md
      title: Number of established connections for {{ $labels.instance }} is too high
  - alert: TooManyUsedFDs
    expr: process_open_fds{job=~"(omnibus-runners|private-runners|shared-runners|shared-runners-(gitlab-org|high-cpu))"}
      / process_max_fds{job=~"(omnibus-runners|private-runners|shared-runners|shared-runners-(gitlab-org|high-cpu))"}
      > 0.8
    for: 10m
    labels:
      channel: ci-cd
      severity: warn
    annotations:
      description: '{{ $labels.instance }} is using more than 80% of available FDs
        since 10 minutes. This may affect Runner''s stability. Please look at https://performance.gitlab.net/dashboard/db/ci
        for more data.'
      title: Number of used file descriptors on {{ $labels.instance }} is too high
  - alert: DegradatedCIConsulPrometheusCluster
    expr: up{fqdn=~"(prometheus|consul)-.*(nyc1|us-east1-(c|d)).*"} == 0
    for: 5m
    labels:
      channel: ci-cd
      severity: warn
    annotations:
      description: 'One or more of hosts from CI Consul+Prometheus cluster is down:
        {{ $labels.instance }}.'
      title: CI Consul+Prometheus cluster is degradated, {{ $labels.instance }} is
        down
