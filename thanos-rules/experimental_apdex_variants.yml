groups:
- name: Experimental logically equivalent variants for calculating apdex ratios
  interval: 1m
  partial_response_strategy: warn
  rules:
  - record: test_apdex_calculation_variant
    # Variant A: This is the original (current) apdex calculation.
    # It was copied from "gitlab_component_apdex:ratio_1h" in thanos-rules/autogenerated-aggregated-component-metrics-gprd.yml.
    # Additional label filters were added to limit the experiment's scope and overhead:
    #   component="rails_redis_client", stage="main", tier="db", type="redis-cluster-ratelimiting"
    labels:
      apdex_variant: inputs_from_prometheus_rules_for_numerator_and_denominator
    expr: |
      sum by (env,environment,tier,type,stage,component) (
        (gitlab_component_apdex:success:rate_1h{env="gprd",monitor!="global",component="rails_redis_client",stage="main",tier="db",type="redis-cluster-ratelimiting"} >= 0)
      )
      /
      sum by (env,environment,tier,type,stage,component) (
        (gitlab_component_apdex:weight:score_1h{env="gprd",monitor!="global",component="rails_redis_client",stage="main",tier="db",type="redis-cluster-ratelimiting"} >= 0)
      )
  - record: test_apdex_calculation_variant
    # Variant B: This variant takes its input from thanos recording rules instead of prometheus recording rules.  Those inputs are defined below.
    # Because its inputs come from thanos recording rules, their "monitor" label is always "global", so in this recording rule we do not filter on "monitor".
    labels:
      apdex_variant: inputs_from_thanos_rules_for_numerator_and_denominator
    expr: |
      sum by (env,environment,tier,type,stage,component) (
        (test_apdex_calculation_variant_input:numerator:rate_1h{env="gprd",component="rails_redis_client",stage="main",tier="db",type="redis-cluster-ratelimiting"} >= 0)
      )
      /
      sum by (env,environment,tier,type,stage,component) (
        (test_apdex_calculation_variant_input:denominator:rate_1h{env="gprd",component="rails_redis_client",stage="main",tier="db",type="redis-cluster-ratelimiting"} >= 0)
      )
  - record: test_apdex_calculation_variant_input:numerator:rate_1h
    # Copied from the prometheus recording rule "gitlab_component_apdex:success:rate_1h" defined in rules/autogenerated-key-metrics-redis-cluster-ratelimiting.yml.
    # Additional label filters were added to limit the experiment's scope and overhead:
    #   env="gprd"
    labels:
      component: rails_redis_client
      stage: main
      tier: db
      type: redis-cluster-ratelimiting
      env: gprd
    expr: |
      (
        sum by (environment) (
          rate(gitlab_redis_client_requests_duration_seconds_bucket{le="0.5",storage="rate_limiting",env="gprd"}[1h])
        )
        +
        sum by (environment) (
          rate(gitlab_redis_client_requests_duration_seconds_bucket{le="0.75",storage="rate_limiting",env="gprd"}[1h])
        )
      )
      /
      2
  - record: test_apdex_calculation_variant_input:denominator:rate_1h
    # Copied from the prometheus recording rule "gitlab_component_apdex:weight:score_1h" defined in rules/autogenerated-key-metrics-redis-cluster-ratelimiting.yml.
    # Additional label filters were added to limit the experiment's scope and overhead:
    #   env="gprd"
    labels:
      component: rails_redis_client
      stage: main
      tier: db
      type: redis-cluster-ratelimiting
      env: gprd
    expr: |
      sum by (environment) (
        rate(gitlab_redis_client_requests_duration_seconds_bucket{le="+Inf",storage="rate_limiting",env="gprd"}[1h])
      )
  - record: test_apdex_calculation_variant
    # Variant C: This variant takes its input from the raw unaggregated metrics.  Its numerator and denominator are copied from the "test_apdex_calculation_variant_input" metrics defined above.
    # Additional label filters were added to limit the experiment's scope and overhead:
    #   env="gprd",monitor!="global",stage="main"
    labels:
      apdex_variant: inputs_from_raw_duration_histogram_metric
    expr: |
      sum by (env,environment,tier,type,stage) (
        (
          (
            sum by (environment) (
              rate(gitlab_redis_client_requests_duration_seconds_bucket{le="0.5",storage="rate_limiting",env="gprd",monitor!="global",stage="main"}[1h])
            )
            +
            sum by (environment) (
              rate(gitlab_redis_client_requests_duration_seconds_bucket{le="0.75",storage="rate_limiting",env="gprd",monitor!="global",stage="main"}[1h])
            )
          )
          /
          2
        ) >= 0
      )
      /
      sum by (env,environment,tier,type,stage) (
        (
          sum by (environment) (
            rate(gitlab_redis_client_requests_duration_seconds_bucket{le="+Inf",storage="rate_limiting",env="gprd",monitor!="global",stage="main"}[1h])
          )
          >= 0
        )
      )
