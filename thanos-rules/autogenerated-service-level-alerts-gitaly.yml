# WARNING. DO NOT EDIT THIS FILE BY HAND. USE ./thanos-rules-jsonnet/service-component-alerts.jsonnet TO GENERATE IT
# YOUR CHANGES WILL BE OVERRIDDEN
groups:
- name: 'Service Component Alerts: gitaly'
  interval: 1m
  partial_response_strategy: warn
  rules:
  - alert: GitalyServiceGitalyrubyApdexSLOViolation
    for: 2m
    annotations:
      title: The gitalyruby SLI of the gitaly service (`{{ $labels.stage }}` stage)
        has an apdex violating SLO
      description: |
        This SLI monitors requests to Gitaly's Ruby sidecar, known as Gitaly-Ruby. All requests made to Gitaly-Ruby are monitored in aggregate, via its GRPC interface.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: gitaly-main/gitaly-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/gitaly-main/gitaly-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "4223379407"
      grafana_variables: environment,stage
      promql_template_1: |
        histogram_quantile(
          0.950000,
          sum by (env,environment,tier,stage,le) (
            rate(grpc_server_handling_seconds_bucket{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}"}[5m]) and on(grpc_service,grpc_method) grpc_client_handled_total{job="gitaly"}
          )
        )
      runbook: docs/gitaly/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: gitaly
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_apdex:ratio_1h{component="gitalyruby",monitor="global",type="gitaly"}
          < (1 - 14.4 * 0.001000)
        )
        and
        (
          gitlab_component_apdex:ratio_5m{component="gitalyruby",monitor="global",type="gitaly"}
          < (1 - 14.4 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="gitalyruby",monitor="global",type="gitaly"}) >= 1
      )
  - alert: GitalyServiceGitalyrubyApdexSLOViolation
    for: 2m
    annotations:
      title: The gitalyruby SLI of the gitaly service (`{{ $labels.stage }}` stage)
        has an apdex violating SLO
      description: |
        This SLI monitors requests to Gitaly's Ruby sidecar, known as Gitaly-Ruby. All requests made to Gitaly-Ruby are monitored in aggregate, via its GRPC interface.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: gitaly-main/gitaly-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/gitaly-main/gitaly-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "4223379407"
      grafana_variables: environment,stage
      promql_template_1: |
        histogram_quantile(
          0.950000,
          sum by (env,environment,tier,stage,le) (
            rate(grpc_server_handling_seconds_bucket{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}"}[5m]) and on(grpc_service,grpc_method) grpc_client_handled_total{job="gitaly"}
          )
        )
      runbook: docs/gitaly/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: gitaly
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_apdex:ratio_6h{component="gitalyruby",monitor="global",type="gitaly"}
          < (1 - 6 * 0.001000)
        )
        and
        (
          gitlab_component_apdex:ratio_30m{component="gitalyruby",monitor="global",type="gitaly"}
          < (1 - 6 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="gitalyruby",monitor="global",type="gitaly"}) >= 0.16667
      )
  - alert: GitalyServiceGitalyrubyApdexSLOViolationSingleNode
    for: 10m
    annotations:
      title: The gitalyruby SLI of the gitaly service on node `{{ $labels.fqdn }}`
        has an apdex violating SLO
      description: |
        This SLI monitors requests to Gitaly's Ruby sidecar, known as Gitaly-Ruby. All requests made to Gitaly-Ruby are monitored in aggregate, via its GRPC interface.

        Since the `{{ $labels.type }}` service is not fully redundant, SLI violations on a single node may represent a user-impacting service degradation.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: gitaly-main/gitaly-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/gitaly-main/gitaly-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "4223379407"
      grafana_variables: environment,stage
      promql_template_1: |
        histogram_quantile(
          0.950000,
          sum by (env,environment,tier,stage,shard,fqdn,le) (
            rate(grpc_server_handling_seconds_bucket{environment="{{ $labels.environment }}",fqdn="{{ $labels.fqdn }}",shard="{{ $labels.shard }}",stage="{{ $labels.stage }}"}[5m]) and on(grpc_service,grpc_method) grpc_client_handled_total{job="gitaly"}
          )
        )
      runbook: docs/gitaly/README.md
    labels:
      aggregation: component_node
      alert_class: slo_violation
      alert_type: symptom
      feature_category: gitaly
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_node_apdex:ratio_1h{component="gitalyruby",monitor="global",type="gitaly"}
          < (1 - 14.4 * 0.001000)
        )
        and
        (
          gitlab_component_node_apdex:ratio_5m{component="gitalyruby",monitor="global",type="gitaly"}
          < (1 - 14.4 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,shard,fqdn,component)
      (
        sum by(env,environment,tier,type,stage,shard,fqdn,component) (gitlab_component_node_ops:rate_1h{component="gitalyruby",monitor="global",type="gitaly"}) >= 0.33333
      )
  - alert: GitalyServiceGitalyrubyApdexSLOViolationSingleNode
    for: 10m
    annotations:
      title: The gitalyruby SLI of the gitaly service on node `{{ $labels.fqdn }}`
        has an apdex violating SLO
      description: |
        This SLI monitors requests to Gitaly's Ruby sidecar, known as Gitaly-Ruby. All requests made to Gitaly-Ruby are monitored in aggregate, via its GRPC interface.

        Since the `{{ $labels.type }}` service is not fully redundant, SLI violations on a single node may represent a user-impacting service degradation.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: gitaly-main/gitaly-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/gitaly-main/gitaly-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "4223379407"
      grafana_variables: environment,stage
      promql_template_1: |
        histogram_quantile(
          0.950000,
          sum by (env,environment,tier,stage,shard,fqdn,le) (
            rate(grpc_server_handling_seconds_bucket{environment="{{ $labels.environment }}",fqdn="{{ $labels.fqdn }}",shard="{{ $labels.shard }}",stage="{{ $labels.stage }}"}[5m]) and on(grpc_service,grpc_method) grpc_client_handled_total{job="gitaly"}
          )
        )
      runbook: docs/gitaly/README.md
    labels:
      aggregation: component_node
      alert_class: slo_violation
      alert_type: symptom
      feature_category: gitaly
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_node_apdex:ratio_6h{component="gitalyruby",monitor="global",type="gitaly"}
          < (1 - 6 * 0.001000)
        )
        and
        (
          gitlab_component_node_apdex:ratio_30m{component="gitalyruby",monitor="global",type="gitaly"}
          < (1 - 6 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,shard,fqdn,component)
      (
        sum by(env,environment,tier,type,stage,shard,fqdn,component) (gitlab_component_node_ops:rate_6h{component="gitalyruby",monitor="global",type="gitaly"}) >= 0.05556
      )
  - alert: GitalyServiceGitalyrubyErrorSLOViolation
    for: 2m
    annotations:
      title: The gitalyruby SLI of the gitaly service (`{{ $labels.stage }}` stage)
        has an error rate violating SLO
      description: |
        This SLI monitors requests to Gitaly's Ruby sidecar, known as Gitaly-Ruby. All requests made to Gitaly-Ruby are monitored in aggregate, via its GRPC interface.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: gitaly-main/gitaly-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/gitaly-main/gitaly-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "29379121"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(grpc_client_handled_total{environment="{{ $labels.environment }}",grpc_code!~"AlreadyExists|DeadlineExceeded|FailedPrecondition|NotFound|OK|Unauthenticated",grpc_method!~"AddRemote|UpdateRemoteMirror",job="gitaly",stage="{{ $labels.stage }}"}[5m])
        )
      runbook: docs/gitaly/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: gitaly
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_errors:ratio_1h{component="gitalyruby",monitor="global",type="gitaly"}
          > (14.4 * 0.000500)
        )
        and
        (
          gitlab_component_errors:ratio_5m{component="gitalyruby",monitor="global",type="gitaly"}
          > (14.4 * 0.000500)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="gitalyruby",monitor="global",type="gitaly"}) >= 1
      )
  - alert: GitalyServiceGitalyrubyErrorSLOViolation
    for: 2m
    annotations:
      title: The gitalyruby SLI of the gitaly service (`{{ $labels.stage }}` stage)
        has an error rate violating SLO
      description: |
        This SLI monitors requests to Gitaly's Ruby sidecar, known as Gitaly-Ruby. All requests made to Gitaly-Ruby are monitored in aggregate, via its GRPC interface.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: gitaly-main/gitaly-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/gitaly-main/gitaly-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "29379121"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(grpc_client_handled_total{environment="{{ $labels.environment }}",grpc_code!~"AlreadyExists|DeadlineExceeded|FailedPrecondition|NotFound|OK|Unauthenticated",grpc_method!~"AddRemote|UpdateRemoteMirror",job="gitaly",stage="{{ $labels.stage }}"}[5m])
        )
      runbook: docs/gitaly/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: gitaly
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_errors:ratio_6h{component="gitalyruby",monitor="global",type="gitaly"}
          > (6 * 0.000500)
        )
        and
        (
          gitlab_component_errors:ratio_30m{component="gitalyruby",monitor="global",type="gitaly"}
          > (6 * 0.000500)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="gitalyruby",monitor="global",type="gitaly"}) >= 0.16667
      )
  - alert: GitalyServiceGitalyrubyErrorSLOViolationSingleNode
    for: 10m
    annotations:
      title: The gitalyruby SLI of the gitaly service on node `{{ $labels.fqdn }}`
        has an error rate violating SLO
      description: |
        This SLI monitors requests to Gitaly's Ruby sidecar, known as Gitaly-Ruby. All requests made to Gitaly-Ruby are monitored in aggregate, via its GRPC interface.

        Since the `{{ $labels.type }}` service is not fully redundant, SLI violations on a single node may represent a user-impacting service degradation.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: gitaly-main/gitaly-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/gitaly-main/gitaly-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "29379121"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage,shard,fqdn) (
          rate(grpc_client_handled_total{environment="{{ $labels.environment }}",fqdn="{{ $labels.fqdn }}",grpc_code!~"AlreadyExists|DeadlineExceeded|FailedPrecondition|NotFound|OK|Unauthenticated",grpc_method!~"AddRemote|UpdateRemoteMirror",job="gitaly",shard="{{ $labels.shard }}",stage="{{ $labels.stage }}"}[5m])
        )
      runbook: docs/gitaly/README.md
    labels:
      aggregation: component_node
      alert_class: slo_violation
      alert_type: symptom
      feature_category: gitaly
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_node_errors:ratio_1h{component="gitalyruby",monitor="global",type="gitaly"}
          > (14.4 * 0.000500)
        )
        and
        (
          gitlab_component_node_errors:ratio_5m{component="gitalyruby",monitor="global",type="gitaly"}
          > (14.4 * 0.000500)
        )
      )
      and on(env,environment,tier,type,stage,shard,fqdn,component)
      (
        sum by(env,environment,tier,type,stage,shard,fqdn,component) (gitlab_component_node_ops:rate_1h{component="gitalyruby",monitor="global",type="gitaly"}) >= 0.33333
      )
  - alert: GitalyServiceGitalyrubyErrorSLOViolationSingleNode
    for: 10m
    annotations:
      title: The gitalyruby SLI of the gitaly service on node `{{ $labels.fqdn }}`
        has an error rate violating SLO
      description: |
        This SLI monitors requests to Gitaly's Ruby sidecar, known as Gitaly-Ruby. All requests made to Gitaly-Ruby are monitored in aggregate, via its GRPC interface.

        Since the `{{ $labels.type }}` service is not fully redundant, SLI violations on a single node may represent a user-impacting service degradation.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: gitaly-main/gitaly-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/gitaly-main/gitaly-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "29379121"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage,shard,fqdn) (
          rate(grpc_client_handled_total{environment="{{ $labels.environment }}",fqdn="{{ $labels.fqdn }}",grpc_code!~"AlreadyExists|DeadlineExceeded|FailedPrecondition|NotFound|OK|Unauthenticated",grpc_method!~"AddRemote|UpdateRemoteMirror",job="gitaly",shard="{{ $labels.shard }}",stage="{{ $labels.stage }}"}[5m])
        )
      runbook: docs/gitaly/README.md
    labels:
      aggregation: component_node
      alert_class: slo_violation
      alert_type: symptom
      feature_category: gitaly
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_node_errors:ratio_6h{component="gitalyruby",monitor="global",type="gitaly"}
          > (6 * 0.000500)
        )
        and
        (
          gitlab_component_node_errors:ratio_30m{component="gitalyruby",monitor="global",type="gitaly"}
          > (6 * 0.000500)
        )
      )
      and on(env,environment,tier,type,stage,shard,fqdn,component)
      (
        sum by(env,environment,tier,type,stage,shard,fqdn,component) (gitlab_component_node_ops:rate_6h{component="gitalyruby",monitor="global",type="gitaly"}) >= 0.05556
      )
  - alert: GitalyServiceGitalyrubyTrafficCessation
    for: 5m
    annotations:
      title: The gitalyruby SLI of the gitaly service (`{{ $labels.stage }}` stage)
        has not received any traffic in the past 30 minutes
      description: |
        This SLI monitors requests to Gitaly's Ruby sidecar, known as Gitaly-Ruby. All requests made to Gitaly-Ruby are monitored in aggregate, via its GRPC interface.

        This alert signifies that the SLI is reporting a cessation of traffic, but the signal is not absent.
      grafana_dashboard_id: gitaly-main/gitaly-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/gitaly-main/gitaly-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2219036706"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(grpc_client_handled_total{environment="{{ $labels.environment }}",job="gitaly",stage="{{ $labels.stage }}"}[5m])
        )
      runbook: docs/gitaly/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: gitaly
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_30m{component="gitalyruby",monitor="global",stage="main",type="gitaly"} == 0
  - alert: GitalyServiceGitalyrubyTrafficAbsent
    for: 30m
    annotations:
      title: The gitalyruby SLI of the gitaly service (`{{ $labels.stage }}` stage)
        has not reported any traffic in the past 30 minutes
      description: |
        This SLI monitors requests to Gitaly's Ruby sidecar, known as Gitaly-Ruby. All requests made to Gitaly-Ruby are monitored in aggregate, via its GRPC interface.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: gitaly-main/gitaly-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/gitaly-main/gitaly-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2219036706"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(grpc_client_handled_total{environment="{{ $labels.environment }}",job="gitaly",stage="{{ $labels.stage }}"}[5m])
        )
      runbook: docs/gitaly/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: gitaly
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_5m{component="gitalyruby",monitor="global",stage="main",type="gitaly"} offset 1h
      unless
      gitlab_component_ops:rate_5m{component="gitalyruby",monitor="global",stage="main",type="gitaly"}
  - alert: GitalyServiceGitalyrubyTrafficCessationSingleNode
    for: 5m
    annotations:
      title: The gitalyruby SLI of the gitaly service on node `{{ $labels.fqdn }}`
        has not received any traffic in the past 30 minutes
      description: |
        This SLI monitors requests to Gitaly's Ruby sidecar, known as Gitaly-Ruby. All requests made to Gitaly-Ruby are monitored in aggregate, via its GRPC interface.

        This alert signifies that the SLI is reporting a cessation of traffic, but the signal is not absent.

        Since the `{{ $labels.type }}` service is not fully redundant, SLI violations on a single node may represent a user-impacting service degradation.
      grafana_dashboard_id: gitaly-main/gitaly-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/gitaly-main/gitaly-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2219036706"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(grpc_client_handled_total{environment="{{ $labels.environment }}",job="gitaly",stage="{{ $labels.stage }}"}[5m])
        )
      runbook: docs/gitaly/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: gitaly
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_node_ops:rate_30m{component="gitalyruby",monitor="global",type="gitaly"} == 0
  - alert: GitalyServiceGitalyrubyTrafficAbsentSingleNode
    for: 30m
    annotations:
      title: The gitalyruby SLI of the gitaly service on node `{{ $labels.fqdn }}`
        has not reported any traffic in the past 30 minutes
      description: |
        This SLI monitors requests to Gitaly's Ruby sidecar, known as Gitaly-Ruby. All requests made to Gitaly-Ruby are monitored in aggregate, via its GRPC interface.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.

        Since the `{{ $labels.type }}` service is not fully redundant, SLI violations on a single node may represent a user-impacting service degradation.
      grafana_dashboard_id: gitaly-main/gitaly-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/gitaly-main/gitaly-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "2219036706"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(grpc_client_handled_total{environment="{{ $labels.environment }}",job="gitaly",stage="{{ $labels.stage }}"}[5m])
        )
      runbook: docs/gitaly/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: gitaly
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_node_ops:rate_5m{component="gitalyruby",monitor="global",type="gitaly"} offset 1h
      unless
      gitlab_component_node_ops:rate_5m{component="gitalyruby",monitor="global",type="gitaly"}
  - alert: GitalyServiceGoserverApdexSLOViolation
    for: 2m
    annotations:
      title: The goserver SLI of the gitaly service (`{{ $labels.stage }}` stage)
        has an apdex violating SLO
      description: |
        This SLI monitors all Gitaly GRPC requests in aggregate, excluding the OperationService. GRPC failures which are considered to be the "server's fault" are counted as errors. The apdex score is based on a subset of GRPC methods which are expected to be fast.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: gitaly-main/gitaly-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/gitaly-main/gitaly-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "877804374"
      grafana_variables: environment,stage
      promql_template_1: |
        histogram_quantile(
          0.950000,
          sum by (env,environment,tier,stage,le) (
            rate(grpc_server_handling_seconds_bucket{environment="{{ $labels.environment }}",grpc_method!~"CalculateChecksum|CommitLanguages|CommitStats|CreateFork|CreateRepositoryFromURL|FetchInternalRemote|FetchIntoObjectPool|FetchRemote|FetchSourceBranch|FindRemoteRepository|FindRemoteRootRef|Fsck|GarbageCollect|OptimizeRepository|PackObjectsHookWithSidechannel|PostReceiveHook|PostUploadPackWithSidechannel|PreReceiveHook|RepackFull|RepackIncremental|ReplicateRepository|SSHUploadPackWithSidechannel|UpdateHook",grpc_service!="gitaly.OperationService",grpc_type="unary",job="gitaly",stage="{{ $labels.stage }}"}[5m])
          )
        )
      runbook: docs/gitaly/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: gitaly
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_apdex:ratio_1h{component="goserver",monitor="global",type="gitaly"}
          < (1 - 14.4 * 0.001000)
        )
        and
        (
          gitlab_component_apdex:ratio_5m{component="goserver",monitor="global",type="gitaly"}
          < (1 - 14.4 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="goserver",monitor="global",type="gitaly"}) >= 1
      )
  - alert: GitalyServiceGoserverApdexSLOViolation
    for: 2m
    annotations:
      title: The goserver SLI of the gitaly service (`{{ $labels.stage }}` stage)
        has an apdex violating SLO
      description: |
        This SLI monitors all Gitaly GRPC requests in aggregate, excluding the OperationService. GRPC failures which are considered to be the "server's fault" are counted as errors. The apdex score is based on a subset of GRPC methods which are expected to be fast.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: gitaly-main/gitaly-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/gitaly-main/gitaly-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "877804374"
      grafana_variables: environment,stage
      promql_template_1: |
        histogram_quantile(
          0.950000,
          sum by (env,environment,tier,stage,le) (
            rate(grpc_server_handling_seconds_bucket{environment="{{ $labels.environment }}",grpc_method!~"CalculateChecksum|CommitLanguages|CommitStats|CreateFork|CreateRepositoryFromURL|FetchInternalRemote|FetchIntoObjectPool|FetchRemote|FetchSourceBranch|FindRemoteRepository|FindRemoteRootRef|Fsck|GarbageCollect|OptimizeRepository|PackObjectsHookWithSidechannel|PostReceiveHook|PostUploadPackWithSidechannel|PreReceiveHook|RepackFull|RepackIncremental|ReplicateRepository|SSHUploadPackWithSidechannel|UpdateHook",grpc_service!="gitaly.OperationService",grpc_type="unary",job="gitaly",stage="{{ $labels.stage }}"}[5m])
          )
        )
      runbook: docs/gitaly/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: gitaly
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_apdex:ratio_6h{component="goserver",monitor="global",type="gitaly"}
          < (1 - 6 * 0.001000)
        )
        and
        (
          gitlab_component_apdex:ratio_30m{component="goserver",monitor="global",type="gitaly"}
          < (1 - 6 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="goserver",monitor="global",type="gitaly"}) >= 0.16667
      )
  - alert: GitalyServiceGoserverApdexSLOViolationSingleNode
    for: 10m
    annotations:
      title: The goserver SLI of the gitaly service on node `{{ $labels.fqdn }}` has
        an apdex violating SLO
      description: |
        This SLI monitors all Gitaly GRPC requests in aggregate, excluding the OperationService. GRPC failures which are considered to be the "server's fault" are counted as errors. The apdex score is based on a subset of GRPC methods which are expected to be fast.

        Since the `{{ $labels.type }}` service is not fully redundant, SLI violations on a single node may represent a user-impacting service degradation.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: gitaly-main/gitaly-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/gitaly-main/gitaly-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "877804374"
      grafana_variables: environment,stage
      promql_template_1: |
        histogram_quantile(
          0.950000,
          sum by (env,environment,tier,stage,shard,fqdn,le) (
            rate(grpc_server_handling_seconds_bucket{environment="{{ $labels.environment }}",fqdn="{{ $labels.fqdn }}",grpc_method!~"CalculateChecksum|CommitLanguages|CommitStats|CreateFork|CreateRepositoryFromURL|FetchInternalRemote|FetchIntoObjectPool|FetchRemote|FetchSourceBranch|FindRemoteRepository|FindRemoteRootRef|Fsck|GarbageCollect|OptimizeRepository|PackObjectsHookWithSidechannel|PostReceiveHook|PostUploadPackWithSidechannel|PreReceiveHook|RepackFull|RepackIncremental|ReplicateRepository|SSHUploadPackWithSidechannel|UpdateHook",grpc_service!="gitaly.OperationService",grpc_type="unary",job="gitaly",shard="{{ $labels.shard }}",stage="{{ $labels.stage }}"}[5m])
          )
        )
      runbook: docs/gitaly/README.md
    labels:
      aggregation: component_node
      alert_class: slo_violation
      alert_type: symptom
      feature_category: gitaly
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_node_apdex:ratio_1h{component="goserver",monitor="global",type="gitaly"}
          < (1 - 14.4 * 0.001000)
        )
        and
        (
          gitlab_component_node_apdex:ratio_5m{component="goserver",monitor="global",type="gitaly"}
          < (1 - 14.4 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,shard,fqdn,component)
      (
        sum by(env,environment,tier,type,stage,shard,fqdn,component) (gitlab_component_node_ops:rate_1h{component="goserver",monitor="global",type="gitaly"}) >= 0.33333
      )
  - alert: GitalyServiceGoserverApdexSLOViolationSingleNode
    for: 10m
    annotations:
      title: The goserver SLI of the gitaly service on node `{{ $labels.fqdn }}` has
        an apdex violating SLO
      description: |
        This SLI monitors all Gitaly GRPC requests in aggregate, excluding the OperationService. GRPC failures which are considered to be the "server's fault" are counted as errors. The apdex score is based on a subset of GRPC methods which are expected to be fast.

        Since the `{{ $labels.type }}` service is not fully redundant, SLI violations on a single node may represent a user-impacting service degradation.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: gitaly-main/gitaly-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/gitaly-main/gitaly-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "877804374"
      grafana_variables: environment,stage
      promql_template_1: |
        histogram_quantile(
          0.950000,
          sum by (env,environment,tier,stage,shard,fqdn,le) (
            rate(grpc_server_handling_seconds_bucket{environment="{{ $labels.environment }}",fqdn="{{ $labels.fqdn }}",grpc_method!~"CalculateChecksum|CommitLanguages|CommitStats|CreateFork|CreateRepositoryFromURL|FetchInternalRemote|FetchIntoObjectPool|FetchRemote|FetchSourceBranch|FindRemoteRepository|FindRemoteRootRef|Fsck|GarbageCollect|OptimizeRepository|PackObjectsHookWithSidechannel|PostReceiveHook|PostUploadPackWithSidechannel|PreReceiveHook|RepackFull|RepackIncremental|ReplicateRepository|SSHUploadPackWithSidechannel|UpdateHook",grpc_service!="gitaly.OperationService",grpc_type="unary",job="gitaly",shard="{{ $labels.shard }}",stage="{{ $labels.stage }}"}[5m])
          )
        )
      runbook: docs/gitaly/README.md
    labels:
      aggregation: component_node
      alert_class: slo_violation
      alert_type: symptom
      feature_category: gitaly
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: apdex
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_node_apdex:ratio_6h{component="goserver",monitor="global",type="gitaly"}
          < (1 - 6 * 0.001000)
        )
        and
        (
          gitlab_component_node_apdex:ratio_30m{component="goserver",monitor="global",type="gitaly"}
          < (1 - 6 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,shard,fqdn,component)
      (
        sum by(env,environment,tier,type,stage,shard,fqdn,component) (gitlab_component_node_ops:rate_6h{component="goserver",monitor="global",type="gitaly"}) >= 0.05556
      )
  - alert: GitalyServiceGoserverErrorSLOViolation
    for: 2m
    annotations:
      title: The goserver SLI of the gitaly service (`{{ $labels.stage }}` stage)
        has an error rate violating SLO
      description: |
        This SLI monitors all Gitaly GRPC requests in aggregate, excluding the OperationService. GRPC failures which are considered to be the "server's fault" are counted as errors. The apdex score is based on a subset of GRPC methods which are expected to be fast.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: gitaly-main/gitaly-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/gitaly-main/gitaly-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "594670537"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          label_replace(rate(gitaly_service_client_requests_total{environment="{{ $labels.environment }}",grpc_code!~"AlreadyExists|Canceled|DeadlineExceeded|FailedPrecondition|InvalidArgument|NotFound|OK|PermissionDenied|Unauthenticated",grpc_service!="gitaly.OperationService",job="gitaly",stage="{{ $labels.stage }}"}[5m]), "_c", "0", "", "")
          or
          label_replace(rate(gitaly_service_client_requests_total{deadline_type!="limited",environment="{{ $labels.environment }}",grpc_code="DeadlineExceeded",grpc_service!="gitaly.OperationService",job="gitaly",stage="{{ $labels.stage }}"}[5m]), "_c", "1", "", "")
        )
      runbook: docs/gitaly/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: gitaly
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_errors:ratio_1h{component="goserver",monitor="global",type="gitaly"}
          > (14.4 * 0.000500)
        )
        and
        (
          gitlab_component_errors:ratio_5m{component="goserver",monitor="global",type="gitaly"}
          > (14.4 * 0.000500)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="goserver",monitor="global",type="gitaly"}) >= 1
      )
  - alert: GitalyServiceGoserverErrorSLOViolation
    for: 2m
    annotations:
      title: The goserver SLI of the gitaly service (`{{ $labels.stage }}` stage)
        has an error rate violating SLO
      description: |
        This SLI monitors all Gitaly GRPC requests in aggregate, excluding the OperationService. GRPC failures which are considered to be the "server's fault" are counted as errors. The apdex score is based on a subset of GRPC methods which are expected to be fast.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: gitaly-main/gitaly-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/gitaly-main/gitaly-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "594670537"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          label_replace(rate(gitaly_service_client_requests_total{environment="{{ $labels.environment }}",grpc_code!~"AlreadyExists|Canceled|DeadlineExceeded|FailedPrecondition|InvalidArgument|NotFound|OK|PermissionDenied|Unauthenticated",grpc_service!="gitaly.OperationService",job="gitaly",stage="{{ $labels.stage }}"}[5m]), "_c", "0", "", "")
          or
          label_replace(rate(gitaly_service_client_requests_total{deadline_type!="limited",environment="{{ $labels.environment }}",grpc_code="DeadlineExceeded",grpc_service!="gitaly.OperationService",job="gitaly",stage="{{ $labels.stage }}"}[5m]), "_c", "1", "", "")
        )
      runbook: docs/gitaly/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: gitaly
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_errors:ratio_6h{component="goserver",monitor="global",type="gitaly"}
          > (6 * 0.000500)
        )
        and
        (
          gitlab_component_errors:ratio_30m{component="goserver",monitor="global",type="gitaly"}
          > (6 * 0.000500)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="goserver",monitor="global",type="gitaly"}) >= 0.16667
      )
  - alert: GitalyServiceGoserverErrorSLOViolationSingleNode
    for: 10m
    annotations:
      title: The goserver SLI of the gitaly service on node `{{ $labels.fqdn }}` has
        an error rate violating SLO
      description: |
        This SLI monitors all Gitaly GRPC requests in aggregate, excluding the OperationService. GRPC failures which are considered to be the "server's fault" are counted as errors. The apdex score is based on a subset of GRPC methods which are expected to be fast.

        Since the `{{ $labels.type }}` service is not fully redundant, SLI violations on a single node may represent a user-impacting service degradation.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: gitaly-main/gitaly-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/gitaly-main/gitaly-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "594670537"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage,shard,fqdn) (
          label_replace(rate(gitaly_service_client_requests_total{environment="{{ $labels.environment }}",fqdn="{{ $labels.fqdn }}",grpc_code!~"AlreadyExists|Canceled|DeadlineExceeded|FailedPrecondition|InvalidArgument|NotFound|OK|PermissionDenied|Unauthenticated",grpc_service!="gitaly.OperationService",job="gitaly",shard="{{ $labels.shard }}",stage="{{ $labels.stage }}"}[5m]), "_c", "0", "", "")
          or
          label_replace(rate(gitaly_service_client_requests_total{deadline_type!="limited",environment="{{ $labels.environment }}",fqdn="{{ $labels.fqdn }}",grpc_code="DeadlineExceeded",grpc_service!="gitaly.OperationService",job="gitaly",shard="{{ $labels.shard }}",stage="{{ $labels.stage }}"}[5m]), "_c", "1", "", "")
        )
      runbook: docs/gitaly/README.md
    labels:
      aggregation: component_node
      alert_class: slo_violation
      alert_type: symptom
      feature_category: gitaly
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_node_errors:ratio_1h{component="goserver",monitor="global",type="gitaly"}
          > (14.4 * 0.000500)
        )
        and
        (
          gitlab_component_node_errors:ratio_5m{component="goserver",monitor="global",type="gitaly"}
          > (14.4 * 0.000500)
        )
      )
      and on(env,environment,tier,type,stage,shard,fqdn,component)
      (
        sum by(env,environment,tier,type,stage,shard,fqdn,component) (gitlab_component_node_ops:rate_1h{component="goserver",monitor="global",type="gitaly"}) >= 0.33333
      )
  - alert: GitalyServiceGoserverErrorSLOViolationSingleNode
    for: 10m
    annotations:
      title: The goserver SLI of the gitaly service on node `{{ $labels.fqdn }}` has
        an error rate violating SLO
      description: |
        This SLI monitors all Gitaly GRPC requests in aggregate, excluding the OperationService. GRPC failures which are considered to be the "server's fault" are counted as errors. The apdex score is based on a subset of GRPC methods which are expected to be fast.

        Since the `{{ $labels.type }}` service is not fully redundant, SLI violations on a single node may represent a user-impacting service degradation.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: gitaly-main/gitaly-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/gitaly-main/gitaly-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "594670537"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage,shard,fqdn) (
          label_replace(rate(gitaly_service_client_requests_total{environment="{{ $labels.environment }}",fqdn="{{ $labels.fqdn }}",grpc_code!~"AlreadyExists|Canceled|DeadlineExceeded|FailedPrecondition|InvalidArgument|NotFound|OK|PermissionDenied|Unauthenticated",grpc_service!="gitaly.OperationService",job="gitaly",shard="{{ $labels.shard }}",stage="{{ $labels.stage }}"}[5m]), "_c", "0", "", "")
          or
          label_replace(rate(gitaly_service_client_requests_total{deadline_type!="limited",environment="{{ $labels.environment }}",fqdn="{{ $labels.fqdn }}",grpc_code="DeadlineExceeded",grpc_service!="gitaly.OperationService",job="gitaly",shard="{{ $labels.shard }}",stage="{{ $labels.stage }}"}[5m]), "_c", "1", "", "")
        )
      runbook: docs/gitaly/README.md
    labels:
      aggregation: component_node
      alert_class: slo_violation
      alert_type: symptom
      feature_category: gitaly
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_node_errors:ratio_6h{component="goserver",monitor="global",type="gitaly"}
          > (6 * 0.000500)
        )
        and
        (
          gitlab_component_node_errors:ratio_30m{component="goserver",monitor="global",type="gitaly"}
          > (6 * 0.000500)
        )
      )
      and on(env,environment,tier,type,stage,shard,fqdn,component)
      (
        sum by(env,environment,tier,type,stage,shard,fqdn,component) (gitlab_component_node_ops:rate_6h{component="goserver",monitor="global",type="gitaly"}) >= 0.05556
      )
  - alert: GitalyServiceGoserverTrafficCessation
    for: 5m
    annotations:
      title: The goserver SLI of the gitaly service (`{{ $labels.stage }}` stage)
        has not received any traffic in the past 30 minutes
      description: |
        This SLI monitors all Gitaly GRPC requests in aggregate, excluding the OperationService. GRPC failures which are considered to be the "server's fault" are counted as errors. The apdex score is based on a subset of GRPC methods which are expected to be fast.

        This alert signifies that the SLI is reporting a cessation of traffic, but the signal is not absent.
      grafana_dashboard_id: gitaly-main/gitaly-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/gitaly-main/gitaly-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "1687078843"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitaly_service_client_requests_total{environment="{{ $labels.environment }}",grpc_service!="gitaly.OperationService",job="gitaly",stage="{{ $labels.stage }}"}[5m])
        )
      runbook: docs/gitaly/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: gitaly
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_30m{component="goserver",monitor="global",stage="main",type="gitaly"} == 0
  - alert: GitalyServiceGoserverTrafficAbsent
    for: 30m
    annotations:
      title: The goserver SLI of the gitaly service (`{{ $labels.stage }}` stage)
        has not reported any traffic in the past 30 minutes
      description: |
        This SLI monitors all Gitaly GRPC requests in aggregate, excluding the OperationService. GRPC failures which are considered to be the "server's fault" are counted as errors. The apdex score is based on a subset of GRPC methods which are expected to be fast.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: gitaly-main/gitaly-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/gitaly-main/gitaly-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "1687078843"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitaly_service_client_requests_total{environment="{{ $labels.environment }}",grpc_service!="gitaly.OperationService",job="gitaly",stage="{{ $labels.stage }}"}[5m])
        )
      runbook: docs/gitaly/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: gitaly
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_5m{component="goserver",monitor="global",stage="main",type="gitaly"} offset 1h
      unless
      gitlab_component_ops:rate_5m{component="goserver",monitor="global",stage="main",type="gitaly"}
  - alert: GitalyServiceGoserverTrafficCessationSingleNode
    for: 5m
    annotations:
      title: The goserver SLI of the gitaly service on node `{{ $labels.fqdn }}` has
        not received any traffic in the past 30 minutes
      description: |
        This SLI monitors all Gitaly GRPC requests in aggregate, excluding the OperationService. GRPC failures which are considered to be the "server's fault" are counted as errors. The apdex score is based on a subset of GRPC methods which are expected to be fast.

        This alert signifies that the SLI is reporting a cessation of traffic, but the signal is not absent.

        Since the `{{ $labels.type }}` service is not fully redundant, SLI violations on a single node may represent a user-impacting service degradation.
      grafana_dashboard_id: gitaly-main/gitaly-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/gitaly-main/gitaly-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "1687078843"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitaly_service_client_requests_total{environment="{{ $labels.environment }}",grpc_service!="gitaly.OperationService",job="gitaly",stage="{{ $labels.stage }}"}[5m])
        )
      runbook: docs/gitaly/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: gitaly
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_node_ops:rate_30m{component="goserver",monitor="global",type="gitaly"} == 0
  - alert: GitalyServiceGoserverTrafficAbsentSingleNode
    for: 30m
    annotations:
      title: The goserver SLI of the gitaly service on node `{{ $labels.fqdn }}` has
        not reported any traffic in the past 30 minutes
      description: |
        This SLI monitors all Gitaly GRPC requests in aggregate, excluding the OperationService. GRPC failures which are considered to be the "server's fault" are counted as errors. The apdex score is based on a subset of GRPC methods which are expected to be fast.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.

        Since the `{{ $labels.type }}` service is not fully redundant, SLI violations on a single node may represent a user-impacting service degradation.
      grafana_dashboard_id: gitaly-main/gitaly-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/gitaly-main/gitaly-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "1687078843"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitaly_service_client_requests_total{environment="{{ $labels.environment }}",grpc_service!="gitaly.OperationService",job="gitaly",stage="{{ $labels.stage }}"}[5m])
        )
      runbook: docs/gitaly/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: gitaly
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_node_ops:rate_5m{component="goserver",monitor="global",type="gitaly"} offset 1h
      unless
      gitlab_component_node_ops:rate_5m{component="goserver",monitor="global",type="gitaly"}
  - alert: GitalyServiceGoserverOpServiceErrorSLOViolation
    for: 2m
    annotations:
      title: The goserver_op_service SLI of the gitaly service (`{{ $labels.stage
        }}` stage) has an error rate violating SLO
      description: |
        This SLI monitors requests to Gitaly's OperationService, via its GRPC endpoint. OperationService methods are generally expected to be slower than other Gitaly endpoints and this is reflected in the SLI.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: gitaly-main/gitaly-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/gitaly-main/gitaly-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "1534403952"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          label_replace(rate(gitaly_service_client_requests_total{environment="{{ $labels.environment }}",grpc_code!~"AlreadyExists|Canceled|DeadlineExceeded|FailedPrecondition|InvalidArgument|NotFound|OK|PermissionDenied|Unauthenticated",grpc_service="gitaly.OperationService",job="gitaly",stage="{{ $labels.stage }}"}[5m]), "_c", "0", "", "")
          or
          label_replace(rate(gitaly_service_client_requests_total{deadline_type!="limited",environment="{{ $labels.environment }}",grpc_code="DeadlineExceeded",grpc_service="gitaly.OperationService",job="gitaly",stage="{{ $labels.stage }}"}[5m]), "_c", "1", "", "")
        )
      runbook: docs/gitaly/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: gitaly
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_errors:ratio_1h{component="goserver_op_service",monitor="global",type="gitaly"}
          > (14.4 * 0.000500)
        )
        and
        (
          gitlab_component_errors:ratio_5m{component="goserver_op_service",monitor="global",type="gitaly"}
          > (14.4 * 0.000500)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="goserver_op_service",monitor="global",type="gitaly"}) >= 1
      )
  - alert: GitalyServiceGoserverOpServiceErrorSLOViolation
    for: 2m
    annotations:
      title: The goserver_op_service SLI of the gitaly service (`{{ $labels.stage
        }}` stage) has an error rate violating SLO
      description: |
        This SLI monitors requests to Gitaly's OperationService, via its GRPC endpoint. OperationService methods are generally expected to be slower than other Gitaly endpoints and this is reflected in the SLI.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: gitaly-main/gitaly-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/gitaly-main/gitaly-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "1534403952"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          label_replace(rate(gitaly_service_client_requests_total{environment="{{ $labels.environment }}",grpc_code!~"AlreadyExists|Canceled|DeadlineExceeded|FailedPrecondition|InvalidArgument|NotFound|OK|PermissionDenied|Unauthenticated",grpc_service="gitaly.OperationService",job="gitaly",stage="{{ $labels.stage }}"}[5m]), "_c", "0", "", "")
          or
          label_replace(rate(gitaly_service_client_requests_total{deadline_type!="limited",environment="{{ $labels.environment }}",grpc_code="DeadlineExceeded",grpc_service="gitaly.OperationService",job="gitaly",stage="{{ $labels.stage }}"}[5m]), "_c", "1", "", "")
        )
      runbook: docs/gitaly/README.md
    labels:
      aggregation: component
      alert_class: slo_violation
      alert_type: symptom
      feature_category: gitaly
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_errors:ratio_6h{component="goserver_op_service",monitor="global",type="gitaly"}
          > (6 * 0.000500)
        )
        and
        (
          gitlab_component_errors:ratio_30m{component="goserver_op_service",monitor="global",type="gitaly"}
          > (6 * 0.000500)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_6h{component="goserver_op_service",monitor="global",type="gitaly"}) >= 0.16667
      )
  - alert: GitalyServiceGoserverOpServiceErrorSLOViolationSingleNode
    for: 10m
    annotations:
      title: The goserver_op_service SLI of the gitaly service on node `{{ $labels.fqdn
        }}` has an error rate violating SLO
      description: |
        This SLI monitors requests to Gitaly's OperationService, via its GRPC endpoint. OperationService methods are generally expected to be slower than other Gitaly endpoints and this is reflected in the SLI.

        Since the `{{ $labels.type }}` service is not fully redundant, SLI violations on a single node may represent a user-impacting service degradation.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: gitaly-main/gitaly-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/gitaly-main/gitaly-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "1534403952"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage,shard,fqdn) (
          label_replace(rate(gitaly_service_client_requests_total{environment="{{ $labels.environment }}",fqdn="{{ $labels.fqdn }}",grpc_code!~"AlreadyExists|Canceled|DeadlineExceeded|FailedPrecondition|InvalidArgument|NotFound|OK|PermissionDenied|Unauthenticated",grpc_service="gitaly.OperationService",job="gitaly",shard="{{ $labels.shard }}",stage="{{ $labels.stage }}"}[5m]), "_c", "0", "", "")
          or
          label_replace(rate(gitaly_service_client_requests_total{deadline_type!="limited",environment="{{ $labels.environment }}",fqdn="{{ $labels.fqdn }}",grpc_code="DeadlineExceeded",grpc_service="gitaly.OperationService",job="gitaly",shard="{{ $labels.shard }}",stage="{{ $labels.stage }}"}[5m]), "_c", "1", "", "")
        )
      runbook: docs/gitaly/README.md
    labels:
      aggregation: component_node
      alert_class: slo_violation
      alert_type: symptom
      feature_category: gitaly
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 1h
    expr: |
      (
        (
          gitlab_component_node_errors:ratio_1h{component="goserver_op_service",monitor="global",type="gitaly"}
          > (14.4 * 0.000500)
        )
        and
        (
          gitlab_component_node_errors:ratio_5m{component="goserver_op_service",monitor="global",type="gitaly"}
          > (14.4 * 0.000500)
        )
      )
      and on(env,environment,tier,type,stage,shard,fqdn,component)
      (
        sum by(env,environment,tier,type,stage,shard,fqdn,component) (gitlab_component_node_ops:rate_1h{component="goserver_op_service",monitor="global",type="gitaly"}) >= 0.33333
      )
  - alert: GitalyServiceGoserverOpServiceErrorSLOViolationSingleNode
    for: 10m
    annotations:
      title: The goserver_op_service SLI of the gitaly service on node `{{ $labels.fqdn
        }}` has an error rate violating SLO
      description: |
        This SLI monitors requests to Gitaly's OperationService, via its GRPC endpoint. OperationService methods are generally expected to be slower than other Gitaly endpoints and this is reflected in the SLI.

        Since the `{{ $labels.type }}` service is not fully redundant, SLI violations on a single node may represent a user-impacting service degradation.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: gitaly-main/gitaly-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/gitaly-main/gitaly-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "1534403952"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage,shard,fqdn) (
          label_replace(rate(gitaly_service_client_requests_total{environment="{{ $labels.environment }}",fqdn="{{ $labels.fqdn }}",grpc_code!~"AlreadyExists|Canceled|DeadlineExceeded|FailedPrecondition|InvalidArgument|NotFound|OK|PermissionDenied|Unauthenticated",grpc_service="gitaly.OperationService",job="gitaly",shard="{{ $labels.shard }}",stage="{{ $labels.stage }}"}[5m]), "_c", "0", "", "")
          or
          label_replace(rate(gitaly_service_client_requests_total{deadline_type!="limited",environment="{{ $labels.environment }}",fqdn="{{ $labels.fqdn }}",grpc_code="DeadlineExceeded",grpc_service="gitaly.OperationService",job="gitaly",shard="{{ $labels.shard }}",stage="{{ $labels.stage }}"}[5m]), "_c", "1", "", "")
        )
      runbook: docs/gitaly/README.md
    labels:
      aggregation: component_node
      alert_class: slo_violation
      alert_type: symptom
      feature_category: gitaly
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: error
      slo_alert: "yes"
      user_impacting: "yes"
      window: 6h
    expr: |
      (
        (
          gitlab_component_node_errors:ratio_6h{component="goserver_op_service",monitor="global",type="gitaly"}
          > (6 * 0.000500)
        )
        and
        (
          gitlab_component_node_errors:ratio_30m{component="goserver_op_service",monitor="global",type="gitaly"}
          > (6 * 0.000500)
        )
      )
      and on(env,environment,tier,type,stage,shard,fqdn,component)
      (
        sum by(env,environment,tier,type,stage,shard,fqdn,component) (gitlab_component_node_ops:rate_6h{component="goserver_op_service",monitor="global",type="gitaly"}) >= 0.05556
      )
  - alert: GitalyServiceGoserverOpServiceTrafficCessation
    for: 5m
    annotations:
      title: The goserver_op_service SLI of the gitaly service (`{{ $labels.stage
        }}` stage) has not received any traffic in the past 30 minutes
      description: |
        This SLI monitors requests to Gitaly's OperationService, via its GRPC endpoint. OperationService methods are generally expected to be slower than other Gitaly endpoints and this is reflected in the SLI.

        This alert signifies that the SLI is reporting a cessation of traffic, but the signal is not absent.
      grafana_dashboard_id: gitaly-main/gitaly-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/gitaly-main/gitaly-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "1897473754"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitaly_service_client_requests_total{environment="{{ $labels.environment }}",grpc_service="gitaly.OperationService",job="gitaly",stage="{{ $labels.stage }}"}[5m])
        )
      runbook: docs/gitaly/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: gitaly
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_30m{component="goserver_op_service",monitor="global",stage="main",type="gitaly"} == 0
  - alert: GitalyServiceGoserverOpServiceTrafficAbsent
    for: 30m
    annotations:
      title: The goserver_op_service SLI of the gitaly service (`{{ $labels.stage
        }}` stage) has not reported any traffic in the past 30 minutes
      description: |
        This SLI monitors requests to Gitaly's OperationService, via its GRPC endpoint. OperationService methods are generally expected to be slower than other Gitaly endpoints and this is reflected in the SLI.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: gitaly-main/gitaly-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/gitaly-main/gitaly-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "1897473754"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitaly_service_client_requests_total{environment="{{ $labels.environment }}",grpc_service="gitaly.OperationService",job="gitaly",stage="{{ $labels.stage }}"}[5m])
        )
      runbook: docs/gitaly/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: gitaly
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_5m{component="goserver_op_service",monitor="global",stage="main",type="gitaly"} offset 1h
      unless
      gitlab_component_ops:rate_5m{component="goserver_op_service",monitor="global",stage="main",type="gitaly"}
  - alert: GitalyServiceGoserverOpServiceTrafficCessationSingleNode
    for: 5m
    annotations:
      title: The goserver_op_service SLI of the gitaly service on node `{{ $labels.fqdn
        }}` has not received any traffic in the past 30 minutes
      description: |
        This SLI monitors requests to Gitaly's OperationService, via its GRPC endpoint. OperationService methods are generally expected to be slower than other Gitaly endpoints and this is reflected in the SLI.

        This alert signifies that the SLI is reporting a cessation of traffic, but the signal is not absent.

        Since the `{{ $labels.type }}` service is not fully redundant, SLI violations on a single node may represent a user-impacting service degradation.
      grafana_dashboard_id: gitaly-main/gitaly-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/gitaly-main/gitaly-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "1897473754"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitaly_service_client_requests_total{environment="{{ $labels.environment }}",grpc_service="gitaly.OperationService",job="gitaly",stage="{{ $labels.stage }}"}[5m])
        )
      runbook: docs/gitaly/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: gitaly
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_node_ops:rate_30m{component="goserver_op_service",monitor="global",type="gitaly"} == 0
  - alert: GitalyServiceGoserverOpServiceTrafficAbsentSingleNode
    for: 30m
    annotations:
      title: The goserver_op_service SLI of the gitaly service on node `{{ $labels.fqdn
        }}` has not reported any traffic in the past 30 minutes
      description: |
        This SLI monitors requests to Gitaly's OperationService, via its GRPC endpoint. OperationService methods are generally expected to be slower than other Gitaly endpoints and this is reflected in the SLI.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.

        Since the `{{ $labels.type }}` service is not fully redundant, SLI violations on a single node may represent a user-impacting service degradation.
      grafana_dashboard_id: gitaly-main/gitaly-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/gitaly-main/gitaly-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "1897473754"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitaly_service_client_requests_total{environment="{{ $labels.environment }}",grpc_service="gitaly.OperationService",job="gitaly",stage="{{ $labels.stage }}"}[5m])
        )
      runbook: docs/gitaly/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: gitaly
      pager: pagerduty
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_node_ops:rate_5m{component="goserver_op_service",monitor="global",type="gitaly"} offset 1h
      unless
      gitlab_component_node_ops:rate_5m{component="goserver_op_service",monitor="global",type="gitaly"}
