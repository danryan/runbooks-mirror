# WARNING. DO NOT EDIT THIS FILE BY HAND. USE ./thanos-rules-jsonnet/service-component-alerts.jsonnet TO GENERATE IT
# YOUR CHANGES WILL BE OVERRIDDEN
groups:
- name: 'Service Component Alerts: gitaly'
  interval: 1m
  partial_response_strategy: warn
  rules:
  - alert: GitalyServiceGitalyrubyApdexSLOViolation
    for: 2m
    annotations:
      title: The gitalyruby SLI of the gitaly service (`{{ $labels.stage }}` stage) has an apdex violating
        SLO
      description: |
        This SLI monitors requests to Gitaly's Ruby sidecar, known as Gitaly-Ruby. All requests made to Gitaly-Ruby are monitored in aggregate, via its GRPC interface.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: gitaly-main/gitaly-overview
      grafana_dashboard_link: >-
        https://dashboards.gitlab.net/d/gitaly-main/gitaly-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: '6'
      grafana_panel_id: '27080'
      grafana_variables: environment,stage
      promql_template_1: >-
        gitlab_component_apdex:ratio_1h{environment="$environment", type="$type", stage="$stage", component="$component"}
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: symptom
      feature_category: gitaly
      pager: pagerduty
      product_stage: create
      product_stage_group: gitaly
      rules_domain: general
      severity: s2
      slo_alert: 'yes'
      user_impacting: 'yes'
    expr: |
      (
        (
          gitlab_component_apdex:ratio_1h{component="gitalyruby",monitor="global",type="gitaly"}
          < (1 - 14.4 * 0.001000)
        )
        and
        (
          gitlab_component_apdex:ratio_5m{component="gitalyruby",monitor="global",type="gitaly"}
          < (1 - 14.4 * 0.001000)
        )
        or
        (
          gitlab_component_apdex:ratio_6h{component="gitalyruby",monitor="global",type="gitaly"}
          < (1 - 6 * 0.001000)
        )
        and
        (
          gitlab_component_apdex:ratio_30m{component="gitalyruby",monitor="global",type="gitaly"}
          < (1 - 6 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="gitalyruby",monitor="global",type="gitaly"}) >= 1
      )
  - alert: GitalyServiceGitalyrubyErrorSLOViolation
    for: 2m
    annotations:
      title: >-
        The gitalyruby SLI of the gitaly service (`{{ $labels.stage }}` stage) has an error rate violating
        SLO
      description: |
        This SLI monitors requests to Gitaly's Ruby sidecar, known as Gitaly-Ruby. All requests made to Gitaly-Ruby are monitored in aggregate, via its GRPC interface.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: gitaly-main/gitaly-overview
      grafana_dashboard_link: >-
        https://dashboards.gitlab.net/d/gitaly-main/gitaly-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: '6'
      grafana_panel_id: '88584'
      grafana_variables: environment,stage
      link1_title: Definition
      link1_url: >-
        https://gitlab.com/gitlab-com/runbooks/blob/master/docs/uncategorized/definition-service-error-rate.md
      promql_template_1: >-
        gitlab_component_errors:ratio_5m{environment="$environment", type="$type", stage="$stage", component="$component"}
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: symptom
      feature_category: gitaly
      pager: pagerduty
      product_stage: create
      product_stage_group: gitaly
      rules_domain: general
      severity: s2
      slo_alert: 'yes'
      user_impacting: 'yes'
    expr: |
      (
        (
          gitlab_component_errors:ratio_1h{component="gitalyruby",monitor="global",type="gitaly"}
          > (14.4 * 0.001000)
        )
        and
        (
          gitlab_component_errors:ratio_5m{component="gitalyruby",monitor="global",type="gitaly"}
          > (14.4 * 0.001000)
        )
        or
        (
          gitlab_component_errors:ratio_6h{component="gitalyruby",monitor="global",type="gitaly"}
          > (6 * 0.001000)
        )
        and
        (
          gitlab_component_errors:ratio_30m{component="gitalyruby",monitor="global",type="gitaly"}
          > (6 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="gitalyruby",monitor="global",type="gitaly"}) >= 1
      )
  - alert: GitalyServiceGitalyrubyTrafficCessation
    for: 5m
    annotations:
      title: >-
        The gitalyruby SLI of the gitaly service (`{{ $labels.stage }}` stage) has not received any traffic
        in the past 30 minutes
      description: |
        This SLI monitors requests to Gitaly's Ruby sidecar, known as Gitaly-Ruby. All requests made to Gitaly-Ruby are monitored in aggregate, via its GRPC interface.

        This alert signifies that the SLI is reporting a cessation of traffic, but the signal is not absent.
      grafana_dashboard_id: gitaly-main/gitaly-overview
      grafana_dashboard_link: >-
        https://dashboards.gitlab.net/d/gitaly-main/gitaly-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: '6'
      grafana_panel_id: '34696'
      grafana_variables: environment,stage
      link1_title: Definition
      link1_url: https://gitlab.com/gitlab-com/runbooks/blob/master/docs/uncategorized/definition-service-ops-rate.md
      promql_template_1: >-
        gitlab_component_errors:ratio_5m{environment="$environment", type="$type", stage="$stage", component="$component"}
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: cause
      experimental: 'true'
      feature_category: gitaly
      product_stage: create
      product_stage_group: gitaly
      severity: s3
      slo_alert: 'no'
      user_impacting: 'yes'
    expr: >
      gitlab_component_ops:rate_30m{type="gitaly", component="gitalyruby", stage="main", monitor="global"}
      == 0
  - alert: GitalyServiceGitalyrubyTrafficAbsent
    for: 30m
    annotations:
      title: >-
        The gitalyruby SLI of the gitaly service (`{{ $labels.stage }}` stage) has not reported any traffic
        in the past 30 minutes
      description: |
        This SLI monitors requests to Gitaly's Ruby sidecar, known as Gitaly-Ruby. All requests made to Gitaly-Ruby are monitored in aggregate, via its GRPC interface.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: gitaly-main/gitaly-overview
      grafana_dashboard_link: >-
        https://dashboards.gitlab.net/d/gitaly-main/gitaly-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: '6'
      grafana_panel_id: '34696'
      grafana_variables: environment,stage
      link1_title: Definition
      link1_url: https://gitlab.com/gitlab-com/runbooks/blob/master/docs/uncategorized/definition-service-ops-rate.md
      promql_template_1: >-
        gitlab_component_ops:rate_5m{environment="$environment", type="$type", stage="$stage", component="$component"}
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: cause
      experimental: 'true'
      feature_category: gitaly
      product_stage: create
      product_stage_group: gitaly
      severity: s3
      slo_alert: 'no'
      user_impacting: 'yes'
    expr: |
      gitlab_component_ops:rate_5m{type="gitaly", component="gitalyruby", stage="main", monitor="global"} offset 1h
      unless
      gitlab_component_ops:rate_5m{type="gitaly", component="gitalyruby", stage="main", monitor="global"}
  - alert: GitalyServiceGoserverApdexSLOViolation
    for: 2m
    annotations:
      title: The goserver SLI of the gitaly service (`{{ $labels.stage }}` stage) has an apdex violating
        SLO
      description: |
        This SLI monitors all Gitaly GRPC requests in aggregate, excluding the OperationService. GRPC failures which are considered to be the "server's fault" are counted as errors. The apdex score is based on a subset of GRPC methods which are expected to be fast.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: gitaly-main/gitaly-overview
      grafana_dashboard_link: >-
        https://dashboards.gitlab.net/d/gitaly-main/gitaly-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: '6'
      grafana_panel_id: '30056'
      grafana_variables: environment,stage
      promql_template_1: >-
        gitlab_component_apdex:ratio_1h{environment="$environment", type="$type", stage="$stage", component="$component"}
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: symptom
      feature_category: gitaly
      pager: pagerduty
      product_stage: create
      product_stage_group: gitaly
      rules_domain: general
      severity: s2
      slo_alert: 'yes'
      user_impacting: 'yes'
    expr: |
      (
        (
          gitlab_component_apdex:ratio_1h{component="goserver",monitor="global",type="gitaly"}
          < (1 - 14.4 * 0.001000)
        )
        and
        (
          gitlab_component_apdex:ratio_5m{component="goserver",monitor="global",type="gitaly"}
          < (1 - 14.4 * 0.001000)
        )
        or
        (
          gitlab_component_apdex:ratio_6h{component="goserver",monitor="global",type="gitaly"}
          < (1 - 6 * 0.001000)
        )
        and
        (
          gitlab_component_apdex:ratio_30m{component="goserver",monitor="global",type="gitaly"}
          < (1 - 6 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="goserver",monitor="global",type="gitaly"}) >= 1
      )
  - alert: GitalyServiceGoserverErrorSLOViolation
    for: 2m
    annotations:
      title: The goserver SLI of the gitaly service (`{{ $labels.stage }}` stage) has an error rate violating
        SLO
      description: |
        This SLI monitors all Gitaly GRPC requests in aggregate, excluding the OperationService. GRPC failures which are considered to be the "server's fault" are counted as errors. The apdex score is based on a subset of GRPC methods which are expected to be fast.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: gitaly-main/gitaly-overview
      grafana_dashboard_link: >-
        https://dashboards.gitlab.net/d/gitaly-main/gitaly-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: '6'
      grafana_panel_id: '56904'
      grafana_variables: environment,stage
      link1_title: Definition
      link1_url: >-
        https://gitlab.com/gitlab-com/runbooks/blob/master/docs/uncategorized/definition-service-error-rate.md
      promql_template_1: >-
        gitlab_component_errors:ratio_5m{environment="$environment", type="$type", stage="$stage", component="$component"}
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: symptom
      feature_category: gitaly
      pager: pagerduty
      product_stage: create
      product_stage_group: gitaly
      rules_domain: general
      severity: s2
      slo_alert: 'yes'
      user_impacting: 'yes'
    expr: |
      (
        (
          gitlab_component_errors:ratio_1h{component="goserver",monitor="global",type="gitaly"}
          > (14.4 * 0.001000)
        )
        and
        (
          gitlab_component_errors:ratio_5m{component="goserver",monitor="global",type="gitaly"}
          > (14.4 * 0.001000)
        )
        or
        (
          gitlab_component_errors:ratio_6h{component="goserver",monitor="global",type="gitaly"}
          > (6 * 0.001000)
        )
        and
        (
          gitlab_component_errors:ratio_30m{component="goserver",monitor="global",type="gitaly"}
          > (6 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="goserver",monitor="global",type="gitaly"}) >= 1
      )
  - alert: GitalyServiceGoserverTrafficCessation
    for: 5m
    annotations:
      title: >-
        The goserver SLI of the gitaly service (`{{ $labels.stage }}` stage) has not received any traffic
        in the past 30 minutes
      description: |
        This SLI monitors all Gitaly GRPC requests in aggregate, excluding the OperationService. GRPC failures which are considered to be the "server's fault" are counted as errors. The apdex score is based on a subset of GRPC methods which are expected to be fast.

        This alert signifies that the SLI is reporting a cessation of traffic, but the signal is not absent.
      grafana_dashboard_id: gitaly-main/gitaly-overview
      grafana_dashboard_link: >-
        https://dashboards.gitlab.net/d/gitaly-main/gitaly-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: '6'
      grafana_panel_id: '73448'
      grafana_variables: environment,stage
      link1_title: Definition
      link1_url: https://gitlab.com/gitlab-com/runbooks/blob/master/docs/uncategorized/definition-service-ops-rate.md
      promql_template_1: >-
        gitlab_component_errors:ratio_5m{environment="$environment", type="$type", stage="$stage", component="$component"}
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: cause
      experimental: 'true'
      feature_category: gitaly
      product_stage: create
      product_stage_group: gitaly
      severity: s3
      slo_alert: 'no'
      user_impacting: 'yes'
    expr: >
      gitlab_component_ops:rate_30m{type="gitaly", component="goserver", stage="main", monitor="global"}
      == 0
  - alert: GitalyServiceGoserverTrafficAbsent
    for: 30m
    annotations:
      title: >-
        The goserver SLI of the gitaly service (`{{ $labels.stage }}` stage) has not reported any traffic
        in the past 30 minutes
      description: |
        This SLI monitors all Gitaly GRPC requests in aggregate, excluding the OperationService. GRPC failures which are considered to be the "server's fault" are counted as errors. The apdex score is based on a subset of GRPC methods which are expected to be fast.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: gitaly-main/gitaly-overview
      grafana_dashboard_link: >-
        https://dashboards.gitlab.net/d/gitaly-main/gitaly-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: '6'
      grafana_panel_id: '73448'
      grafana_variables: environment,stage
      link1_title: Definition
      link1_url: https://gitlab.com/gitlab-com/runbooks/blob/master/docs/uncategorized/definition-service-ops-rate.md
      promql_template_1: >-
        gitlab_component_ops:rate_5m{environment="$environment", type="$type", stage="$stage", component="$component"}
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: cause
      experimental: 'true'
      feature_category: gitaly
      product_stage: create
      product_stage_group: gitaly
      severity: s3
      slo_alert: 'no'
      user_impacting: 'yes'
    expr: |
      gitlab_component_ops:rate_5m{type="gitaly", component="goserver", stage="main", monitor="global"} offset 1h
      unless
      gitlab_component_ops:rate_5m{type="gitaly", component="goserver", stage="main", monitor="global"}
  - alert: GitalyServiceGoserverOpServiceApdexSLOViolation
    for: 2m
    annotations:
      title: >-
        The goserver_op_service SLI of the gitaly service (`{{ $labels.stage }}` stage) has an apdex violating
        SLO
      description: |
        This SLI monitors requests to Gitaly's OperationService, via its GRPC endpoint. OperationService methods are generally expected to be slower than other Gitaly endpoints and this is reflected in the SLI.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: gitaly-main/gitaly-overview
      grafana_dashboard_link: >-
        https://dashboards.gitlab.net/d/gitaly-main/gitaly-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: '6'
      grafana_panel_id: '75912'
      grafana_variables: environment,stage
      promql_template_1: >-
        gitlab_component_apdex:ratio_1h{environment="$environment", type="$type", stage="$stage", component="$component"}
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: symptom
      feature_category: gitaly
      pager: pagerduty
      product_stage: create
      product_stage_group: gitaly
      rules_domain: general
      severity: s2
      slo_alert: 'yes'
      user_impacting: 'yes'
    expr: |
      (
        (
          gitlab_component_apdex:ratio_1h{component="goserver_op_service",monitor="global",type="gitaly"}
          < (1 - 14.4 * 0.001000)
        )
        and
        (
          gitlab_component_apdex:ratio_5m{component="goserver_op_service",monitor="global",type="gitaly"}
          < (1 - 14.4 * 0.001000)
        )
        or
        (
          gitlab_component_apdex:ratio_6h{component="goserver_op_service",monitor="global",type="gitaly"}
          < (1 - 6 * 0.001000)
        )
        and
        (
          gitlab_component_apdex:ratio_30m{component="goserver_op_service",monitor="global",type="gitaly"}
          < (1 - 6 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="goserver_op_service",monitor="global",type="gitaly"}) >= 1
      )
  - alert: GitalyServiceGoserverOpServiceErrorSLOViolation
    for: 2m
    annotations:
      title: >-
        The goserver_op_service SLI of the gitaly service (`{{ $labels.stage }}` stage) has an error rate
        violating SLO
      description: |
        This SLI monitors requests to Gitaly's OperationService, via its GRPC endpoint. OperationService methods are generally expected to be slower than other Gitaly endpoints and this is reflected in the SLI.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: gitaly-main/gitaly-overview
      grafana_dashboard_link: >-
        https://dashboards.gitlab.net/d/gitaly-main/gitaly-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: '6'
      grafana_panel_id: '55720'
      grafana_variables: environment,stage
      link1_title: Definition
      link1_url: >-
        https://gitlab.com/gitlab-com/runbooks/blob/master/docs/uncategorized/definition-service-error-rate.md
      promql_template_1: >-
        gitlab_component_errors:ratio_5m{environment="$environment", type="$type", stage="$stage", component="$component"}
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: symptom
      feature_category: gitaly
      pager: pagerduty
      product_stage: create
      product_stage_group: gitaly
      rules_domain: general
      severity: s2
      slo_alert: 'yes'
      user_impacting: 'yes'
    expr: |
      (
        (
          gitlab_component_errors:ratio_1h{component="goserver_op_service",monitor="global",type="gitaly"}
          > (14.4 * 0.001000)
        )
        and
        (
          gitlab_component_errors:ratio_5m{component="goserver_op_service",monitor="global",type="gitaly"}
          > (14.4 * 0.001000)
        )
        or
        (
          gitlab_component_errors:ratio_6h{component="goserver_op_service",monitor="global",type="gitaly"}
          > (6 * 0.001000)
        )
        and
        (
          gitlab_component_errors:ratio_30m{component="goserver_op_service",monitor="global",type="gitaly"}
          > (6 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="goserver_op_service",monitor="global",type="gitaly"}) >= 1
      )
  - alert: GitalyServiceGoserverOpServiceTrafficCessation
    for: 5m
    annotations:
      title: >-
        The goserver_op_service SLI of the gitaly service (`{{ $labels.stage }}` stage) has not received
        any traffic in the past 30 minutes
      description: |
        This SLI monitors requests to Gitaly's OperationService, via its GRPC endpoint. OperationService methods are generally expected to be slower than other Gitaly endpoints and this is reflected in the SLI.

        This alert signifies that the SLI is reporting a cessation of traffic, but the signal is not absent.
      grafana_dashboard_id: gitaly-main/gitaly-overview
      grafana_dashboard_link: >-
        https://dashboards.gitlab.net/d/gitaly-main/gitaly-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: '6'
      grafana_panel_id: '94632'
      grafana_variables: environment,stage
      link1_title: Definition
      link1_url: https://gitlab.com/gitlab-com/runbooks/blob/master/docs/uncategorized/definition-service-ops-rate.md
      promql_template_1: >-
        gitlab_component_errors:ratio_5m{environment="$environment", type="$type", stage="$stage", component="$component"}
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: cause
      experimental: 'true'
      feature_category: gitaly
      product_stage: create
      product_stage_group: gitaly
      severity: s3
      slo_alert: 'no'
      user_impacting: 'yes'
    expr: >
      gitlab_component_ops:rate_30m{type="gitaly", component="goserver_op_service", stage="main", monitor="global"}
      == 0
  - alert: GitalyServiceGoserverOpServiceTrafficAbsent
    for: 30m
    annotations:
      title: >-
        The goserver_op_service SLI of the gitaly service (`{{ $labels.stage }}` stage) has not reported
        any traffic in the past 30 minutes
      description: |
        This SLI monitors requests to Gitaly's OperationService, via its GRPC endpoint. OperationService methods are generally expected to be slower than other Gitaly endpoints and this is reflected in the SLI.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: gitaly-main/gitaly-overview
      grafana_dashboard_link: >-
        https://dashboards.gitlab.net/d/gitaly-main/gitaly-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: '6'
      grafana_panel_id: '94632'
      grafana_variables: environment,stage
      link1_title: Definition
      link1_url: https://gitlab.com/gitlab-com/runbooks/blob/master/docs/uncategorized/definition-service-ops-rate.md
      promql_template_1: >-
        gitlab_component_ops:rate_5m{environment="$environment", type="$type", stage="$stage", component="$component"}
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: cause
      experimental: 'true'
      feature_category: gitaly
      product_stage: create
      product_stage_group: gitaly
      severity: s3
      slo_alert: 'no'
      user_impacting: 'yes'
    expr: |
      gitlab_component_ops:rate_5m{type="gitaly", component="goserver_op_service", stage="main", monitor="global"} offset 1h
      unless
      gitlab_component_ops:rate_5m{type="gitaly", component="goserver_op_service", stage="main", monitor="global"}
