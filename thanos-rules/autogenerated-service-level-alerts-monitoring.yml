# WARNING. DO NOT EDIT THIS FILE BY HAND. USE ./thanos-rules-jsonnet/service-component-alerts.jsonnet TO GENERATE IT
# YOUR CHANGES WILL BE OVERRIDDEN
groups:
- name: 'Service Component Alerts: monitoring'
  interval: 1m
  partial_response_strategy: warn
  rules:
  - alert: MonitoringServiceGrafanaErrorSLOViolation
    for: 2m
    annotations:
      title: >-
        The grafana SLI of the monitoring service (`{{ $labels.stage }}` stage) has an error rate violating
        SLO
      description: |
        This SLI monitors the internal Grafana instance, via the HTTP interface. 5xx responses are considered errors.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: monitoring-main/monitoring-overview
      grafana_dashboard_link: >-
        https://dashboards.gitlab.net/d/monitoring-main/monitoring-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: '6'
      grafana_panel_id: '1320'
      grafana_variables: environment,stage
      link1_title: Definition
      link1_url: >-
        https://gitlab.com/gitlab-com/runbooks/blob/master/docs/uncategorized/definition-service-error-rate.md
      promql_template_1: >-
        gitlab_component_errors:ratio_5m{environment="$environment", type="$type", stage="$stage", component="$component"}
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: symptom
      feature_category: not_owned
      incident_project: gitlab.com/gitlab-com/gl-infra/production
      pager: pagerduty
      product_stage: not_owned
      product_stage_group: not_owned
      rules_domain: general
      severity: s2
      slo_alert: 'yes'
      user_impacting: 'yes'
    expr: |
      (
        (
          gitlab_component_errors:ratio_1h{component="grafana",monitor="global",type="monitoring"}
          > (14.4 * 0.001000)
        )
        and
        (
          gitlab_component_errors:ratio_5m{component="grafana",monitor="global",type="monitoring"}
          > (14.4 * 0.001000)
        )
        or
        (
          gitlab_component_errors:ratio_6h{component="grafana",monitor="global",type="monitoring"}
          > (6 * 0.001000)
        )
        and
        (
          gitlab_component_errors:ratio_30m{component="grafana",monitor="global",type="monitoring"}
          > (6 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="grafana",monitor="global",type="monitoring"}) >= 1
      )
  - alert: MonitoringServiceGrafanaTrafficCessation
    for: 5m
    annotations:
      title: >-
        The grafana SLI of the monitoring service (`{{ $labels.stage }}` stage) has not received any traffic
        in the past 30 minutes
      description: |
        This SLI monitors the internal Grafana instance, via the HTTP interface. 5xx responses are considered errors.

        This alert signifies that the SLI is reporting a cessation of traffic, but the signal is not absent.
      grafana_dashboard_id: monitoring-main/monitoring-overview
      grafana_dashboard_link: >-
        https://dashboards.gitlab.net/d/monitoring-main/monitoring-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: '6'
      grafana_panel_id: '50280'
      grafana_variables: environment,stage
      link1_title: Definition
      link1_url: https://gitlab.com/gitlab-com/runbooks/blob/master/docs/uncategorized/definition-service-ops-rate.md
      promql_template_1: >-
        gitlab_component_errors:ratio_5m{environment="$environment", type="$type", stage="$stage", component="$component"}
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: cause
      experimental: 'true'
      feature_category: not_owned
      incident_project: gitlab.com/gitlab-com/gl-infra/production
      product_stage: not_owned
      product_stage_group: not_owned
      severity: s3
      slo_alert: 'no'
      user_impacting: 'yes'
    expr: >
      gitlab_component_ops:rate_30m{type="monitoring", component="grafana", stage="main", monitor="global"}
      == 0
  - alert: MonitoringServiceGrafanaTrafficAbsent
    for: 30m
    annotations:
      title: >-
        The grafana SLI of the monitoring service (`{{ $labels.stage }}` stage) has not reported any traffic
        in the past 30 minutes
      description: |
        This SLI monitors the internal Grafana instance, via the HTTP interface. 5xx responses are considered errors.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: monitoring-main/monitoring-overview
      grafana_dashboard_link: >-
        https://dashboards.gitlab.net/d/monitoring-main/monitoring-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: '6'
      grafana_panel_id: '50280'
      grafana_variables: environment,stage
      link1_title: Definition
      link1_url: https://gitlab.com/gitlab-com/runbooks/blob/master/docs/uncategorized/definition-service-ops-rate.md
      promql_template_1: >-
        gitlab_component_ops:rate_5m{environment="$environment", type="$type", stage="$stage", component="$component"}
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: cause
      experimental: 'true'
      feature_category: not_owned
      incident_project: gitlab.com/gitlab-com/gl-infra/production
      product_stage: not_owned
      product_stage_group: not_owned
      severity: s3
      slo_alert: 'no'
      user_impacting: 'yes'
    expr: |
      gitlab_component_ops:rate_5m{type="monitoring", component="grafana", stage="main", monitor="global"} offset 1h
      unless
      gitlab_component_ops:rate_5m{type="monitoring", component="grafana", stage="main", monitor="global"}
  - alert: MonitoringServicePrometheusApdexSLOViolation
    for: 2m
    annotations:
      title: >-
        The prometheus SLI of the monitoring service (`{{ $labels.stage }}` stage) has an apdex violating
        SLO
      description: |
        This SLI monitors Prometheus instances via the HTTP interface. 5xx responses are considered errors.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: monitoring-main/monitoring-overview
      grafana_dashboard_link: >-
        https://dashboards.gitlab.net/d/monitoring-main/monitoring-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: '6'
      grafana_panel_id: '31432'
      grafana_variables: environment,stage
      promql_template_1: >-
        gitlab_component_apdex:ratio_1h{environment="$environment", type="$type", stage="$stage", component="$component"}
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: symptom
      feature_category: not_owned
      incident_project: gitlab.com/gitlab-com/gl-infra/production
      pager: pagerduty
      product_stage: not_owned
      product_stage_group: not_owned
      rules_domain: general
      severity: s2
      slo_alert: 'yes'
      user_impacting: 'yes'
    expr: |
      (
        (
          gitlab_component_apdex:ratio_1h{component="prometheus",monitor="global",type="monitoring"}
          < (1 - 14.4 * 0.001000)
        )
        and
        (
          gitlab_component_apdex:ratio_5m{component="prometheus",monitor="global",type="monitoring"}
          < (1 - 14.4 * 0.001000)
        )
        or
        (
          gitlab_component_apdex:ratio_6h{component="prometheus",monitor="global",type="monitoring"}
          < (1 - 6 * 0.001000)
        )
        and
        (
          gitlab_component_apdex:ratio_30m{component="prometheus",monitor="global",type="monitoring"}
          < (1 - 6 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="prometheus",monitor="global",type="monitoring"}) >= 1
      )
  - alert: MonitoringServicePrometheusErrorSLOViolation
    for: 2m
    annotations:
      title: >-
        The prometheus SLI of the monitoring service (`{{ $labels.stage }}` stage) has an error rate violating
        SLO
      description: |
        This SLI monitors Prometheus instances via the HTTP interface. 5xx responses are considered errors.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: monitoring-main/monitoring-overview
      grafana_dashboard_link: >-
        https://dashboards.gitlab.net/d/monitoring-main/monitoring-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: '6'
      grafana_panel_id: '26856'
      grafana_variables: environment,stage
      link1_title: Definition
      link1_url: >-
        https://gitlab.com/gitlab-com/runbooks/blob/master/docs/uncategorized/definition-service-error-rate.md
      promql_template_1: >-
        gitlab_component_errors:ratio_5m{environment="$environment", type="$type", stage="$stage", component="$component"}
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: symptom
      feature_category: not_owned
      incident_project: gitlab.com/gitlab-com/gl-infra/production
      pager: pagerduty
      product_stage: not_owned
      product_stage_group: not_owned
      rules_domain: general
      severity: s2
      slo_alert: 'yes'
      user_impacting: 'yes'
    expr: |
      (
        (
          gitlab_component_errors:ratio_1h{component="prometheus",monitor="global",type="monitoring"}
          > (14.4 * 0.001000)
        )
        and
        (
          gitlab_component_errors:ratio_5m{component="prometheus",monitor="global",type="monitoring"}
          > (14.4 * 0.001000)
        )
        or
        (
          gitlab_component_errors:ratio_6h{component="prometheus",monitor="global",type="monitoring"}
          > (6 * 0.001000)
        )
        and
        (
          gitlab_component_errors:ratio_30m{component="prometheus",monitor="global",type="monitoring"}
          > (6 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="prometheus",monitor="global",type="monitoring"}) >= 1
      )
  - alert: MonitoringServicePrometheusTrafficCessation
    for: 5m
    annotations:
      title: >-
        The prometheus SLI of the monitoring service (`{{ $labels.stage }}` stage) has not received any
        traffic in the past 30 minutes
      description: |
        This SLI monitors Prometheus instances via the HTTP interface. 5xx responses are considered errors.

        This alert signifies that the SLI is reporting a cessation of traffic, but the signal is not absent.
      grafana_dashboard_id: monitoring-main/monitoring-overview
      grafana_dashboard_link: >-
        https://dashboards.gitlab.net/d/monitoring-main/monitoring-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: '6'
      grafana_panel_id: '80296'
      grafana_variables: environment,stage
      link1_title: Definition
      link1_url: https://gitlab.com/gitlab-com/runbooks/blob/master/docs/uncategorized/definition-service-ops-rate.md
      promql_template_1: >-
        gitlab_component_errors:ratio_5m{environment="$environment", type="$type", stage="$stage", component="$component"}
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: cause
      experimental: 'true'
      feature_category: not_owned
      incident_project: gitlab.com/gitlab-com/gl-infra/production
      product_stage: not_owned
      product_stage_group: not_owned
      severity: s3
      slo_alert: 'no'
      user_impacting: 'yes'
    expr: >
      gitlab_component_ops:rate_30m{type="monitoring", component="prometheus", stage="main", monitor="global"}
      == 0
  - alert: MonitoringServicePrometheusTrafficAbsent
    for: 30m
    annotations:
      title: >-
        The prometheus SLI of the monitoring service (`{{ $labels.stage }}` stage) has not reported any
        traffic in the past 30 minutes
      description: |
        This SLI monitors Prometheus instances via the HTTP interface. 5xx responses are considered errors.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: monitoring-main/monitoring-overview
      grafana_dashboard_link: >-
        https://dashboards.gitlab.net/d/monitoring-main/monitoring-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: '6'
      grafana_panel_id: '80296'
      grafana_variables: environment,stage
      link1_title: Definition
      link1_url: https://gitlab.com/gitlab-com/runbooks/blob/master/docs/uncategorized/definition-service-ops-rate.md
      promql_template_1: >-
        gitlab_component_ops:rate_5m{environment="$environment", type="$type", stage="$stage", component="$component"}
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: cause
      experimental: 'true'
      feature_category: not_owned
      incident_project: gitlab.com/gitlab-com/gl-infra/production
      product_stage: not_owned
      product_stage_group: not_owned
      severity: s3
      slo_alert: 'no'
      user_impacting: 'yes'
    expr: |
      gitlab_component_ops:rate_5m{type="monitoring", component="prometheus", stage="main", monitor="global"} offset 1h
      unless
      gitlab_component_ops:rate_5m{type="monitoring", component="prometheus", stage="main", monitor="global"}
  - alert: MonitoringServicePrometheusAlertSenderErrorSLOViolation
    for: 2m
    annotations:
      title: >-
        The prometheus_alert_sender SLI of the monitoring service (`{{ $labels.stage }}` stage) has an
        error rate violating SLO
      description: |
        This SLI monitors all prometheus alert notifications that are generated by AlertManager. Alert delivery failure is considered a service-level failure.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: monitoring-main/monitoring-overview
      grafana_dashboard_link: >-
        https://dashboards.gitlab.net/d/monitoring-main/monitoring-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: '6'
      grafana_panel_id: '76936'
      grafana_variables: environment,stage
      link1_title: Definition
      link1_url: >-
        https://gitlab.com/gitlab-com/runbooks/blob/master/docs/uncategorized/definition-service-error-rate.md
      promql_template_1: >-
        gitlab_component_errors:ratio_5m{environment="$environment", type="$type", stage="$stage", component="$component"}
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: symptom
      feature_category: not_owned
      incident_project: gitlab.com/gitlab-com/gl-infra/production
      pager: pagerduty
      product_stage: not_owned
      product_stage_group: not_owned
      rules_domain: general
      severity: s2
      slo_alert: 'yes'
      user_impacting: 'yes'
    expr: |
      (
        (
          gitlab_component_errors:ratio_1h{component="prometheus_alert_sender",monitor="global",type="monitoring"}
          > (14.4 * 0.001000)
        )
        and
        (
          gitlab_component_errors:ratio_5m{component="prometheus_alert_sender",monitor="global",type="monitoring"}
          > (14.4 * 0.001000)
        )
        or
        (
          gitlab_component_errors:ratio_6h{component="prometheus_alert_sender",monitor="global",type="monitoring"}
          > (6 * 0.001000)
        )
        and
        (
          gitlab_component_errors:ratio_30m{component="prometheus_alert_sender",monitor="global",type="monitoring"}
          > (6 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="prometheus_alert_sender",monitor="global",type="monitoring"}) >= 1
      )
  - alert: MonitoringServicePrometheusAlertSenderTrafficCessation
    for: 5m
    annotations:
      title: >-
        The prometheus_alert_sender SLI of the monitoring service (`{{ $labels.stage }}` stage) has not
        received any traffic in the past 30 minutes
      description: |
        This SLI monitors all prometheus alert notifications that are generated by AlertManager. Alert delivery failure is considered a service-level failure.

        This alert signifies that the SLI is reporting a cessation of traffic, but the signal is not absent.
      grafana_dashboard_id: monitoring-main/monitoring-overview
      grafana_dashboard_link: >-
        https://dashboards.gitlab.net/d/monitoring-main/monitoring-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: '6'
      grafana_panel_id: '89864'
      grafana_variables: environment,stage
      link1_title: Definition
      link1_url: https://gitlab.com/gitlab-com/runbooks/blob/master/docs/uncategorized/definition-service-ops-rate.md
      promql_template_1: >-
        gitlab_component_errors:ratio_5m{environment="$environment", type="$type", stage="$stage", component="$component"}
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: cause
      experimental: 'true'
      feature_category: not_owned
      incident_project: gitlab.com/gitlab-com/gl-infra/production
      product_stage: not_owned
      product_stage_group: not_owned
      severity: s3
      slo_alert: 'no'
      user_impacting: 'yes'
    expr: >
      gitlab_component_ops:rate_30m{type="monitoring", component="prometheus_alert_sender", stage="main",
      monitor="global"} == 0
  - alert: MonitoringServicePrometheusAlertSenderTrafficAbsent
    for: 30m
    annotations:
      title: >-
        The prometheus_alert_sender SLI of the monitoring service (`{{ $labels.stage }}` stage) has not
        reported any traffic in the past 30 minutes
      description: |
        This SLI monitors all prometheus alert notifications that are generated by AlertManager. Alert delivery failure is considered a service-level failure.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: monitoring-main/monitoring-overview
      grafana_dashboard_link: >-
        https://dashboards.gitlab.net/d/monitoring-main/monitoring-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: '6'
      grafana_panel_id: '89864'
      grafana_variables: environment,stage
      link1_title: Definition
      link1_url: https://gitlab.com/gitlab-com/runbooks/blob/master/docs/uncategorized/definition-service-ops-rate.md
      promql_template_1: >-
        gitlab_component_ops:rate_5m{environment="$environment", type="$type", stage="$stage", component="$component"}
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: cause
      experimental: 'true'
      feature_category: not_owned
      incident_project: gitlab.com/gitlab-com/gl-infra/production
      product_stage: not_owned
      product_stage_group: not_owned
      severity: s3
      slo_alert: 'no'
      user_impacting: 'yes'
    expr: |
      gitlab_component_ops:rate_5m{type="monitoring", component="prometheus_alert_sender", stage="main", monitor="global"} offset 1h
      unless
      gitlab_component_ops:rate_5m{type="monitoring", component="prometheus_alert_sender", stage="main", monitor="global"}
  - alert: MonitoringServicePublicDashboardsThanosQueryApdexSLOViolation
    for: 2m
    annotations:
      title: >-
        The public_dashboards_thanos_query SLI of the monitoring service (`{{ $labels.stage }}` stage)
        has an apdex violating SLO
      description: |
        Thanos query gathers the data needed to evaluate Prometheus queries from multiple underlying prometheus and thanos instances. This SLI monitors the Thanos query HTTP interface for GitLab's public Thanos instance, which is used by the public Grafana instance. 5xx responses are considered failures.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: monitoring-main/monitoring-overview
      grafana_dashboard_link: >-
        https://dashboards.gitlab.net/d/monitoring-main/monitoring-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: '6'
      grafana_panel_id: '77544'
      grafana_variables: environment,stage
      promql_template_1: >-
        gitlab_component_apdex:ratio_1h{environment="$environment", type="$type", stage="$stage", component="$component"}
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: symptom
      feature_category: not_owned
      incident_project: gitlab.com/gitlab-com/gl-infra/production
      pager: pagerduty
      product_stage: not_owned
      product_stage_group: not_owned
      rules_domain: general
      severity: s2
      slo_alert: 'yes'
      user_impacting: 'no'
    expr: |
      (
        (
          gitlab_component_apdex:ratio_1h{component="public_dashboards_thanos_query",monitor="global",type="monitoring"}
          < (1 - 14.4 * 0.001000)
        )
        and
        (
          gitlab_component_apdex:ratio_5m{component="public_dashboards_thanos_query",monitor="global",type="monitoring"}
          < (1 - 14.4 * 0.001000)
        )
        or
        (
          gitlab_component_apdex:ratio_6h{component="public_dashboards_thanos_query",monitor="global",type="monitoring"}
          < (1 - 6 * 0.001000)
        )
        and
        (
          gitlab_component_apdex:ratio_30m{component="public_dashboards_thanos_query",monitor="global",type="monitoring"}
          < (1 - 6 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="public_dashboards_thanos_query",monitor="global",type="monitoring"}) >= 1
      )
  - alert: MonitoringServicePublicDashboardsThanosQueryErrorSLOViolation
    for: 2m
    annotations:
      title: >-
        The public_dashboards_thanos_query SLI of the monitoring service (`{{ $labels.stage }}` stage)
        has an error rate violating SLO
      description: |
        Thanos query gathers the data needed to evaluate Prometheus queries from multiple underlying prometheus and thanos instances. This SLI monitors the Thanos query HTTP interface for GitLab's public Thanos instance, which is used by the public Grafana instance. 5xx responses are considered failures.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: monitoring-main/monitoring-overview
      grafana_dashboard_link: >-
        https://dashboards.gitlab.net/d/monitoring-main/monitoring-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: '6'
      grafana_panel_id: '84360'
      grafana_variables: environment,stage
      link1_title: Definition
      link1_url: >-
        https://gitlab.com/gitlab-com/runbooks/blob/master/docs/uncategorized/definition-service-error-rate.md
      promql_template_1: >-
        gitlab_component_errors:ratio_5m{environment="$environment", type="$type", stage="$stage", component="$component"}
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: symptom
      feature_category: not_owned
      incident_project: gitlab.com/gitlab-com/gl-infra/production
      pager: pagerduty
      product_stage: not_owned
      product_stage_group: not_owned
      rules_domain: general
      severity: s2
      slo_alert: 'yes'
      user_impacting: 'no'
    expr: |
      (
        (
          gitlab_component_errors:ratio_1h{component="public_dashboards_thanos_query",monitor="global",type="monitoring"}
          > (14.4 * 0.001000)
        )
        and
        (
          gitlab_component_errors:ratio_5m{component="public_dashboards_thanos_query",monitor="global",type="monitoring"}
          > (14.4 * 0.001000)
        )
        or
        (
          gitlab_component_errors:ratio_6h{component="public_dashboards_thanos_query",monitor="global",type="monitoring"}
          > (6 * 0.001000)
        )
        and
        (
          gitlab_component_errors:ratio_30m{component="public_dashboards_thanos_query",monitor="global",type="monitoring"}
          > (6 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="public_dashboards_thanos_query",monitor="global",type="monitoring"}) >= 1
      )
  - alert: MonitoringServicePublicDashboardsThanosQueryTrafficCessation
    for: 5m
    annotations:
      title: >-
        The public_dashboards_thanos_query SLI of the monitoring service (`{{ $labels.stage }}` stage)
        has not received any traffic in the past 30 minutes
      description: |
        Thanos query gathers the data needed to evaluate Prometheus queries from multiple underlying prometheus and thanos instances. This SLI monitors the Thanos query HTTP interface for GitLab's public Thanos instance, which is used by the public Grafana instance. 5xx responses are considered failures.

        This alert signifies that the SLI is reporting a cessation of traffic, but the signal is not absent.
      grafana_dashboard_id: monitoring-main/monitoring-overview
      grafana_dashboard_link: >-
        https://dashboards.gitlab.net/d/monitoring-main/monitoring-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: '6'
      grafana_panel_id: '25224'
      grafana_variables: environment,stage
      link1_title: Definition
      link1_url: https://gitlab.com/gitlab-com/runbooks/blob/master/docs/uncategorized/definition-service-ops-rate.md
      promql_template_1: >-
        gitlab_component_errors:ratio_5m{environment="$environment", type="$type", stage="$stage", component="$component"}
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: cause
      experimental: 'true'
      feature_category: not_owned
      incident_project: gitlab.com/gitlab-com/gl-infra/production
      product_stage: not_owned
      product_stage_group: not_owned
      severity: s3
      slo_alert: 'no'
      user_impacting: 'no'
    expr: >
      gitlab_component_ops:rate_30m{type="monitoring", component="public_dashboards_thanos_query", stage="main",
      monitor="global"} == 0
  - alert: MonitoringServicePublicDashboardsThanosQueryTrafficAbsent
    for: 30m
    annotations:
      title: >-
        The public_dashboards_thanos_query SLI of the monitoring service (`{{ $labels.stage }}` stage)
        has not reported any traffic in the past 30 minutes
      description: |
        Thanos query gathers the data needed to evaluate Prometheus queries from multiple underlying prometheus and thanos instances. This SLI monitors the Thanos query HTTP interface for GitLab's public Thanos instance, which is used by the public Grafana instance. 5xx responses are considered failures.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: monitoring-main/monitoring-overview
      grafana_dashboard_link: >-
        https://dashboards.gitlab.net/d/monitoring-main/monitoring-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: '6'
      grafana_panel_id: '25224'
      grafana_variables: environment,stage
      link1_title: Definition
      link1_url: https://gitlab.com/gitlab-com/runbooks/blob/master/docs/uncategorized/definition-service-ops-rate.md
      promql_template_1: >-
        gitlab_component_ops:rate_5m{environment="$environment", type="$type", stage="$stage", component="$component"}
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: cause
      experimental: 'true'
      feature_category: not_owned
      incident_project: gitlab.com/gitlab-com/gl-infra/production
      product_stage: not_owned
      product_stage_group: not_owned
      severity: s3
      slo_alert: 'no'
      user_impacting: 'no'
    expr: |
      gitlab_component_ops:rate_5m{type="monitoring", component="public_dashboards_thanos_query", stage="main", monitor="global"} offset 1h
      unless
      gitlab_component_ops:rate_5m{type="monitoring", component="public_dashboards_thanos_query", stage="main", monitor="global"}
  - alert: MonitoringServicePublicGrafanaGooglelbErrorSLOViolation
    for: 2m
    annotations:
      title: >-
        The public_grafana_googlelb SLI of the monitoring service (`{{ $labels.stage }}` stage) has an
        error rate violating SLO
      description: |2


        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: monitoring-main/monitoring-overview
      grafana_dashboard_link: >-
        https://dashboards.gitlab.net/d/monitoring-main/monitoring-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: '6'
      grafana_panel_id: '71624'
      grafana_variables: environment,stage
      link1_title: Definition
      link1_url: >-
        https://gitlab.com/gitlab-com/runbooks/blob/master/docs/uncategorized/definition-service-error-rate.md
      promql_template_1: >-
        gitlab_component_errors:ratio_5m{environment="$environment", type="$type", stage="$stage", component="$component"}
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: symptom
      feature_category: not_owned
      pager: pagerduty
      product_stage: not_owned
      product_stage_group: not_owned
      rules_domain: general
      severity: s2
      slo_alert: 'yes'
      user_impacting: 'no'
    expr: |
      (
        (
          gitlab_component_errors:ratio_1h{component="public_grafana_googlelb",monitor="global",type="monitoring"}
          > (14.4 * 0.001000)
        )
        and
        (
          gitlab_component_errors:ratio_5m{component="public_grafana_googlelb",monitor="global",type="monitoring"}
          > (14.4 * 0.001000)
        )
        or
        (
          gitlab_component_errors:ratio_6h{component="public_grafana_googlelb",monitor="global",type="monitoring"}
          > (6 * 0.001000)
        )
        and
        (
          gitlab_component_errors:ratio_30m{component="public_grafana_googlelb",monitor="global",type="monitoring"}
          > (6 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="public_grafana_googlelb",monitor="global",type="monitoring"}) >= 1
      )
  - alert: MonitoringServicePublicGrafanaGooglelbTrafficCessation
    for: 5m
    annotations:
      title: >-
        The public_grafana_googlelb SLI of the monitoring service (`{{ $labels.stage }}` stage) has not
        received any traffic in the past 30 minutes
      description: |2


        This alert signifies that the SLI is reporting a cessation of traffic, but the signal is not absent.
      grafana_dashboard_id: monitoring-main/monitoring-overview
      grafana_dashboard_link: >-
        https://dashboards.gitlab.net/d/monitoring-main/monitoring-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: '6'
      grafana_panel_id: '39112'
      grafana_variables: environment,stage
      link1_title: Definition
      link1_url: https://gitlab.com/gitlab-com/runbooks/blob/master/docs/uncategorized/definition-service-ops-rate.md
      promql_template_1: >-
        gitlab_component_errors:ratio_5m{environment="$environment", type="$type", stage="$stage", component="$component"}
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: cause
      experimental: 'true'
      feature_category: not_owned
      product_stage: not_owned
      product_stage_group: not_owned
      severity: s3
      slo_alert: 'no'
      user_impacting: 'no'
    expr: >
      gitlab_component_ops:rate_30m{type="monitoring", component="public_grafana_googlelb", stage="main",
      monitor="global"} == 0
  - alert: MonitoringServicePublicGrafanaGooglelbTrafficAbsent
    for: 30m
    annotations:
      title: >-
        The public_grafana_googlelb SLI of the monitoring service (`{{ $labels.stage }}` stage) has not
        reported any traffic in the past 30 minutes
      description: |2


        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: monitoring-main/monitoring-overview
      grafana_dashboard_link: >-
        https://dashboards.gitlab.net/d/monitoring-main/monitoring-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: '6'
      grafana_panel_id: '39112'
      grafana_variables: environment,stage
      link1_title: Definition
      link1_url: https://gitlab.com/gitlab-com/runbooks/blob/master/docs/uncategorized/definition-service-ops-rate.md
      promql_template_1: >-
        gitlab_component_ops:rate_5m{environment="$environment", type="$type", stage="$stage", component="$component"}
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: cause
      experimental: 'true'
      feature_category: not_owned
      product_stage: not_owned
      product_stage_group: not_owned
      severity: s3
      slo_alert: 'no'
      user_impacting: 'no'
    expr: |
      gitlab_component_ops:rate_5m{type="monitoring", component="public_grafana_googlelb", stage="main", monitor="global"} offset 1h
      unless
      gitlab_component_ops:rate_5m{type="monitoring", component="public_grafana_googlelb", stage="main", monitor="global"}
  - alert: MonitoringServiceRuleEvaluationErrorSLOViolation
    for: 2m
    annotations:
      title: >-
        The rule_evaluation SLI of the monitoring service (`{{ $labels.stage }}` stage) has an error rate
        violating SLO
      description: |
        This SLI monitors Prometheus recording rule evaluations. Recording rule evalution failures are considered to be service failures.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: monitoring-main/monitoring-overview
      grafana_dashboard_link: >-
        https://dashboards.gitlab.net/d/monitoring-main/monitoring-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: '6'
      grafana_panel_id: '56936'
      grafana_variables: environment,stage
      link1_title: Definition
      link1_url: >-
        https://gitlab.com/gitlab-com/runbooks/blob/master/docs/uncategorized/definition-service-error-rate.md
      promql_template_1: >-
        gitlab_component_errors:ratio_5m{environment="$environment", type="$type", stage="$stage", component="$component"}
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: symptom
      feature_category: not_owned
      incident_project: gitlab.com/gitlab-com/gl-infra/production
      pager: pagerduty
      product_stage: not_owned
      product_stage_group: not_owned
      rules_domain: general
      severity: s2
      slo_alert: 'yes'
      user_impacting: 'yes'
    expr: |
      (
        (
          gitlab_component_errors:ratio_1h{component="rule_evaluation",monitor="global",type="monitoring"}
          > (14.4 * 0.001000)
        )
        and
        (
          gitlab_component_errors:ratio_5m{component="rule_evaluation",monitor="global",type="monitoring"}
          > (14.4 * 0.001000)
        )
        or
        (
          gitlab_component_errors:ratio_6h{component="rule_evaluation",monitor="global",type="monitoring"}
          > (6 * 0.001000)
        )
        and
        (
          gitlab_component_errors:ratio_30m{component="rule_evaluation",monitor="global",type="monitoring"}
          > (6 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="rule_evaluation",monitor="global",type="monitoring"}) >= 1
      )
  - alert: MonitoringServiceRuleEvaluationTrafficCessation
    for: 5m
    annotations:
      title: >-
        The rule_evaluation SLI of the monitoring service (`{{ $labels.stage }}` stage) has not received
        any traffic in the past 30 minutes
      description: |
        This SLI monitors Prometheus recording rule evaluations. Recording rule evalution failures are considered to be service failures.

        This alert signifies that the SLI is reporting a cessation of traffic, but the signal is not absent.
      grafana_dashboard_id: monitoring-main/monitoring-overview
      grafana_dashboard_link: >-
        https://dashboards.gitlab.net/d/monitoring-main/monitoring-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: '6'
      grafana_panel_id: '62184'
      grafana_variables: environment,stage
      link1_title: Definition
      link1_url: https://gitlab.com/gitlab-com/runbooks/blob/master/docs/uncategorized/definition-service-ops-rate.md
      promql_template_1: >-
        gitlab_component_errors:ratio_5m{environment="$environment", type="$type", stage="$stage", component="$component"}
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: cause
      experimental: 'true'
      feature_category: not_owned
      incident_project: gitlab.com/gitlab-com/gl-infra/production
      product_stage: not_owned
      product_stage_group: not_owned
      severity: s3
      slo_alert: 'no'
      user_impacting: 'yes'
    expr: >
      gitlab_component_ops:rate_30m{type="monitoring", component="rule_evaluation", stage="main", monitor="global"}
      == 0
  - alert: MonitoringServiceRuleEvaluationTrafficAbsent
    for: 30m
    annotations:
      title: >-
        The rule_evaluation SLI of the monitoring service (`{{ $labels.stage }}` stage) has not reported
        any traffic in the past 30 minutes
      description: |
        This SLI monitors Prometheus recording rule evaluations. Recording rule evalution failures are considered to be service failures.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: monitoring-main/monitoring-overview
      grafana_dashboard_link: >-
        https://dashboards.gitlab.net/d/monitoring-main/monitoring-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: '6'
      grafana_panel_id: '62184'
      grafana_variables: environment,stage
      link1_title: Definition
      link1_url: https://gitlab.com/gitlab-com/runbooks/blob/master/docs/uncategorized/definition-service-ops-rate.md
      promql_template_1: >-
        gitlab_component_ops:rate_5m{environment="$environment", type="$type", stage="$stage", component="$component"}
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: cause
      experimental: 'true'
      feature_category: not_owned
      incident_project: gitlab.com/gitlab-com/gl-infra/production
      product_stage: not_owned
      product_stage_group: not_owned
      severity: s3
      slo_alert: 'no'
      user_impacting: 'yes'
    expr: |
      gitlab_component_ops:rate_5m{type="monitoring", component="rule_evaluation", stage="main", monitor="global"} offset 1h
      unless
      gitlab_component_ops:rate_5m{type="monitoring", component="rule_evaluation", stage="main", monitor="global"}
  - alert: MonitoringServiceThanosCompactorErrorSLOViolation
    for: 2m
    annotations:
      title: >-
        The thanos_compactor SLI of the monitoring service (`{{ $labels.stage }}` stage) has an error
        rate violating SLO
      description: |
        Thanos compactor is responsible for compaction of Prometheus series data into blocks, which are stored in GCS buckets. It also handles downsampling. This SLI monitors compaction operations and compaction failures.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: monitoring-main/monitoring-overview
      grafana_dashboard_link: >-
        https://dashboards.gitlab.net/d/monitoring-main/monitoring-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: '6'
      grafana_panel_id: '23048'
      grafana_variables: environment,stage
      link1_title: Definition
      link1_url: >-
        https://gitlab.com/gitlab-com/runbooks/blob/master/docs/uncategorized/definition-service-error-rate.md
      promql_template_1: >-
        gitlab_component_errors:ratio_5m{environment="$environment", type="$type", stage="$stage", component="$component"}
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: symptom
      feature_category: not_owned
      incident_project: gitlab.com/gitlab-com/gl-infra/production
      pager: pagerduty
      product_stage: not_owned
      product_stage_group: not_owned
      rules_domain: general
      severity: s2
      slo_alert: 'yes'
      user_impacting: 'no'
    expr: |
      (
        (
          gitlab_component_errors:ratio_1h{component="thanos_compactor",monitor="global",type="monitoring"}
          > (14.4 * 0.001000)
        )
        and
        (
          gitlab_component_errors:ratio_5m{component="thanos_compactor",monitor="global",type="monitoring"}
          > (14.4 * 0.001000)
        )
        or
        (
          gitlab_component_errors:ratio_6h{component="thanos_compactor",monitor="global",type="monitoring"}
          > (6 * 0.001000)
        )
        and
        (
          gitlab_component_errors:ratio_30m{component="thanos_compactor",monitor="global",type="monitoring"}
          > (6 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="thanos_compactor",monitor="global",type="monitoring"}) >= 1
      )
  - alert: MonitoringServiceThanosCompactorTrafficCessation
    for: 5m
    annotations:
      title: >-
        The thanos_compactor SLI of the monitoring service (`{{ $labels.stage }}` stage) has not received
        any traffic in the past 30 minutes
      description: |
        Thanos compactor is responsible for compaction of Prometheus series data into blocks, which are stored in GCS buckets. It also handles downsampling. This SLI monitors compaction operations and compaction failures.

        This alert signifies that the SLI is reporting a cessation of traffic, but the signal is not absent.
      grafana_dashboard_id: monitoring-main/monitoring-overview
      grafana_dashboard_link: >-
        https://dashboards.gitlab.net/d/monitoring-main/monitoring-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: '6'
      grafana_panel_id: '52136'
      grafana_variables: environment,stage
      link1_title: Definition
      link1_url: https://gitlab.com/gitlab-com/runbooks/blob/master/docs/uncategorized/definition-service-ops-rate.md
      promql_template_1: >-
        gitlab_component_errors:ratio_5m{environment="$environment", type="$type", stage="$stage", component="$component"}
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: cause
      experimental: 'true'
      feature_category: not_owned
      incident_project: gitlab.com/gitlab-com/gl-infra/production
      product_stage: not_owned
      product_stage_group: not_owned
      severity: s3
      slo_alert: 'no'
      user_impacting: 'no'
    expr: >
      gitlab_component_ops:rate_30m{type="monitoring", component="thanos_compactor", stage="main", monitor="global"}
      == 0
  - alert: MonitoringServiceThanosCompactorTrafficAbsent
    for: 30m
    annotations:
      title: >-
        The thanos_compactor SLI of the monitoring service (`{{ $labels.stage }}` stage) has not reported
        any traffic in the past 30 minutes
      description: |
        Thanos compactor is responsible for compaction of Prometheus series data into blocks, which are stored in GCS buckets. It also handles downsampling. This SLI monitors compaction operations and compaction failures.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: monitoring-main/monitoring-overview
      grafana_dashboard_link: >-
        https://dashboards.gitlab.net/d/monitoring-main/monitoring-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: '6'
      grafana_panel_id: '52136'
      grafana_variables: environment,stage
      link1_title: Definition
      link1_url: https://gitlab.com/gitlab-com/runbooks/blob/master/docs/uncategorized/definition-service-ops-rate.md
      promql_template_1: >-
        gitlab_component_ops:rate_5m{environment="$environment", type="$type", stage="$stage", component="$component"}
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: cause
      experimental: 'true'
      feature_category: not_owned
      incident_project: gitlab.com/gitlab-com/gl-infra/production
      product_stage: not_owned
      product_stage_group: not_owned
      severity: s3
      slo_alert: 'no'
      user_impacting: 'no'
    expr: |
      gitlab_component_ops:rate_5m{type="monitoring", component="thanos_compactor", stage="main", monitor="global"} offset 1h
      unless
      gitlab_component_ops:rate_5m{type="monitoring", component="thanos_compactor", stage="main", monitor="global"}
  - alert: MonitoringServiceThanosQueryApdexSLOViolation
    for: 2m
    annotations:
      title: >-
        The thanos_query SLI of the monitoring service (`{{ $labels.stage }}` stage) has an apdex violating
        SLO
      description: |
        Thanos query gathers the data needed to evaluate Prometheus queries from multiple underlying prometheus and thanos instances. This SLI monitors the Thanos query HTTP interface. 5xx responses are considered failures.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: monitoring-main/monitoring-overview
      grafana_dashboard_link: >-
        https://dashboards.gitlab.net/d/monitoring-main/monitoring-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: '6'
      grafana_panel_id: '34056'
      grafana_variables: environment,stage
      promql_template_1: >-
        gitlab_component_apdex:ratio_1h{environment="$environment", type="$type", stage="$stage", component="$component"}
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: symptom
      feature_category: not_owned
      incident_project: gitlab.com/gitlab-com/gl-infra/production
      pager: pagerduty
      product_stage: not_owned
      product_stage_group: not_owned
      rules_domain: general
      severity: s2
      slo_alert: 'yes'
      user_impacting: 'no'
    expr: |
      (
        (
          gitlab_component_apdex:ratio_1h{component="thanos_query",monitor="global",type="monitoring"}
          < (1 - 14.4 * 0.001000)
        )
        and
        (
          gitlab_component_apdex:ratio_5m{component="thanos_query",monitor="global",type="monitoring"}
          < (1 - 14.4 * 0.001000)
        )
        or
        (
          gitlab_component_apdex:ratio_6h{component="thanos_query",monitor="global",type="monitoring"}
          < (1 - 6 * 0.001000)
        )
        and
        (
          gitlab_component_apdex:ratio_30m{component="thanos_query",monitor="global",type="monitoring"}
          < (1 - 6 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="thanos_query",monitor="global",type="monitoring"}) >= 1
      )
  - alert: MonitoringServiceThanosQueryErrorSLOViolation
    for: 2m
    annotations:
      title: >-
        The thanos_query SLI of the monitoring service (`{{ $labels.stage }}` stage) has an error rate
        violating SLO
      description: |
        Thanos query gathers the data needed to evaluate Prometheus queries from multiple underlying prometheus and thanos instances. This SLI monitors the Thanos query HTTP interface. 5xx responses are considered failures.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: monitoring-main/monitoring-overview
      grafana_dashboard_link: >-
        https://dashboards.gitlab.net/d/monitoring-main/monitoring-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: '6'
      grafana_panel_id: '52072'
      grafana_variables: environment,stage
      link1_title: Definition
      link1_url: >-
        https://gitlab.com/gitlab-com/runbooks/blob/master/docs/uncategorized/definition-service-error-rate.md
      promql_template_1: >-
        gitlab_component_errors:ratio_5m{environment="$environment", type="$type", stage="$stage", component="$component"}
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: symptom
      feature_category: not_owned
      incident_project: gitlab.com/gitlab-com/gl-infra/production
      pager: pagerduty
      product_stage: not_owned
      product_stage_group: not_owned
      rules_domain: general
      severity: s2
      slo_alert: 'yes'
      user_impacting: 'no'
    expr: |
      (
        (
          gitlab_component_errors:ratio_1h{component="thanos_query",monitor="global",type="monitoring"}
          > (14.4 * 0.001000)
        )
        and
        (
          gitlab_component_errors:ratio_5m{component="thanos_query",monitor="global",type="monitoring"}
          > (14.4 * 0.001000)
        )
        or
        (
          gitlab_component_errors:ratio_6h{component="thanos_query",monitor="global",type="monitoring"}
          > (6 * 0.001000)
        )
        and
        (
          gitlab_component_errors:ratio_30m{component="thanos_query",monitor="global",type="monitoring"}
          > (6 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="thanos_query",monitor="global",type="monitoring"}) >= 1
      )
  - alert: MonitoringServiceThanosQueryTrafficCessation
    for: 5m
    annotations:
      title: >-
        The thanos_query SLI of the monitoring service (`{{ $labels.stage }}` stage) has not received
        any traffic in the past 30 minutes
      description: |
        Thanos query gathers the data needed to evaluate Prometheus queries from multiple underlying prometheus and thanos instances. This SLI monitors the Thanos query HTTP interface. 5xx responses are considered failures.

        This alert signifies that the SLI is reporting a cessation of traffic, but the signal is not absent.
      grafana_dashboard_id: monitoring-main/monitoring-overview
      grafana_dashboard_link: >-
        https://dashboards.gitlab.net/d/monitoring-main/monitoring-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: '6'
      grafana_panel_id: '97256'
      grafana_variables: environment,stage
      link1_title: Definition
      link1_url: https://gitlab.com/gitlab-com/runbooks/blob/master/docs/uncategorized/definition-service-ops-rate.md
      promql_template_1: >-
        gitlab_component_errors:ratio_5m{environment="$environment", type="$type", stage="$stage", component="$component"}
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: cause
      experimental: 'true'
      feature_category: not_owned
      incident_project: gitlab.com/gitlab-com/gl-infra/production
      product_stage: not_owned
      product_stage_group: not_owned
      severity: s3
      slo_alert: 'no'
      user_impacting: 'no'
    expr: >
      gitlab_component_ops:rate_30m{type="monitoring", component="thanos_query", stage="main", monitor="global"}
      == 0
  - alert: MonitoringServiceThanosQueryTrafficAbsent
    for: 30m
    annotations:
      title: >-
        The thanos_query SLI of the monitoring service (`{{ $labels.stage }}` stage) has not reported
        any traffic in the past 30 minutes
      description: |
        Thanos query gathers the data needed to evaluate Prometheus queries from multiple underlying prometheus and thanos instances. This SLI monitors the Thanos query HTTP interface. 5xx responses are considered failures.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: monitoring-main/monitoring-overview
      grafana_dashboard_link: >-
        https://dashboards.gitlab.net/d/monitoring-main/monitoring-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: '6'
      grafana_panel_id: '97256'
      grafana_variables: environment,stage
      link1_title: Definition
      link1_url: https://gitlab.com/gitlab-com/runbooks/blob/master/docs/uncategorized/definition-service-ops-rate.md
      promql_template_1: >-
        gitlab_component_ops:rate_5m{environment="$environment", type="$type", stage="$stage", component="$component"}
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: cause
      experimental: 'true'
      feature_category: not_owned
      incident_project: gitlab.com/gitlab-com/gl-infra/production
      product_stage: not_owned
      product_stage_group: not_owned
      severity: s3
      slo_alert: 'no'
      user_impacting: 'no'
    expr: |
      gitlab_component_ops:rate_5m{type="monitoring", component="thanos_query", stage="main", monitor="global"} offset 1h
      unless
      gitlab_component_ops:rate_5m{type="monitoring", component="thanos_query", stage="main", monitor="global"}
  - alert: MonitoringServiceThanosRuleAlertSenderErrorSLOViolation
    for: 2m
    annotations:
      title: >-
        The thanos_rule_alert_sender SLI of the monitoring service (`{{ $labels.stage }}` stage) has an
        error rate violating SLO
      description: |
        This SLI monitors alerts generated by Thanos Ruler. Alert delivery failure is considered a service-level failure.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: monitoring-main/monitoring-overview
      grafana_dashboard_link: >-
        https://dashboards.gitlab.net/d/monitoring-main/monitoring-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: '6'
      grafana_panel_id: '15720'
      grafana_variables: environment,stage
      link1_title: Definition
      link1_url: >-
        https://gitlab.com/gitlab-com/runbooks/blob/master/docs/uncategorized/definition-service-error-rate.md
      promql_template_1: >-
        gitlab_component_errors:ratio_5m{environment="$environment", type="$type", stage="$stage", component="$component"}
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: symptom
      feature_category: not_owned
      incident_project: gitlab.com/gitlab-com/gl-infra/production
      pager: pagerduty
      product_stage: not_owned
      product_stage_group: not_owned
      rules_domain: general
      severity: s2
      slo_alert: 'yes'
      user_impacting: 'yes'
    expr: |
      (
        (
          gitlab_component_errors:ratio_1h{component="thanos_rule_alert_sender",monitor="global",type="monitoring"}
          > (14.4 * 0.001000)
        )
        and
        (
          gitlab_component_errors:ratio_5m{component="thanos_rule_alert_sender",monitor="global",type="monitoring"}
          > (14.4 * 0.001000)
        )
        or
        (
          gitlab_component_errors:ratio_6h{component="thanos_rule_alert_sender",monitor="global",type="monitoring"}
          > (6 * 0.001000)
        )
        and
        (
          gitlab_component_errors:ratio_30m{component="thanos_rule_alert_sender",monitor="global",type="monitoring"}
          > (6 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="thanos_rule_alert_sender",monitor="global",type="monitoring"}) >= 1
      )
  - alert: MonitoringServiceThanosRuleAlertSenderTrafficCessation
    for: 5m
    annotations:
      title: >-
        The thanos_rule_alert_sender SLI of the monitoring service (`{{ $labels.stage }}` stage) has not
        received any traffic in the past 30 minutes
      description: |
        This SLI monitors alerts generated by Thanos Ruler. Alert delivery failure is considered a service-level failure.

        This alert signifies that the SLI is reporting a cessation of traffic, but the signal is not absent.
      grafana_dashboard_id: monitoring-main/monitoring-overview
      grafana_dashboard_link: >-
        https://dashboards.gitlab.net/d/monitoring-main/monitoring-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: '6'
      grafana_panel_id: '86760'
      grafana_variables: environment,stage
      link1_title: Definition
      link1_url: https://gitlab.com/gitlab-com/runbooks/blob/master/docs/uncategorized/definition-service-ops-rate.md
      promql_template_1: >-
        gitlab_component_errors:ratio_5m{environment="$environment", type="$type", stage="$stage", component="$component"}
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: cause
      experimental: 'true'
      feature_category: not_owned
      incident_project: gitlab.com/gitlab-com/gl-infra/production
      product_stage: not_owned
      product_stage_group: not_owned
      severity: s3
      slo_alert: 'no'
      user_impacting: 'yes'
    expr: >
      gitlab_component_ops:rate_30m{type="monitoring", component="thanos_rule_alert_sender", stage="main",
      monitor="global"} == 0
  - alert: MonitoringServiceThanosRuleAlertSenderTrafficAbsent
    for: 30m
    annotations:
      title: >-
        The thanos_rule_alert_sender SLI of the monitoring service (`{{ $labels.stage }}` stage) has not
        reported any traffic in the past 30 minutes
      description: |
        This SLI monitors alerts generated by Thanos Ruler. Alert delivery failure is considered a service-level failure.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: monitoring-main/monitoring-overview
      grafana_dashboard_link: >-
        https://dashboards.gitlab.net/d/monitoring-main/monitoring-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: '6'
      grafana_panel_id: '86760'
      grafana_variables: environment,stage
      link1_title: Definition
      link1_url: https://gitlab.com/gitlab-com/runbooks/blob/master/docs/uncategorized/definition-service-ops-rate.md
      promql_template_1: >-
        gitlab_component_ops:rate_5m{environment="$environment", type="$type", stage="$stage", component="$component"}
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: cause
      experimental: 'true'
      feature_category: not_owned
      incident_project: gitlab.com/gitlab-com/gl-infra/production
      product_stage: not_owned
      product_stage_group: not_owned
      severity: s3
      slo_alert: 'no'
      user_impacting: 'yes'
    expr: |
      gitlab_component_ops:rate_5m{type="monitoring", component="thanos_rule_alert_sender", stage="main", monitor="global"} offset 1h
      unless
      gitlab_component_ops:rate_5m{type="monitoring", component="thanos_rule_alert_sender", stage="main", monitor="global"}
  - alert: MonitoringServiceThanosStoreApdexSLOViolation
    for: 2m
    annotations:
      title: >-
        The thanos_store SLI of the monitoring service (`{{ $labels.stage }}` stage) has an apdex violating
        SLO
      description: |
        Thanos store will respond to Thanos Query (and other) requests for historical data. This historical data is kept in GCS buckets. This SLI monitors the Thanos StoreAPI GRPC endpoint. GRPC error responses are considered to be service-level failures.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: monitoring-main/monitoring-overview
      grafana_dashboard_link: >-
        https://dashboards.gitlab.net/d/monitoring-main/monitoring-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: '6'
      grafana_panel_id: '29128'
      grafana_variables: environment,stage
      promql_template_1: >-
        gitlab_component_apdex:ratio_1h{environment="$environment", type="$type", stage="$stage", component="$component"}
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: symptom
      feature_category: not_owned
      incident_project: gitlab.com/gitlab-com/gl-infra/production
      pager: pagerduty
      product_stage: not_owned
      product_stage_group: not_owned
      rules_domain: general
      severity: s2
      slo_alert: 'yes'
      user_impacting: 'no'
    expr: |
      (
        (
          gitlab_component_apdex:ratio_1h{component="thanos_store",monitor="global",type="monitoring"}
          < (1 - 14.4 * 0.001000)
        )
        and
        (
          gitlab_component_apdex:ratio_5m{component="thanos_store",monitor="global",type="monitoring"}
          < (1 - 14.4 * 0.001000)
        )
        or
        (
          gitlab_component_apdex:ratio_6h{component="thanos_store",monitor="global",type="monitoring"}
          < (1 - 6 * 0.001000)
        )
        and
        (
          gitlab_component_apdex:ratio_30m{component="thanos_store",monitor="global",type="monitoring"}
          < (1 - 6 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="thanos_store",monitor="global",type="monitoring"}) >= 1
      )
  - alert: MonitoringServiceThanosStoreErrorSLOViolation
    for: 2m
    annotations:
      title: >-
        The thanos_store SLI of the monitoring service (`{{ $labels.stage }}` stage) has an error rate
        violating SLO
      description: |
        Thanos store will respond to Thanos Query (and other) requests for historical data. This historical data is kept in GCS buckets. This SLI monitors the Thanos StoreAPI GRPC endpoint. GRPC error responses are considered to be service-level failures.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: monitoring-main/monitoring-overview
      grafana_dashboard_link: >-
        https://dashboards.gitlab.net/d/monitoring-main/monitoring-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: '6'
      grafana_panel_id: '33352'
      grafana_variables: environment,stage
      link1_title: Definition
      link1_url: >-
        https://gitlab.com/gitlab-com/runbooks/blob/master/docs/uncategorized/definition-service-error-rate.md
      promql_template_1: >-
        gitlab_component_errors:ratio_5m{environment="$environment", type="$type", stage="$stage", component="$component"}
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: symptom
      feature_category: not_owned
      incident_project: gitlab.com/gitlab-com/gl-infra/production
      pager: pagerduty
      product_stage: not_owned
      product_stage_group: not_owned
      rules_domain: general
      severity: s2
      slo_alert: 'yes'
      user_impacting: 'no'
    expr: |
      (
        (
          gitlab_component_errors:ratio_1h{component="thanos_store",monitor="global",type="monitoring"}
          > (14.4 * 0.001000)
        )
        and
        (
          gitlab_component_errors:ratio_5m{component="thanos_store",monitor="global",type="monitoring"}
          > (14.4 * 0.001000)
        )
        or
        (
          gitlab_component_errors:ratio_6h{component="thanos_store",monitor="global",type="monitoring"}
          > (6 * 0.001000)
        )
        and
        (
          gitlab_component_errors:ratio_30m{component="thanos_store",monitor="global",type="monitoring"}
          > (6 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="thanos_store",monitor="global",type="monitoring"}) >= 1
      )
  - alert: MonitoringServiceThanosStoreTrafficCessation
    for: 5m
    annotations:
      title: >-
        The thanos_store SLI of the monitoring service (`{{ $labels.stage }}` stage) has not received
        any traffic in the past 30 minutes
      description: |
        Thanos store will respond to Thanos Query (and other) requests for historical data. This historical data is kept in GCS buckets. This SLI monitors the Thanos StoreAPI GRPC endpoint. GRPC error responses are considered to be service-level failures.

        This alert signifies that the SLI is reporting a cessation of traffic, but the signal is not absent.
      grafana_dashboard_id: monitoring-main/monitoring-overview
      grafana_dashboard_link: >-
        https://dashboards.gitlab.net/d/monitoring-main/monitoring-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: '6'
      grafana_panel_id: '31560'
      grafana_variables: environment,stage
      link1_title: Definition
      link1_url: https://gitlab.com/gitlab-com/runbooks/blob/master/docs/uncategorized/definition-service-ops-rate.md
      promql_template_1: >-
        gitlab_component_errors:ratio_5m{environment="$environment", type="$type", stage="$stage", component="$component"}
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: cause
      experimental: 'true'
      feature_category: not_owned
      incident_project: gitlab.com/gitlab-com/gl-infra/production
      product_stage: not_owned
      product_stage_group: not_owned
      severity: s3
      slo_alert: 'no'
      user_impacting: 'no'
    expr: >
      gitlab_component_ops:rate_30m{type="monitoring", component="thanos_store", stage="main", monitor="global"}
      == 0
  - alert: MonitoringServiceThanosStoreTrafficAbsent
    for: 30m
    annotations:
      title: >-
        The thanos_store SLI of the monitoring service (`{{ $labels.stage }}` stage) has not reported
        any traffic in the past 30 minutes
      description: |
        Thanos store will respond to Thanos Query (and other) requests for historical data. This historical data is kept in GCS buckets. This SLI monitors the Thanos StoreAPI GRPC endpoint. GRPC error responses are considered to be service-level failures.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: monitoring-main/monitoring-overview
      grafana_dashboard_link: >-
        https://dashboards.gitlab.net/d/monitoring-main/monitoring-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: '6'
      grafana_panel_id: '31560'
      grafana_variables: environment,stage
      link1_title: Definition
      link1_url: https://gitlab.com/gitlab-com/runbooks/blob/master/docs/uncategorized/definition-service-ops-rate.md
      promql_template_1: >-
        gitlab_component_ops:rate_5m{environment="$environment", type="$type", stage="$stage", component="$component"}
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: cause
      experimental: 'true'
      feature_category: not_owned
      incident_project: gitlab.com/gitlab-com/gl-infra/production
      product_stage: not_owned
      product_stage_group: not_owned
      severity: s3
      slo_alert: 'no'
      user_impacting: 'no'
    expr: |
      gitlab_component_ops:rate_5m{type="monitoring", component="thanos_store", stage="main", monitor="global"} offset 1h
      unless
      gitlab_component_ops:rate_5m{type="monitoring", component="thanos_store", stage="main", monitor="global"}
  - alert: MonitoringServiceTricksterApdexSLOViolation
    for: 2m
    annotations:
      title: The trickster SLI of the monitoring service (`{{ $labels.stage }}` stage) has an apdex violating
        SLO
      description: |
        This SLI monitors the Trickster HTTP interface.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: monitoring-main/monitoring-overview
      grafana_dashboard_link: >-
        https://dashboards.gitlab.net/d/monitoring-main/monitoring-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: '6'
      grafana_panel_id: '79400'
      grafana_variables: environment,stage
      promql_template_1: >-
        gitlab_component_apdex:ratio_1h{environment="$environment", type="$type", stage="$stage", component="$component"}
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: symptom
      feature_category: not_owned
      incident_project: gitlab.com/gitlab-com/gl-infra/production
      pager: pagerduty
      product_stage: not_owned
      product_stage_group: not_owned
      rules_domain: general
      severity: s2
      slo_alert: 'yes'
      user_impacting: 'no'
    expr: |
      (
        (
          gitlab_component_apdex:ratio_1h{component="trickster",monitor="global",type="monitoring"}
          < (1 - 14.4 * 0.001000)
        )
        and
        (
          gitlab_component_apdex:ratio_5m{component="trickster",monitor="global",type="monitoring"}
          < (1 - 14.4 * 0.001000)
        )
        or
        (
          gitlab_component_apdex:ratio_6h{component="trickster",monitor="global",type="monitoring"}
          < (1 - 6 * 0.001000)
        )
        and
        (
          gitlab_component_apdex:ratio_30m{component="trickster",monitor="global",type="monitoring"}
          < (1 - 6 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="trickster",monitor="global",type="monitoring"}) >= 1
      )
  - alert: MonitoringServiceTricksterErrorSLOViolation
    for: 2m
    annotations:
      title: >-
        The trickster SLI of the monitoring service (`{{ $labels.stage }}` stage) has an error rate violating
        SLO
      description: |
        This SLI monitors the Trickster HTTP interface.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: monitoring-main/monitoring-overview
      grafana_dashboard_link: >-
        https://dashboards.gitlab.net/d/monitoring-main/monitoring-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: '6'
      grafana_panel_id: '50280'
      grafana_variables: environment,stage
      link1_title: Definition
      link1_url: >-
        https://gitlab.com/gitlab-com/runbooks/blob/master/docs/uncategorized/definition-service-error-rate.md
      promql_template_1: >-
        gitlab_component_errors:ratio_5m{environment="$environment", type="$type", stage="$stage", component="$component"}
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: symptom
      feature_category: not_owned
      incident_project: gitlab.com/gitlab-com/gl-infra/production
      pager: pagerduty
      product_stage: not_owned
      product_stage_group: not_owned
      rules_domain: general
      severity: s2
      slo_alert: 'yes'
      user_impacting: 'no'
    expr: |
      (
        (
          gitlab_component_errors:ratio_1h{component="trickster",monitor="global",type="monitoring"}
          > (14.4 * 0.001000)
        )
        and
        (
          gitlab_component_errors:ratio_5m{component="trickster",monitor="global",type="monitoring"}
          > (14.4 * 0.001000)
        )
        or
        (
          gitlab_component_errors:ratio_6h{component="trickster",monitor="global",type="monitoring"}
          > (6 * 0.001000)
        )
        and
        (
          gitlab_component_errors:ratio_30m{component="trickster",monitor="global",type="monitoring"}
          > (6 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="trickster",monitor="global",type="monitoring"}) >= 1
      )
  - alert: MonitoringServiceTricksterTrafficCessation
    for: 5m
    annotations:
      title: >-
        The trickster SLI of the monitoring service (`{{ $labels.stage }}` stage) has not received any
        traffic in the past 30 minutes
      description: |
        This SLI monitors the Trickster HTTP interface.

        This alert signifies that the SLI is reporting a cessation of traffic, but the signal is not absent.
      grafana_dashboard_id: monitoring-main/monitoring-overview
      grafana_dashboard_link: >-
        https://dashboards.gitlab.net/d/monitoring-main/monitoring-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: '6'
      grafana_panel_id: '18792'
      grafana_variables: environment,stage
      link1_title: Definition
      link1_url: https://gitlab.com/gitlab-com/runbooks/blob/master/docs/uncategorized/definition-service-ops-rate.md
      promql_template_1: >-
        gitlab_component_errors:ratio_5m{environment="$environment", type="$type", stage="$stage", component="$component"}
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: cause
      experimental: 'true'
      feature_category: not_owned
      incident_project: gitlab.com/gitlab-com/gl-infra/production
      product_stage: not_owned
      product_stage_group: not_owned
      severity: s3
      slo_alert: 'no'
      user_impacting: 'no'
    expr: >
      gitlab_component_ops:rate_30m{type="monitoring", component="trickster", stage="main", monitor="global"}
      == 0
  - alert: MonitoringServiceTricksterTrafficAbsent
    for: 30m
    annotations:
      title: >-
        The trickster SLI of the monitoring service (`{{ $labels.stage }}` stage) has not reported any
        traffic in the past 30 minutes
      description: |
        This SLI monitors the Trickster HTTP interface.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: monitoring-main/monitoring-overview
      grafana_dashboard_link: >-
        https://dashboards.gitlab.net/d/monitoring-main/monitoring-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: '6'
      grafana_panel_id: '18792'
      grafana_variables: environment,stage
      link1_title: Definition
      link1_url: https://gitlab.com/gitlab-com/runbooks/blob/master/docs/uncategorized/definition-service-ops-rate.md
      promql_template_1: >-
        gitlab_component_ops:rate_5m{environment="$environment", type="$type", stage="$stage", component="$component"}
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: cause
      experimental: 'true'
      feature_category: not_owned
      incident_project: gitlab.com/gitlab-com/gl-infra/production
      product_stage: not_owned
      product_stage_group: not_owned
      severity: s3
      slo_alert: 'no'
      user_impacting: 'no'
    expr: |
      gitlab_component_ops:rate_5m{type="monitoring", component="trickster", stage="main", monitor="global"} offset 1h
      unless
      gitlab_component_ops:rate_5m{type="monitoring", component="trickster", stage="main", monitor="global"}
