# WARNING. DO NOT EDIT THIS FILE BY HAND. USE ./thanos-rules-jsonnet/service-component-alerts.jsonnet TO GENERATE IT
# YOUR CHANGES WILL BE OVERRIDDEN
groups:
- name: 'Service Component Alerts: camoproxy'
  interval: 1m
  partial_response_strategy: warn
  rules:
  - alert: component_error_ratio_burn_rate_slo_out_of_bounds_upper
    for: 2m
    annotations:
      title: >-
        The loadbalancer SLI of the camoproxy service (`{{ $labels.stage }}` stage) has an error rate
        violating SLO
      description: |
        Measures aggregated HTTP request traffic through the HAProxy. 5xx responses are considered to be failures.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: camoproxy-main/camoproxy-overview
      grafana_dashboard_link: >-
        https://dashboards.gitlab.net/d/camoproxy-main/camoproxy-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: '6'
      grafana_panel_id: '51400'
      grafana_variables: environment,stage
      link1_title: Definition
      link1_url: >-
        https://gitlab.com/gitlab-com/runbooks/blob/master/docs/uncategorized/definition-service-error-rate.md
      promql_template_1: >-
        gitlab_component_errors:ratio_5m{environment="$environment", type="$type", stage="$stage", component="$component"}
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: symptom
      feature_category: not_owned
      pager: pagerduty
      product_stage: not_owned
      product_stage_group: not_owned
      rules_domain: general
      severity: s2
      slo_alert: 'yes'
    expr: |
      (
        (
          gitlab_component_errors:ratio_1h{component="loadbalancer",monitor="global",type="camoproxy"}
          > (14.4 * 0.005000)
        )
        and
        (
          gitlab_component_errors:ratio_5m{component="loadbalancer",monitor="global",type="camoproxy"}
          > (14.4 * 0.005000)
        )
        or
        (
          gitlab_component_errors:ratio_6h{component="loadbalancer",monitor="global",type="camoproxy"}
          > (6 * 0.005000)
        )
        and
        (
          gitlab_component_errors:ratio_30m{component="loadbalancer",monitor="global",type="camoproxy"}
          > (6 * 0.005000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="loadbalancer",monitor="global",type="camoproxy"}) >= 1
      )
  - alert: component_apdex_ratio_burn_rate_slo_out_of_bounds_lower
    for: 2m
    annotations:
      title: The server SLI of the camoproxy service (`{{ $labels.stage }}` stage) has an apdex violating
        SLO
      description: |
        This SLI monitors the camoproxy server via its HTTP interface. 5xx responses are considered to be failures. Note that this SLI is highly dependent on upstream proxy targets, not under the control of GitLab. We are unable to distinguish problems in the proxy from upstream problems. This should be taken into account for this SLI.

        Currently the apdex value is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: camoproxy-main/camoproxy-overview
      grafana_dashboard_link: >-
        https://dashboards.gitlab.net/d/camoproxy-main/camoproxy-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: '6'
      grafana_panel_id: '35848'
      grafana_variables: environment,stage
      promql_template_1: >-
        gitlab_component_apdex:ratio_1h{environment="$environment", type="$type", stage="$stage", component="$component"}
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: symptom
      feature_category: not_owned
      pager: pagerduty
      product_stage: not_owned
      product_stage_group: not_owned
      rules_domain: general
      severity: s2
      slo_alert: 'yes'
    expr: |
      (
        (
          gitlab_component_apdex:ratio_1h{component="server",monitor="global",type="camoproxy"}
          < (1 - 14.4 * 0.001000)
        )
        and
        (
          gitlab_component_apdex:ratio_5m{component="server",monitor="global",type="camoproxy"}
          < (1 - 14.4 * 0.001000)
        )
        or
        (
          gitlab_component_apdex:ratio_6h{component="server",monitor="global",type="camoproxy"}
          < (1 - 6 * 0.001000)
        )
        and
        (
          gitlab_component_apdex:ratio_30m{component="server",monitor="global",type="camoproxy"}
          < (1 - 6 * 0.001000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="server",monitor="global",type="camoproxy"}) >= 1
      )
  - alert: component_error_ratio_burn_rate_slo_out_of_bounds_upper
    for: 2m
    annotations:
      title: >-
        The server SLI of the camoproxy service (`{{ $labels.stage }}` stage) has an error rate violating
        SLO
      description: |
        This SLI monitors the camoproxy server via its HTTP interface. 5xx responses are considered to be failures. Note that this SLI is highly dependent on upstream proxy targets, not under the control of GitLab. We are unable to distinguish problems in the proxy from upstream problems. This should be taken into account for this SLI.

        Currently the error-rate is {{ $value | humanizePercentage }}.
      grafana_dashboard_id: camoproxy-main/camoproxy-overview
      grafana_dashboard_link: >-
        https://dashboards.gitlab.net/d/camoproxy-main/camoproxy-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: '6'
      grafana_panel_id: '23496'
      grafana_variables: environment,stage
      link1_title: Definition
      link1_url: >-
        https://gitlab.com/gitlab-com/runbooks/blob/master/docs/uncategorized/definition-service-error-rate.md
      promql_template_1: >-
        gitlab_component_errors:ratio_5m{environment="$environment", type="$type", stage="$stage", component="$component"}
      runbook: docs/{{ $labels.type }}/README.md
    labels:
      alert_type: symptom
      feature_category: not_owned
      pager: pagerduty
      product_stage: not_owned
      product_stage_group: not_owned
      rules_domain: general
      severity: s2
      slo_alert: 'yes'
    expr: |
      (
        (
          gitlab_component_errors:ratio_1h{component="server",monitor="global",type="camoproxy"}
          > (14.4 * 0.005000)
        )
        and
        (
          gitlab_component_errors:ratio_5m{component="server",monitor="global",type="camoproxy"}
          > (14.4 * 0.005000)
        )
        or
        (
          gitlab_component_errors:ratio_6h{component="server",monitor="global",type="camoproxy"}
          > (6 * 0.005000)
        )
        and
        (
          gitlab_component_errors:ratio_30m{component="server",monitor="global",type="camoproxy"}
          > (6 * 0.005000)
        )
      )
      and on(env,environment,tier,type,stage,component)
      (
        sum by(env,environment,tier,type,stage,component) (gitlab_component_ops:rate_1h{component="server",monitor="global",type="camoproxy"}) >= 1
      )
