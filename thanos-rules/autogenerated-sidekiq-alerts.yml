# WARNING. DO NOT EDIT THIS FILE BY HAND. USE ./thanos-rules-jsonnet/sidekiq-queue-rules.jsonnet TO GENERATE IT
# YOUR CHANGES WILL BE OVERRIDDEN
groups:
- name: Sidekiq Aggregated Thanos Alerts
  interval: 1m
  partial_response_strategy: warn
  rules:
  - alert: sidekiq_throttled_jobs_enqueued_without_dequeuing
    for: 30m
    annotations:
      title: Sidekiq jobs are being enqueued without being dequeued
      description: |
        The `{{ $labels.queue }}` queue appears to have jobs being enqueued without
        those jobs being executed.

        This could be the result of a Sidekiq server configuration issue, where
        no Sidekiq servers are configured to dequeue the specific queue.
      alert_source: thanos-rules-jsonnet/sidekiq-queue-rules.jsonnet
      grafana_dashboard_id: sidekiq-queue-detail/sidekiq-queue-detail
      grafana_dashboard_link: >-
        https://dashboards.gitlab.net/d/sidekiq-queue-detail/sidekiq-queue-detail?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}&var-queue={{ $labels.queue }}
      grafana_min_zoom_hours: '6'
      grafana_panel_id: '80616'
      grafana_variables: environment,stage,queue
      promql_template_1: >-
        sidekiq_enqueued_jobs_total{environment="$environment", type="$type", stage="$stage", component="$component"}
      runbook: docs/sidekiq/service-sidekiq.md
    labels:
      alert_type: cause
      period: 30m
      rules_domain: general
      severity: s4
      stage: main
      tier: sv
      type: sidekiq
    expr: |
      (
        sum by (environment, queue, feature_category) (
          gitlab_background_jobs:queue:ops:rate_1h{urgency="throttled"}
        ) > 0
      )
      unless
      (
        sum by (environment, queue, feature_category) (
          gitlab_background_jobs:execution:ops:rate_1h{urgency="throttled"}
        ) > 0
      )
