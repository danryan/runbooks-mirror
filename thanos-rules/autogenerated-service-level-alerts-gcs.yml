# WARNING. DO NOT EDIT THIS FILE BY HAND. USE ./thanos-rules-jsonnet/service-component-alerts.jsonnet TO GENERATE IT
# YOUR CHANGES WILL BE OVERRIDDEN
groups:
- name: 'Service Component Alerts: gcs'
  interval: 1m
  partial_response_strategy: warn
  rules:
  - alert: GcsServiceRegistryStorageTrafficCessation
    for: 5m
    annotations:
      title: The registry_storage SLI of the gcs service (`{{ $labels.stage }}` stage)
        has not received any traffic in the past 30 minutes
      description: |
        Measures the latency of registry service storage operations, which rely on a GCS backend.

        This alert signifies that the SLI is reporting a cessation of traffic, but the signal is not absent.
      grafana_dashboard_id: gcs-main/gcs-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/gcs-main/gcs-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "207503232"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(registry_storage_action_seconds_count{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}"}[5m])
        )
      runbook: docs/gcs/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      pager: pagerduty
      product_stage: not_owned
      product_stage_group: not_owned
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_30m{type="gcs", component="registry_storage", stage="main", monitor="global"} == 0
  - alert: GcsServiceRegistryStorageTrafficAbsent
    for: 30m
    annotations:
      title: The registry_storage SLI of the gcs service (`{{ $labels.stage }}` stage)
        has not reported any traffic in the past 30 minutes
      description: |
        Measures the latency of registry service storage operations, which rely on a GCS backend.

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: gcs-main/gcs-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/gcs-main/gcs-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "207503232"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(registry_storage_action_seconds_count{environment="{{ $labels.environment }}",stage="{{ $labels.stage }}"}[5m])
        )
      runbook: docs/gcs/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      pager: pagerduty
      product_stage: not_owned
      product_stage_group: not_owned
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_5m{type="gcs", component="registry_storage", stage="main", monitor="global"} offset 1h
      unless
      gitlab_component_ops:rate_5m{type="gcs", component="registry_storage", stage="main", monitor="global"}
  - alert: GcsServiceWorkhorseUploadsTrafficCessation
    for: 5m
    annotations:
      title: The workhorse_uploads SLI of the gcs service (`{{ $labels.stage }}` stage)
        has not received any traffic in the past 30 minutes
      description: |
        Measures the latency of workhorse uploads which use a GCS bucket backend

        This alert signifies that the SLI is reporting a cessation of traffic, but the signal is not absent.
      grafana_dashboard_id: gcs-main/gcs-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/gcs-main/gcs-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "3942122381"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitlab_workhorse_object_storage_upload_time_bucket{environment="{{ $labels.environment }}",le="+Inf",stage="{{ $labels.stage }}"}[5m])
        )
      runbook: docs/gcs/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      pager: pagerduty
      product_stage: not_owned
      product_stage_group: not_owned
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_30m{type="gcs", component="workhorse_uploads", stage="main", monitor="global"} == 0
  - alert: GcsServiceWorkhorseUploadsTrafficAbsent
    for: 30m
    annotations:
      title: The workhorse_uploads SLI of the gcs service (`{{ $labels.stage }}` stage)
        has not reported any traffic in the past 30 minutes
      description: |
        Measures the latency of workhorse uploads which use a GCS bucket backend

        This alert signifies that the SLI was previously reporting traffic, but is no longer - the signal is absent.

        This could be caused by a change to the metrics used in the SLI, or by the service not receiving traffic.
      grafana_dashboard_id: gcs-main/gcs-overview
      grafana_dashboard_link: https://dashboards.gitlab.net/d/gcs-main/gcs-overview?from=now-6h/m&to=now-1m/m&var-environment={{
        $labels.environment }}&var-stage={{ $labels.stage }}
      grafana_min_zoom_hours: "6"
      grafana_panel_id: "3942122381"
      grafana_variables: environment,stage
      promql_template_1: |
        sum by (env,environment,tier,stage) (
          rate(gitlab_workhorse_object_storage_upload_time_bucket{environment="{{ $labels.environment }}",le="+Inf",stage="{{ $labels.stage }}"}[5m])
        )
      runbook: docs/gcs/README.md
    labels:
      aggregation: component
      alert_class: traffic_cessation
      alert_type: cause
      feature_category: not_owned
      pager: pagerduty
      product_stage: not_owned
      product_stage_group: not_owned
      rules_domain: general
      severity: s2
      sli_type: ops
      slo_alert: "no"
      user_impacting: "yes"
    expr: |
      gitlab_component_ops:rate_5m{type="gcs", component="workhorse_uploads", stage="main", monitor="global"} offset 1h
      unless
      gitlab_component_ops:rate_5m{type="gcs", component="workhorse_uploads", stage="main", monitor="global"}
