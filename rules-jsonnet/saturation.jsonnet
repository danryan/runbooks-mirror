local saturationResources = import './saturation-resources.libsonnet';

local saturationResourceNames = std.objectFields(saturationResources);

local rules = std.map(function(key) saturationResources[key].getRecordingRuleDefinition(key), saturationResourceNames);
local sloThresholdRecordingRules = std.flatMap(function(key) saturationResources[key].getSLORecordingRuleDefinition(key), saturationResourceNames);
local saturationMetadataRecordingRules = std.map(function(key) saturationResources[key].getMetadataRecordingRuleDefinition(key), saturationResourceNames);
local saturationAlerts = std.flatMap(function(key) saturationResources[key].getSaturationAlerts(key), saturationResourceNames);

local recordedQuantiles = [0.95, 0.99];

{
  'saturation.yml':
    std.manifestYamlDoc({
      groups: [{
        // Recording rules for each saturation metric
        name: 'Saturation Rules (autogenerated)',
        interval: '1m',
        rules: rules,
      }, {
        // Recording rules defining the soft and hard SLO thresholds
        name: 'GitLab Component Saturation Max SLOs',
        interval: '5m',
        rules: sloThresholdRecordingRules,
      }, {
        // Metadata each of the saturation metrics
        name: 'GitLab Component Saturation Metadata',
        interval: '5m',
        rules: saturationMetadataRecordingRules,
      }, {
        // Alerts for saturation metrics being out of threshold
        name: 'GitLab Component Saturation Statistics',
        interval: '5m',
        rules:
          [
            {
              record: 'gitlab_component_saturation:ratio_quantile%(quantile_percent)d_1w' % {
                quantile_percent: quantile * 100,
              },
              expr: 'quantile_over_time(%(quantile)g, gitlab_component_saturation:ratio[1w])' % {
                quantile: quantile,
              },
            }
            for quantile in recordedQuantiles
          ]
          +
          [
            {
              record: 'gitlab_component_saturation:ratio_quantile%(quantile_percent)d_1h' % {
                quantile_percent: quantile * 100,
              },
              expr: 'quantile_over_time(%(quantile)g, gitlab_component_saturation:ratio[1h])' % {
                quantile: quantile,
              },
            }
            for quantile in recordedQuantiles
          ]
          +
          [
            {
              record: 'gitlab_component_saturation:ratio_avg_1h',
              expr: 'avg_over_time(gitlab_component_saturation:ratio[1h])',
            },
          ],
      }, {
        name: 'GitLab Saturation Alerts',
        interval: '1m',
        rules: saturationAlerts,
      }],
    }),
}
