# WARNING. DO NOT EDIT THIS FILE BY HAND. RUN ./scripts/generate-reference-architecture-configs.sh TO GENERATE IT. YOUR CHANGES WILL BE OVERRIDDEN
groups:
- interval: 1m
  name: 'Component-Level SLIs: webservice - 5m burn-rate'
  rules:
  - expr: |
      (
        sum by () (
          rate(http_request_duration_seconds_bucket{job="gitlab-rails",le="1"}[5m])
        )
        +
        sum by () (
          rate(http_request_duration_seconds_bucket{job="gitlab-rails",le="10"}[5m])
        )
      )
      /
      2
    labels:
      component: puma
      tier: app
      type: webservice
    record: gitlab_component_apdex:success:rate_5m
  - expr: |
      sum by () (
        rate(http_request_duration_seconds_bucket{job="gitlab-rails",le="+Inf"}[5m])
      )
    labels:
      component: puma
      tier: app
      type: webservice
    record: gitlab_component_apdex:weight:score_5m
  - expr: |
      sum by () (
        rate(http_requests_total{job="gitlab-rails"}[5m])
      )
    labels:
      component: puma
      tier: app
      type: webservice
    record: gitlab_component_ops:rate_5m
  - expr: |
      (
        sum by () (
          rate(http_requests_total{job="gitlab-rails",status=~"5.."}[5m])
        )
      )
      or
      (
        0 * group by() (
          gitlab_component_ops:rate_5m{component="puma",tier="app",type="webservice"}
        )
      )
    labels:
      component: puma
      tier: app
      type: webservice
    record: gitlab_component_errors:rate_5m
- interval: 2m
  name: 'Component-Level SLIs: webservice - 30m burn-rate'
  rules:
  - expr: |
      (
        sum by () (
          rate(http_request_duration_seconds_bucket{job="gitlab-rails",le="1"}[30m])
        )
        +
        sum by () (
          rate(http_request_duration_seconds_bucket{job="gitlab-rails",le="10"}[30m])
        )
      )
      /
      2
    labels:
      component: puma
      tier: app
      type: webservice
    record: gitlab_component_apdex:success:rate_30m
  - expr: |
      sum by () (
        rate(http_request_duration_seconds_bucket{job="gitlab-rails",le="+Inf"}[30m])
      )
    labels:
      component: puma
      tier: app
      type: webservice
    record: gitlab_component_apdex:weight:score_30m
  - expr: |
      sum by () (
        rate(http_requests_total{job="gitlab-rails"}[30m])
      )
    labels:
      component: puma
      tier: app
      type: webservice
    record: gitlab_component_ops:rate_30m
  - expr: |
      (
        sum by () (
          rate(http_requests_total{job="gitlab-rails",status=~"5.."}[30m])
        )
      )
      or
      (
        0 * group by() (
          gitlab_component_ops:rate_30m{component="puma",tier="app",type="webservice"}
        )
      )
    labels:
      component: puma
      tier: app
      type: webservice
    record: gitlab_component_errors:rate_30m
- interval: 1m
  name: 'Component-Level SLIs: webservice - 1h burn-rate'
  rules:
  - expr: |
      (
        sum by () (
          rate(http_request_duration_seconds_bucket{job="gitlab-rails",le="1"}[1h])
        )
        +
        sum by () (
          rate(http_request_duration_seconds_bucket{job="gitlab-rails",le="10"}[1h])
        )
      )
      /
      2
    labels:
      component: puma
      tier: app
      type: webservice
    record: gitlab_component_apdex:success:rate_1h
  - expr: |
      sum by () (
        rate(http_request_duration_seconds_bucket{job="gitlab-rails",le="+Inf"}[1h])
      )
    labels:
      component: puma
      tier: app
      type: webservice
    record: gitlab_component_apdex:weight:score_1h
  - expr: |
      sum by () (
        rate(http_requests_total{job="gitlab-rails"}[1h])
      )
    labels:
      component: puma
      tier: app
      type: webservice
    record: gitlab_component_ops:rate_1h
  - expr: |
      (
        sum by () (
          rate(http_requests_total{job="gitlab-rails",status=~"5.."}[1h])
        )
      )
      or
      (
        0 * group by() (
          gitlab_component_ops:rate_1h{component="puma",tier="app",type="webservice"}
        )
      )
    labels:
      component: puma
      tier: app
      type: webservice
    record: gitlab_component_errors:rate_1h
- interval: 2m
  name: 'Component-Level SLIs: webservice - 6h burn-rate'
  rules:
  - expr: |
      (
        sum by () (
          rate(http_request_duration_seconds_bucket{job="gitlab-rails",le="1"}[6h])
        )
        +
        sum by () (
          rate(http_request_duration_seconds_bucket{job="gitlab-rails",le="10"}[6h])
        )
      )
      /
      2
    labels:
      component: puma
      tier: app
      type: webservice
    record: gitlab_component_apdex:success:rate_6h
  - expr: |
      sum by () (
        rate(http_request_duration_seconds_bucket{job="gitlab-rails",le="+Inf"}[6h])
      )
    labels:
      component: puma
      tier: app
      type: webservice
    record: gitlab_component_apdex:weight:score_6h
  - expr: |
      sum by () (
        rate(http_requests_total{job="gitlab-rails"}[6h])
      )
    labels:
      component: puma
      tier: app
      type: webservice
    record: gitlab_component_ops:rate_6h
  - expr: |
      (
        sum by () (
          rate(http_requests_total{job="gitlab-rails",status=~"5.."}[6h])
        )
      )
      or
      (
        0 * group by() (
          gitlab_component_ops:rate_6h{component="puma",tier="app",type="webservice"}
        )
      )
    labels:
      component: puma
      tier: app
      type: webservice
    record: gitlab_component_errors:rate_6h
- interval: 1m
  name: 'Component mapping: webservice'
  rules:
  - expr: "1"
    labels:
      component: puma
      regional_aggregation: "no"
      service_aggregation: "yes"
      tier: app
      type: webservice
    record: gitlab_component_service:mapping
- interval: 1m
  name: Global Component SLI Metrics ratios
  rules:
  - expr: |
      sum by (type,component) (
        gitlab_component_errors:rate_5m{}
      )
      /
      sum by (type,component) (
        gitlab_component_ops:rate_5m{}
      )
    record: gitlab_component_errors:ratio_5m
  - expr: |
      sum by (type,component) (
        gitlab_component_apdex:success:rate_5m{}
      )
      /
      sum by (type,component) (
        gitlab_component_apdex:weight:score_5m{}
      )
    record: gitlab_component_apdex:ratio_5m
  - expr: |
      sum by (type,component) (
        gitlab_component_errors:rate_30m{}
      )
      /
      sum by (type,component) (
        gitlab_component_ops:rate_30m{}
      )
    record: gitlab_component_errors:ratio_30m
  - expr: |
      sum by (type,component) (
        gitlab_component_apdex:success:rate_30m{}
      )
      /
      sum by (type,component) (
        gitlab_component_apdex:weight:score_30m{}
      )
    record: gitlab_component_apdex:ratio_30m
  - expr: |
      sum by (type,component) (
        gitlab_component_errors:rate_1h{}
      )
      /
      sum by (type,component) (
        gitlab_component_ops:rate_1h{}
      )
    record: gitlab_component_errors:ratio_1h
  - expr: |
      sum by (type,component) (
        gitlab_component_apdex:success:rate_1h{}
      )
      /
      sum by (type,component) (
        gitlab_component_apdex:weight:score_1h{}
      )
    record: gitlab_component_apdex:ratio_1h
  - expr: |
      sum by (type,component) (
        gitlab_component_errors:rate_6h{}
      )
      /
      sum by (type,component) (
        gitlab_component_ops:rate_6h{}
      )
    record: gitlab_component_errors:ratio_6h
  - expr: |
      sum by (type,component) (
        gitlab_component_apdex:success:rate_6h{}
      )
      /
      sum by (type,component) (
        gitlab_component_apdex:weight:score_6h{}
      )
    record: gitlab_component_apdex:ratio_6h
- interval: 1m
  name: Global Service-Aggregated Metrics
  rules:
  - expr: |
      sum by (type) (
        (gitlab_component_errors:rate_5m{} >= 0) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
      )
    record: gitlab_service_errors:rate_5m
  - expr: |
      sum by (type) (
        (gitlab_component_ops:rate_5m{} >= 0) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
      )
    record: gitlab_service_ops:rate_5m
  - expr: |
      sum by (type) (
        gitlab_service_errors:rate_5m{}
      )
      /
      sum by (type) (
        gitlab_service_ops:rate_5m{}
      )
    record: gitlab_service_errors:ratio_5m
  - expr: |
      sum by (type) (
        (gitlab_component_apdex:weight:score_5m{} >= 0) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
      )
    record: gitlab_service_apdex:weight:score_5m
  - expr: |
      sum by (type) (
        (gitlab_component_apdex:success:rate_5m{} >= 0) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
      )
    record: gitlab_service_apdex:success:rate_5m
  - expr: |
      sum by (type) (
        (gitlab_component_apdex:success:rate_5m{} >= 0) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
      )
      /
      sum by (type) (
        (gitlab_component_apdex:weight:score_5m{} >= 0) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
      )
    record: gitlab_service_apdex:ratio_5m
  - expr: |
      sum by (type) (
        (gitlab_component_errors:rate_30m{} >= 0) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
      )
    record: gitlab_service_errors:rate_30m
  - expr: |
      sum by (type) (
        (gitlab_component_ops:rate_30m{} >= 0) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
      )
    record: gitlab_service_ops:rate_30m
  - expr: |
      sum by (type) (
        gitlab_service_errors:rate_30m{}
      )
      /
      sum by (type) (
        gitlab_service_ops:rate_30m{}
      )
    record: gitlab_service_errors:ratio_30m
  - expr: |
      sum by (type) (
        (gitlab_component_apdex:weight:score_30m{} >= 0) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
      )
    record: gitlab_service_apdex:weight:score_30m
  - expr: |
      sum by (type) (
        (gitlab_component_apdex:success:rate_30m{} >= 0) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
      )
    record: gitlab_service_apdex:success:rate_30m
  - expr: |
      sum by (type) (
        (gitlab_component_apdex:success:rate_30m{} >= 0) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
      )
      /
      sum by (type) (
        (gitlab_component_apdex:weight:score_30m{} >= 0) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
      )
    record: gitlab_service_apdex:ratio_30m
  - expr: |
      sum by (type) (
        (gitlab_component_errors:rate_1h{} >= 0) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
      )
    record: gitlab_service_errors:rate_1h
  - expr: |
      sum by (type) (
        (gitlab_component_ops:rate_1h{} >= 0) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
      )
    record: gitlab_service_ops:rate_1h
  - expr: |
      sum by (type) (
        gitlab_service_errors:rate_1h{}
      )
      /
      sum by (type) (
        gitlab_service_ops:rate_1h{}
      )
    record: gitlab_service_errors:ratio_1h
  - expr: |
      sum by (type) (
        (gitlab_component_apdex:weight:score_1h{} >= 0) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
      )
    record: gitlab_service_apdex:weight:score_1h
  - expr: |
      sum by (type) (
        (gitlab_component_apdex:success:rate_1h{} >= 0) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
      )
    record: gitlab_service_apdex:success:rate_1h
  - expr: |
      sum by (type) (
        (gitlab_component_apdex:success:rate_1h{} >= 0) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
      )
      /
      sum by (type) (
        (gitlab_component_apdex:weight:score_1h{} >= 0) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
      )
    record: gitlab_service_apdex:ratio_1h
  - expr: |
      (
        sum by (type) (
          (gitlab_component_errors:rate_6h{} >= 0) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
        )
      )
      or
      (
        sum by (type) (
          avg_over_time(gitlab_component_errors:rate_1h{upscale_source="yes"}[6h]) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
        )
      )
    record: gitlab_service_errors:rate_6h
  - expr: |
      (
        sum by (type) (
          (gitlab_component_ops:rate_6h{} >= 0) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
        )
      )
      or
      (
        sum by (type) (
          avg_over_time(gitlab_component_ops:rate_1h{upscale_source="yes"}[6h]) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
        )
      )
    record: gitlab_service_ops:rate_6h
  - expr: |
      (
        sum by (type) (
          gitlab_service_errors:rate_6h{}
        )
        /
        sum by (type) (
          gitlab_service_ops:rate_6h{}
        )
      )
      or
      (
        sum by (type) (
          sum_over_time(gitlab_component_errors:rate_1h{upscale_source="yes"}[6h]) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
        )
        /
        sum by (type) (
          sum_over_time(gitlab_component_ops:rate_1h{upscale_source="yes"}[6h]) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
        )
      )
    record: gitlab_service_errors:ratio_6h
  - expr: |
      (
        sum by (type) (
          (gitlab_component_apdex:weight:score_6h{} >= 0) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
        )
      )
      or
      (
        sum by (type) (
          avg_over_time(gitlab_component_apdex:weight:score_1h{upscale_source="yes"}[6h]) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
        )
      )
    record: gitlab_service_apdex:weight:score_6h
  - expr: |
      (
        sum by (type) (
          (gitlab_component_apdex:success:rate_6h{} >= 0) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
        )
      )
      or
      (
        sum by (type) (
          avg_over_time(gitlab_component_apdex:success:rate_1h{upscale_source="yes"}[6h]) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
        )
      )
    record: gitlab_service_apdex:success:rate_6h
  - expr: |
      (
        sum by (type) (
          (gitlab_component_apdex:success:rate_6h{} >= 0) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
        )
        /
        sum by (type) (
          (gitlab_component_apdex:weight:score_6h{} >= 0) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
        )
      )
      or
      (
        sum by (type) (
          sum_over_time(gitlab_component_apdex:success:rate_1h{upscale_source="yes"}[6h]) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
        )
        /
        sum by (type) (
          sum_over_time(gitlab_component_apdex:weight:score_1h{upscale_source="yes"}[6h]) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
        )
      )
    record: gitlab_service_apdex:ratio_6h
- interval: 5m
  name: Autogenerated Service SLOs
  rules:
  - expr: "0.998000"
    labels:
      tier: app
      type: webservice
    record: slo:min:events:gitlab_service_apdex:ratio
  - expr: "0.000100"
    labels:
      tier: app
      type: webservice
    record: slo:max:events:gitlab_service_errors:ratio
  - expr: "0.998000"
    labels:
      component: puma
      tier: app
      type: webservice
    record: slo:min:events:gitlab_service_apdex:ratio
  - expr: "0.000100"
    labels:
      component: puma
      tier: app
      type: webservice
    record: slo:max:events:gitlab_service_errors:ratio
- interval: 1m
  name: Saturation Rules (autogenerated)
  rules: []
- interval: 5m
  name: GitLab Component Saturation Max SLOs
  rules: []
- interval: 5m
  name: GitLab Component Saturation Metadata
  rules: []
- interval: 5m
  name: GitLab Component Saturation Statistics
  rules:
  - expr: quantile_over_time(0.95, gitlab_component_saturation:ratio{monitor="global"}[1w])
    record: gitlab_component_saturation:ratio_quantile95_1w
  - expr: quantile_over_time(0.99, gitlab_component_saturation:ratio{monitor="global"}[1w])
    record: gitlab_component_saturation:ratio_quantile99_1w
  - expr: quantile_over_time(0.95, gitlab_component_saturation:ratio{monitor="global"}[1h])
    record: gitlab_component_saturation:ratio_quantile95_1h
  - expr: quantile_over_time(0.99, gitlab_component_saturation:ratio{monitor="global"}[1h])
    record: gitlab_component_saturation:ratio_quantile99_1h
  - expr: avg_over_time(gitlab_component_saturation:ratio{monitor="global"}[1h])
    record: gitlab_component_saturation:ratio_avg_1h
- interval: 1m
  name: GitLab Saturation Alerts
  rules: []
