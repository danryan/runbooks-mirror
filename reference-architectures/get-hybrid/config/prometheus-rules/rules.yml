# WARNING. DO NOT EDIT THIS FILE BY HAND. RUN ./scripts/generate-reference-architecture-configs.sh TO GENERATE IT. YOUR CHANGES WILL BE OVERRIDDEN
groups:
- interval: 1m
  name: 'Component-Level SLIs: webservice - 5m burn-rate'
  rules:
  - expr: |
      (
        sum by () (
          rate(http_request_duration_seconds_bucket{job="gitlab-rails",le="1"}[5m])
        )
        +
        sum by () (
          rate(http_request_duration_seconds_bucket{job="gitlab-rails",le="10"}[5m])
        )
      )
      /
      2
    labels:
      component: puma
      tier: app
      type: webservice
    record: gitlab_component_apdex:success:rate_5m
  - expr: |
      sum by () (
        rate(http_request_duration_seconds_bucket{job="gitlab-rails",le="+Inf"}[5m])
      )
    labels:
      component: puma
      tier: app
      type: webservice
    record: gitlab_component_apdex:weight:score_5m
  - expr: |
      sum by () (
        rate(http_requests_total{job="gitlab-rails"}[5m])
      )
    labels:
      component: puma
      tier: app
      type: webservice
    record: gitlab_component_ops:rate_5m
  - expr: |
      (
        sum by () (
          rate(http_requests_total{job="gitlab-rails",status=~"5.."}[5m])
        )
      )
      or
      (
        0 * group by() (
          gitlab_component_ops:rate_5m{component="puma",tier="app",type="webservice"}
        )
      )
    labels:
      component: puma
      tier: app
      type: webservice
    record: gitlab_component_errors:rate_5m
  - expr: |
      (
        sum by () (
          rate(gitlab_workhorse_http_request_duration_seconds_bucket{le="1",route!="^/-/health$",route!="^/-/(readiness|liveness)$",route!="^/([^/]+/){1,}[^/]+/uploads\\z",route!="^/([^/]+/){1,}[^/]+\\.git/git-receive-pack\\z",route!="^/([^/]+/){1,}[^/]+\\.git/git-upload-pack\\z",route!="^/([^/]+/){1,}[^/]+\\.git/info/refs\\z",route!="^/([^/]+/){1,}[^/]+\\.git/gitlab-lfs/objects/([0-9a-f]{64})/([0-9]+)\\z"}[5m])
        )
        +
        sum by () (
          rate(gitlab_workhorse_http_request_duration_seconds_bucket{le="10",route!="^/-/health$",route!="^/-/(readiness|liveness)$",route!="^/([^/]+/){1,}[^/]+/uploads\\z",route!="^/([^/]+/){1,}[^/]+\\.git/git-receive-pack\\z",route!="^/([^/]+/){1,}[^/]+\\.git/git-upload-pack\\z",route!="^/([^/]+/){1,}[^/]+\\.git/info/refs\\z",route!="^/([^/]+/){1,}[^/]+\\.git/gitlab-lfs/objects/([0-9a-f]{64})/([0-9]+)\\z"}[5m])
        )
      )
      /
      2
    labels:
      component: workhorse
      tier: app
      type: webservice
    record: gitlab_component_apdex:success:rate_5m
  - expr: |
      sum by () (
        rate(gitlab_workhorse_http_request_duration_seconds_bucket{le="+Inf",route!="^/-/health$",route!="^/-/(readiness|liveness)$",route!="^/([^/]+/){1,}[^/]+/uploads\\z",route!="^/([^/]+/){1,}[^/]+\\.git/git-receive-pack\\z",route!="^/([^/]+/){1,}[^/]+\\.git/git-upload-pack\\z",route!="^/([^/]+/){1,}[^/]+\\.git/info/refs\\z",route!="^/([^/]+/){1,}[^/]+\\.git/gitlab-lfs/objects/([0-9a-f]{64})/([0-9]+)\\z"}[5m])
      )
    labels:
      component: workhorse
      tier: app
      type: webservice
    record: gitlab_component_apdex:weight:score_5m
  - expr: |
      sum by () (
        rate(gitlab_workhorse_http_requests_total{route!="^/-/health$",route!="^/-/(readiness|liveness)$"}[5m])
      )
    labels:
      component: workhorse
      tier: app
      type: webservice
    record: gitlab_component_ops:rate_5m
  - expr: |
      (
        sum by () (
          rate(gitlab_workhorse_http_requests_total{code=~"^5.*",route!="^/-/health$",route!="^/-/(readiness|liveness)$"}[5m])
        )
      )
      or
      (
        0 * group by() (
          gitlab_component_ops:rate_5m{component="workhorse",tier="app",type="webservice"}
        )
      )
    labels:
      component: workhorse
      tier: app
      type: webservice
    record: gitlab_component_errors:rate_5m
- interval: 2m
  name: 'Component-Level SLIs: webservice - 30m burn-rate'
  rules:
  - expr: |
      (
        sum by () (
          rate(http_request_duration_seconds_bucket{job="gitlab-rails",le="1"}[30m])
        )
        +
        sum by () (
          rate(http_request_duration_seconds_bucket{job="gitlab-rails",le="10"}[30m])
        )
      )
      /
      2
    labels:
      component: puma
      tier: app
      type: webservice
    record: gitlab_component_apdex:success:rate_30m
  - expr: |
      sum by () (
        rate(http_request_duration_seconds_bucket{job="gitlab-rails",le="+Inf"}[30m])
      )
    labels:
      component: puma
      tier: app
      type: webservice
    record: gitlab_component_apdex:weight:score_30m
  - expr: |
      sum by () (
        rate(http_requests_total{job="gitlab-rails"}[30m])
      )
    labels:
      component: puma
      tier: app
      type: webservice
    record: gitlab_component_ops:rate_30m
  - expr: |
      (
        sum by () (
          rate(http_requests_total{job="gitlab-rails",status=~"5.."}[30m])
        )
      )
      or
      (
        0 * group by() (
          gitlab_component_ops:rate_30m{component="puma",tier="app",type="webservice"}
        )
      )
    labels:
      component: puma
      tier: app
      type: webservice
    record: gitlab_component_errors:rate_30m
  - expr: |
      (
        sum by () (
          rate(gitlab_workhorse_http_request_duration_seconds_bucket{le="1",route!="^/-/health$",route!="^/-/(readiness|liveness)$",route!="^/([^/]+/){1,}[^/]+/uploads\\z",route!="^/([^/]+/){1,}[^/]+\\.git/git-receive-pack\\z",route!="^/([^/]+/){1,}[^/]+\\.git/git-upload-pack\\z",route!="^/([^/]+/){1,}[^/]+\\.git/info/refs\\z",route!="^/([^/]+/){1,}[^/]+\\.git/gitlab-lfs/objects/([0-9a-f]{64})/([0-9]+)\\z"}[30m])
        )
        +
        sum by () (
          rate(gitlab_workhorse_http_request_duration_seconds_bucket{le="10",route!="^/-/health$",route!="^/-/(readiness|liveness)$",route!="^/([^/]+/){1,}[^/]+/uploads\\z",route!="^/([^/]+/){1,}[^/]+\\.git/git-receive-pack\\z",route!="^/([^/]+/){1,}[^/]+\\.git/git-upload-pack\\z",route!="^/([^/]+/){1,}[^/]+\\.git/info/refs\\z",route!="^/([^/]+/){1,}[^/]+\\.git/gitlab-lfs/objects/([0-9a-f]{64})/([0-9]+)\\z"}[30m])
        )
      )
      /
      2
    labels:
      component: workhorse
      tier: app
      type: webservice
    record: gitlab_component_apdex:success:rate_30m
  - expr: |
      sum by () (
        rate(gitlab_workhorse_http_request_duration_seconds_bucket{le="+Inf",route!="^/-/health$",route!="^/-/(readiness|liveness)$",route!="^/([^/]+/){1,}[^/]+/uploads\\z",route!="^/([^/]+/){1,}[^/]+\\.git/git-receive-pack\\z",route!="^/([^/]+/){1,}[^/]+\\.git/git-upload-pack\\z",route!="^/([^/]+/){1,}[^/]+\\.git/info/refs\\z",route!="^/([^/]+/){1,}[^/]+\\.git/gitlab-lfs/objects/([0-9a-f]{64})/([0-9]+)\\z"}[30m])
      )
    labels:
      component: workhorse
      tier: app
      type: webservice
    record: gitlab_component_apdex:weight:score_30m
  - expr: |
      sum by () (
        rate(gitlab_workhorse_http_requests_total{route!="^/-/health$",route!="^/-/(readiness|liveness)$"}[30m])
      )
    labels:
      component: workhorse
      tier: app
      type: webservice
    record: gitlab_component_ops:rate_30m
  - expr: |
      (
        sum by () (
          rate(gitlab_workhorse_http_requests_total{code=~"^5.*",route!="^/-/health$",route!="^/-/(readiness|liveness)$"}[30m])
        )
      )
      or
      (
        0 * group by() (
          gitlab_component_ops:rate_30m{component="workhorse",tier="app",type="webservice"}
        )
      )
    labels:
      component: workhorse
      tier: app
      type: webservice
    record: gitlab_component_errors:rate_30m
- interval: 1m
  name: 'Component-Level SLIs: webservice - 1h burn-rate'
  rules:
  - expr: |
      (
        sum by () (
          rate(http_request_duration_seconds_bucket{job="gitlab-rails",le="1"}[1h])
        )
        +
        sum by () (
          rate(http_request_duration_seconds_bucket{job="gitlab-rails",le="10"}[1h])
        )
      )
      /
      2
    labels:
      component: puma
      tier: app
      type: webservice
    record: gitlab_component_apdex:success:rate_1h
  - expr: |
      sum by () (
        rate(http_request_duration_seconds_bucket{job="gitlab-rails",le="+Inf"}[1h])
      )
    labels:
      component: puma
      tier: app
      type: webservice
    record: gitlab_component_apdex:weight:score_1h
  - expr: |
      sum by () (
        rate(http_requests_total{job="gitlab-rails"}[1h])
      )
    labels:
      component: puma
      tier: app
      type: webservice
    record: gitlab_component_ops:rate_1h
  - expr: |
      (
        sum by () (
          rate(http_requests_total{job="gitlab-rails",status=~"5.."}[1h])
        )
      )
      or
      (
        0 * group by() (
          gitlab_component_ops:rate_1h{component="puma",tier="app",type="webservice"}
        )
      )
    labels:
      component: puma
      tier: app
      type: webservice
    record: gitlab_component_errors:rate_1h
  - expr: |
      (
        sum by () (
          rate(gitlab_workhorse_http_request_duration_seconds_bucket{le="1",route!="^/-/health$",route!="^/-/(readiness|liveness)$",route!="^/([^/]+/){1,}[^/]+/uploads\\z",route!="^/([^/]+/){1,}[^/]+\\.git/git-receive-pack\\z",route!="^/([^/]+/){1,}[^/]+\\.git/git-upload-pack\\z",route!="^/([^/]+/){1,}[^/]+\\.git/info/refs\\z",route!="^/([^/]+/){1,}[^/]+\\.git/gitlab-lfs/objects/([0-9a-f]{64})/([0-9]+)\\z"}[1h])
        )
        +
        sum by () (
          rate(gitlab_workhorse_http_request_duration_seconds_bucket{le="10",route!="^/-/health$",route!="^/-/(readiness|liveness)$",route!="^/([^/]+/){1,}[^/]+/uploads\\z",route!="^/([^/]+/){1,}[^/]+\\.git/git-receive-pack\\z",route!="^/([^/]+/){1,}[^/]+\\.git/git-upload-pack\\z",route!="^/([^/]+/){1,}[^/]+\\.git/info/refs\\z",route!="^/([^/]+/){1,}[^/]+\\.git/gitlab-lfs/objects/([0-9a-f]{64})/([0-9]+)\\z"}[1h])
        )
      )
      /
      2
    labels:
      component: workhorse
      tier: app
      type: webservice
    record: gitlab_component_apdex:success:rate_1h
  - expr: |
      sum by () (
        rate(gitlab_workhorse_http_request_duration_seconds_bucket{le="+Inf",route!="^/-/health$",route!="^/-/(readiness|liveness)$",route!="^/([^/]+/){1,}[^/]+/uploads\\z",route!="^/([^/]+/){1,}[^/]+\\.git/git-receive-pack\\z",route!="^/([^/]+/){1,}[^/]+\\.git/git-upload-pack\\z",route!="^/([^/]+/){1,}[^/]+\\.git/info/refs\\z",route!="^/([^/]+/){1,}[^/]+\\.git/gitlab-lfs/objects/([0-9a-f]{64})/([0-9]+)\\z"}[1h])
      )
    labels:
      component: workhorse
      tier: app
      type: webservice
    record: gitlab_component_apdex:weight:score_1h
  - expr: |
      sum by () (
        rate(gitlab_workhorse_http_requests_total{route!="^/-/health$",route!="^/-/(readiness|liveness)$"}[1h])
      )
    labels:
      component: workhorse
      tier: app
      type: webservice
    record: gitlab_component_ops:rate_1h
  - expr: |
      (
        sum by () (
          rate(gitlab_workhorse_http_requests_total{code=~"^5.*",route!="^/-/health$",route!="^/-/(readiness|liveness)$"}[1h])
        )
      )
      or
      (
        0 * group by() (
          gitlab_component_ops:rate_1h{component="workhorse",tier="app",type="webservice"}
        )
      )
    labels:
      component: workhorse
      tier: app
      type: webservice
    record: gitlab_component_errors:rate_1h
- interval: 2m
  name: 'Component-Level SLIs: webservice - 6h burn-rate'
  rules:
  - expr: |
      (
        sum by () (
          rate(http_request_duration_seconds_bucket{job="gitlab-rails",le="1"}[6h])
        )
        +
        sum by () (
          rate(http_request_duration_seconds_bucket{job="gitlab-rails",le="10"}[6h])
        )
      )
      /
      2
    labels:
      component: puma
      tier: app
      type: webservice
    record: gitlab_component_apdex:success:rate_6h
  - expr: |
      sum by () (
        rate(http_request_duration_seconds_bucket{job="gitlab-rails",le="+Inf"}[6h])
      )
    labels:
      component: puma
      tier: app
      type: webservice
    record: gitlab_component_apdex:weight:score_6h
  - expr: |
      sum by () (
        rate(http_requests_total{job="gitlab-rails"}[6h])
      )
    labels:
      component: puma
      tier: app
      type: webservice
    record: gitlab_component_ops:rate_6h
  - expr: |
      (
        sum by () (
          rate(http_requests_total{job="gitlab-rails",status=~"5.."}[6h])
        )
      )
      or
      (
        0 * group by() (
          gitlab_component_ops:rate_6h{component="puma",tier="app",type="webservice"}
        )
      )
    labels:
      component: puma
      tier: app
      type: webservice
    record: gitlab_component_errors:rate_6h
  - expr: |
      (
        sum by () (
          rate(gitlab_workhorse_http_request_duration_seconds_bucket{le="1",route!="^/-/health$",route!="^/-/(readiness|liveness)$",route!="^/([^/]+/){1,}[^/]+/uploads\\z",route!="^/([^/]+/){1,}[^/]+\\.git/git-receive-pack\\z",route!="^/([^/]+/){1,}[^/]+\\.git/git-upload-pack\\z",route!="^/([^/]+/){1,}[^/]+\\.git/info/refs\\z",route!="^/([^/]+/){1,}[^/]+\\.git/gitlab-lfs/objects/([0-9a-f]{64})/([0-9]+)\\z"}[6h])
        )
        +
        sum by () (
          rate(gitlab_workhorse_http_request_duration_seconds_bucket{le="10",route!="^/-/health$",route!="^/-/(readiness|liveness)$",route!="^/([^/]+/){1,}[^/]+/uploads\\z",route!="^/([^/]+/){1,}[^/]+\\.git/git-receive-pack\\z",route!="^/([^/]+/){1,}[^/]+\\.git/git-upload-pack\\z",route!="^/([^/]+/){1,}[^/]+\\.git/info/refs\\z",route!="^/([^/]+/){1,}[^/]+\\.git/gitlab-lfs/objects/([0-9a-f]{64})/([0-9]+)\\z"}[6h])
        )
      )
      /
      2
    labels:
      component: workhorse
      tier: app
      type: webservice
    record: gitlab_component_apdex:success:rate_6h
  - expr: |
      sum by () (
        rate(gitlab_workhorse_http_request_duration_seconds_bucket{le="+Inf",route!="^/-/health$",route!="^/-/(readiness|liveness)$",route!="^/([^/]+/){1,}[^/]+/uploads\\z",route!="^/([^/]+/){1,}[^/]+\\.git/git-receive-pack\\z",route!="^/([^/]+/){1,}[^/]+\\.git/git-upload-pack\\z",route!="^/([^/]+/){1,}[^/]+\\.git/info/refs\\z",route!="^/([^/]+/){1,}[^/]+\\.git/gitlab-lfs/objects/([0-9a-f]{64})/([0-9]+)\\z"}[6h])
      )
    labels:
      component: workhorse
      tier: app
      type: webservice
    record: gitlab_component_apdex:weight:score_6h
  - expr: |
      sum by () (
        rate(gitlab_workhorse_http_requests_total{route!="^/-/health$",route!="^/-/(readiness|liveness)$"}[6h])
      )
    labels:
      component: workhorse
      tier: app
      type: webservice
    record: gitlab_component_ops:rate_6h
  - expr: |
      (
        sum by () (
          rate(gitlab_workhorse_http_requests_total{code=~"^5.*",route!="^/-/health$",route!="^/-/(readiness|liveness)$"}[6h])
        )
      )
      or
      (
        0 * group by() (
          gitlab_component_ops:rate_6h{component="workhorse",tier="app",type="webservice"}
        )
      )
    labels:
      component: workhorse
      tier: app
      type: webservice
    record: gitlab_component_errors:rate_6h
- interval: 1m
  name: 'Component mapping: webservice'
  rules:
  - expr: "1"
    labels:
      component: puma
      regional_aggregation: "no"
      service_aggregation: "yes"
      tier: app
      type: webservice
    record: gitlab_component_service:mapping
  - expr: "1"
    labels:
      component: workhorse
      regional_aggregation: "no"
      service_aggregation: "yes"
      tier: app
      type: webservice
    record: gitlab_component_service:mapping
- interval: 1m
  name: 'Component-Level SLIs: gitaly - 5m burn-rate'
  rules:
  - expr: |
      (
        sum by () (
          rate(grpc_server_handling_seconds_bucket{grpc_method!~"CalculateChecksum|CommitLanguages|CommitStats|CreateFork|CreateRepositoryFromURL|FetchInternalRemote|FetchIntoObjectPool|FetchRemote|FetchSourceBranch|FindRemoteRepository|FindRemoteRootRef|Fsck|GarbageCollect|OptimizeRepository|PackObjectsHookWithSidechannel|PostReceiveHook|PostUploadPackWithSidechannel|PreReceiveHook|RepackFull|RepackIncremental|ReplicateRepository|SSHUploadPackWithSidechannel|UpdateHook",grpc_service!="gitaly.OperationService",grpc_type="unary",job="gitaly",le="0.5"}[5m])
        )
        +
        sum by () (
          rate(grpc_server_handling_seconds_bucket{grpc_method!~"CalculateChecksum|CommitLanguages|CommitStats|CreateFork|CreateRepositoryFromURL|FetchInternalRemote|FetchIntoObjectPool|FetchRemote|FetchSourceBranch|FindRemoteRepository|FindRemoteRootRef|Fsck|GarbageCollect|OptimizeRepository|PackObjectsHookWithSidechannel|PostReceiveHook|PostUploadPackWithSidechannel|PreReceiveHook|RepackFull|RepackIncremental|ReplicateRepository|SSHUploadPackWithSidechannel|UpdateHook",grpc_service!="gitaly.OperationService",grpc_type="unary",job="gitaly",le="1"}[5m])
        )
      )
      /
      2
    labels:
      component: goserver
      tier: stor
      type: gitaly
    record: gitlab_component_apdex:success:rate_5m
  - expr: |
      sum by () (
        rate(grpc_server_handling_seconds_bucket{grpc_method!~"CalculateChecksum|CommitLanguages|CommitStats|CreateFork|CreateRepositoryFromURL|FetchInternalRemote|FetchIntoObjectPool|FetchRemote|FetchSourceBranch|FindRemoteRepository|FindRemoteRootRef|Fsck|GarbageCollect|OptimizeRepository|PackObjectsHookWithSidechannel|PostReceiveHook|PostUploadPackWithSidechannel|PreReceiveHook|RepackFull|RepackIncremental|ReplicateRepository|SSHUploadPackWithSidechannel|UpdateHook",grpc_service!="gitaly.OperationService",grpc_type="unary",job="gitaly",le="+Inf"}[5m])
      )
    labels:
      component: goserver
      tier: stor
      type: gitaly
    record: gitlab_component_apdex:weight:score_5m
  - expr: |
      sum by () (
        rate(gitaly_service_client_requests_total{grpc_service!="gitaly.OperationService",job="gitaly"}[5m])
      )
    labels:
      component: goserver
      tier: stor
      type: gitaly
    record: gitlab_component_ops:rate_5m
  - expr: |
      (
        sum by () (
          label_replace(rate(gitaly_service_client_requests_total{grpc_code!~"AlreadyExists|Canceled|DeadlineExceeded|FailedPrecondition|InvalidArgument|NotFound|OK|Unauthenticated",grpc_service!="gitaly.OperationService",job="gitaly"}[5m]), "_c", "0", "", "")
          or
          label_replace(rate(gitaly_service_client_requests_total{deadline_type!="limited",grpc_code="DeadlineExceeded",grpc_service!="gitaly.OperationService",job="gitaly"}[5m]), "_c", "1", "", "")
        )
      )
      or
      (
        0 * group by() (
          gitlab_component_ops:rate_5m{component="goserver",tier="stor",type="gitaly"}
        )
      )
    labels:
      component: goserver
      tier: stor
      type: gitaly
    record: gitlab_component_errors:rate_5m
- interval: 2m
  name: 'Component-Level SLIs: gitaly - 30m burn-rate'
  rules:
  - expr: |
      (
        sum by () (
          rate(grpc_server_handling_seconds_bucket{grpc_method!~"CalculateChecksum|CommitLanguages|CommitStats|CreateFork|CreateRepositoryFromURL|FetchInternalRemote|FetchIntoObjectPool|FetchRemote|FetchSourceBranch|FindRemoteRepository|FindRemoteRootRef|Fsck|GarbageCollect|OptimizeRepository|PackObjectsHookWithSidechannel|PostReceiveHook|PostUploadPackWithSidechannel|PreReceiveHook|RepackFull|RepackIncremental|ReplicateRepository|SSHUploadPackWithSidechannel|UpdateHook",grpc_service!="gitaly.OperationService",grpc_type="unary",job="gitaly",le="0.5"}[30m])
        )
        +
        sum by () (
          rate(grpc_server_handling_seconds_bucket{grpc_method!~"CalculateChecksum|CommitLanguages|CommitStats|CreateFork|CreateRepositoryFromURL|FetchInternalRemote|FetchIntoObjectPool|FetchRemote|FetchSourceBranch|FindRemoteRepository|FindRemoteRootRef|Fsck|GarbageCollect|OptimizeRepository|PackObjectsHookWithSidechannel|PostReceiveHook|PostUploadPackWithSidechannel|PreReceiveHook|RepackFull|RepackIncremental|ReplicateRepository|SSHUploadPackWithSidechannel|UpdateHook",grpc_service!="gitaly.OperationService",grpc_type="unary",job="gitaly",le="1"}[30m])
        )
      )
      /
      2
    labels:
      component: goserver
      tier: stor
      type: gitaly
    record: gitlab_component_apdex:success:rate_30m
  - expr: |
      sum by () (
        rate(grpc_server_handling_seconds_bucket{grpc_method!~"CalculateChecksum|CommitLanguages|CommitStats|CreateFork|CreateRepositoryFromURL|FetchInternalRemote|FetchIntoObjectPool|FetchRemote|FetchSourceBranch|FindRemoteRepository|FindRemoteRootRef|Fsck|GarbageCollect|OptimizeRepository|PackObjectsHookWithSidechannel|PostReceiveHook|PostUploadPackWithSidechannel|PreReceiveHook|RepackFull|RepackIncremental|ReplicateRepository|SSHUploadPackWithSidechannel|UpdateHook",grpc_service!="gitaly.OperationService",grpc_type="unary",job="gitaly",le="+Inf"}[30m])
      )
    labels:
      component: goserver
      tier: stor
      type: gitaly
    record: gitlab_component_apdex:weight:score_30m
  - expr: |
      sum by () (
        rate(gitaly_service_client_requests_total{grpc_service!="gitaly.OperationService",job="gitaly"}[30m])
      )
    labels:
      component: goserver
      tier: stor
      type: gitaly
    record: gitlab_component_ops:rate_30m
  - expr: |
      (
        sum by () (
          label_replace(rate(gitaly_service_client_requests_total{grpc_code!~"AlreadyExists|Canceled|DeadlineExceeded|FailedPrecondition|InvalidArgument|NotFound|OK|Unauthenticated",grpc_service!="gitaly.OperationService",job="gitaly"}[30m]), "_c", "0", "", "")
          or
          label_replace(rate(gitaly_service_client_requests_total{deadline_type!="limited",grpc_code="DeadlineExceeded",grpc_service!="gitaly.OperationService",job="gitaly"}[30m]), "_c", "1", "", "")
        )
      )
      or
      (
        0 * group by() (
          gitlab_component_ops:rate_30m{component="goserver",tier="stor",type="gitaly"}
        )
      )
    labels:
      component: goserver
      tier: stor
      type: gitaly
    record: gitlab_component_errors:rate_30m
- interval: 1m
  name: 'Component-Level SLIs: gitaly - 1h burn-rate'
  rules:
  - expr: |
      (
        sum by () (
          rate(grpc_server_handling_seconds_bucket{grpc_method!~"CalculateChecksum|CommitLanguages|CommitStats|CreateFork|CreateRepositoryFromURL|FetchInternalRemote|FetchIntoObjectPool|FetchRemote|FetchSourceBranch|FindRemoteRepository|FindRemoteRootRef|Fsck|GarbageCollect|OptimizeRepository|PackObjectsHookWithSidechannel|PostReceiveHook|PostUploadPackWithSidechannel|PreReceiveHook|RepackFull|RepackIncremental|ReplicateRepository|SSHUploadPackWithSidechannel|UpdateHook",grpc_service!="gitaly.OperationService",grpc_type="unary",job="gitaly",le="0.5"}[1h])
        )
        +
        sum by () (
          rate(grpc_server_handling_seconds_bucket{grpc_method!~"CalculateChecksum|CommitLanguages|CommitStats|CreateFork|CreateRepositoryFromURL|FetchInternalRemote|FetchIntoObjectPool|FetchRemote|FetchSourceBranch|FindRemoteRepository|FindRemoteRootRef|Fsck|GarbageCollect|OptimizeRepository|PackObjectsHookWithSidechannel|PostReceiveHook|PostUploadPackWithSidechannel|PreReceiveHook|RepackFull|RepackIncremental|ReplicateRepository|SSHUploadPackWithSidechannel|UpdateHook",grpc_service!="gitaly.OperationService",grpc_type="unary",job="gitaly",le="1"}[1h])
        )
      )
      /
      2
    labels:
      component: goserver
      tier: stor
      type: gitaly
    record: gitlab_component_apdex:success:rate_1h
  - expr: |
      sum by () (
        rate(grpc_server_handling_seconds_bucket{grpc_method!~"CalculateChecksum|CommitLanguages|CommitStats|CreateFork|CreateRepositoryFromURL|FetchInternalRemote|FetchIntoObjectPool|FetchRemote|FetchSourceBranch|FindRemoteRepository|FindRemoteRootRef|Fsck|GarbageCollect|OptimizeRepository|PackObjectsHookWithSidechannel|PostReceiveHook|PostUploadPackWithSidechannel|PreReceiveHook|RepackFull|RepackIncremental|ReplicateRepository|SSHUploadPackWithSidechannel|UpdateHook",grpc_service!="gitaly.OperationService",grpc_type="unary",job="gitaly",le="+Inf"}[1h])
      )
    labels:
      component: goserver
      tier: stor
      type: gitaly
    record: gitlab_component_apdex:weight:score_1h
  - expr: |
      sum by () (
        rate(gitaly_service_client_requests_total{grpc_service!="gitaly.OperationService",job="gitaly"}[1h])
      )
    labels:
      component: goserver
      tier: stor
      type: gitaly
    record: gitlab_component_ops:rate_1h
  - expr: |
      (
        sum by () (
          label_replace(rate(gitaly_service_client_requests_total{grpc_code!~"AlreadyExists|Canceled|DeadlineExceeded|FailedPrecondition|InvalidArgument|NotFound|OK|Unauthenticated",grpc_service!="gitaly.OperationService",job="gitaly"}[1h]), "_c", "0", "", "")
          or
          label_replace(rate(gitaly_service_client_requests_total{deadline_type!="limited",grpc_code="DeadlineExceeded",grpc_service!="gitaly.OperationService",job="gitaly"}[1h]), "_c", "1", "", "")
        )
      )
      or
      (
        0 * group by() (
          gitlab_component_ops:rate_1h{component="goserver",tier="stor",type="gitaly"}
        )
      )
    labels:
      component: goserver
      tier: stor
      type: gitaly
    record: gitlab_component_errors:rate_1h
- interval: 2m
  name: 'Component-Level SLIs: gitaly - 6h burn-rate'
  rules:
  - expr: |
      (
        sum by () (
          rate(grpc_server_handling_seconds_bucket{grpc_method!~"CalculateChecksum|CommitLanguages|CommitStats|CreateFork|CreateRepositoryFromURL|FetchInternalRemote|FetchIntoObjectPool|FetchRemote|FetchSourceBranch|FindRemoteRepository|FindRemoteRootRef|Fsck|GarbageCollect|OptimizeRepository|PackObjectsHookWithSidechannel|PostReceiveHook|PostUploadPackWithSidechannel|PreReceiveHook|RepackFull|RepackIncremental|ReplicateRepository|SSHUploadPackWithSidechannel|UpdateHook",grpc_service!="gitaly.OperationService",grpc_type="unary",job="gitaly",le="0.5"}[6h])
        )
        +
        sum by () (
          rate(grpc_server_handling_seconds_bucket{grpc_method!~"CalculateChecksum|CommitLanguages|CommitStats|CreateFork|CreateRepositoryFromURL|FetchInternalRemote|FetchIntoObjectPool|FetchRemote|FetchSourceBranch|FindRemoteRepository|FindRemoteRootRef|Fsck|GarbageCollect|OptimizeRepository|PackObjectsHookWithSidechannel|PostReceiveHook|PostUploadPackWithSidechannel|PreReceiveHook|RepackFull|RepackIncremental|ReplicateRepository|SSHUploadPackWithSidechannel|UpdateHook",grpc_service!="gitaly.OperationService",grpc_type="unary",job="gitaly",le="1"}[6h])
        )
      )
      /
      2
    labels:
      component: goserver
      tier: stor
      type: gitaly
    record: gitlab_component_apdex:success:rate_6h
  - expr: |
      sum by () (
        rate(grpc_server_handling_seconds_bucket{grpc_method!~"CalculateChecksum|CommitLanguages|CommitStats|CreateFork|CreateRepositoryFromURL|FetchInternalRemote|FetchIntoObjectPool|FetchRemote|FetchSourceBranch|FindRemoteRepository|FindRemoteRootRef|Fsck|GarbageCollect|OptimizeRepository|PackObjectsHookWithSidechannel|PostReceiveHook|PostUploadPackWithSidechannel|PreReceiveHook|RepackFull|RepackIncremental|ReplicateRepository|SSHUploadPackWithSidechannel|UpdateHook",grpc_service!="gitaly.OperationService",grpc_type="unary",job="gitaly",le="+Inf"}[6h])
      )
    labels:
      component: goserver
      tier: stor
      type: gitaly
    record: gitlab_component_apdex:weight:score_6h
  - expr: |
      sum by () (
        rate(gitaly_service_client_requests_total{grpc_service!="gitaly.OperationService",job="gitaly"}[6h])
      )
    labels:
      component: goserver
      tier: stor
      type: gitaly
    record: gitlab_component_ops:rate_6h
  - expr: |
      (
        sum by () (
          label_replace(rate(gitaly_service_client_requests_total{grpc_code!~"AlreadyExists|Canceled|DeadlineExceeded|FailedPrecondition|InvalidArgument|NotFound|OK|Unauthenticated",grpc_service!="gitaly.OperationService",job="gitaly"}[6h]), "_c", "0", "", "")
          or
          label_replace(rate(gitaly_service_client_requests_total{deadline_type!="limited",grpc_code="DeadlineExceeded",grpc_service!="gitaly.OperationService",job="gitaly"}[6h]), "_c", "1", "", "")
        )
      )
      or
      (
        0 * group by() (
          gitlab_component_ops:rate_6h{component="goserver",tier="stor",type="gitaly"}
        )
      )
    labels:
      component: goserver
      tier: stor
      type: gitaly
    record: gitlab_component_errors:rate_6h
- interval: 1m
  name: 'Component mapping: gitaly'
  rules:
  - expr: "1"
    labels:
      component: goserver
      regional_aggregation: "no"
      service_aggregation: "yes"
      tier: stor
      type: gitaly
    record: gitlab_component_service:mapping
- interval: 1m
  name: Global Component SLI Metrics ratios
  rules:
  - expr: |
      sum by (type,component) (
        gitlab_component_errors:rate_5m{}
      )
      /
      sum by (type,component) (
        gitlab_component_ops:rate_5m{}
      )
    record: gitlab_component_errors:ratio_5m
  - expr: |
      sum by (type,component) (
        gitlab_component_apdex:success:rate_5m{}
      )
      /
      sum by (type,component) (
        gitlab_component_apdex:weight:score_5m{}
      )
    record: gitlab_component_apdex:ratio_5m
  - expr: |
      sum by (type,component) (
        gitlab_component_errors:rate_30m{}
      )
      /
      sum by (type,component) (
        gitlab_component_ops:rate_30m{}
      )
    record: gitlab_component_errors:ratio_30m
  - expr: |
      sum by (type,component) (
        gitlab_component_apdex:success:rate_30m{}
      )
      /
      sum by (type,component) (
        gitlab_component_apdex:weight:score_30m{}
      )
    record: gitlab_component_apdex:ratio_30m
  - expr: |
      sum by (type,component) (
        gitlab_component_errors:rate_1h{}
      )
      /
      sum by (type,component) (
        gitlab_component_ops:rate_1h{}
      )
    record: gitlab_component_errors:ratio_1h
  - expr: |
      sum by (type,component) (
        gitlab_component_apdex:success:rate_1h{}
      )
      /
      sum by (type,component) (
        gitlab_component_apdex:weight:score_1h{}
      )
    record: gitlab_component_apdex:ratio_1h
  - expr: |
      sum by (type,component) (
        gitlab_component_errors:rate_6h{}
      )
      /
      sum by (type,component) (
        gitlab_component_ops:rate_6h{}
      )
    record: gitlab_component_errors:ratio_6h
  - expr: |
      sum by (type,component) (
        gitlab_component_apdex:success:rate_6h{}
      )
      /
      sum by (type,component) (
        gitlab_component_apdex:weight:score_6h{}
      )
    record: gitlab_component_apdex:ratio_6h
- interval: 1m
  name: Global Service-Aggregated Metrics
  rules:
  - expr: |
      sum by (type) (
        (gitlab_component_errors:rate_5m{} >= 0) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
      )
    record: gitlab_service_errors:rate_5m
  - expr: |
      sum by (type) (
        (gitlab_component_ops:rate_5m{} >= 0) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
      )
    record: gitlab_service_ops:rate_5m
  - expr: |
      sum by (type) (
        gitlab_service_errors:rate_5m{}
      )
      /
      sum by (type) (
        gitlab_service_ops:rate_5m{}
      )
    record: gitlab_service_errors:ratio_5m
  - expr: |
      sum by (type) (
        (gitlab_component_apdex:weight:score_5m{} >= 0) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
      )
    record: gitlab_service_apdex:weight:score_5m
  - expr: |
      sum by (type) (
        (gitlab_component_apdex:success:rate_5m{} >= 0) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
      )
    record: gitlab_service_apdex:success:rate_5m
  - expr: |
      sum by (type) (
        (gitlab_component_apdex:success:rate_5m{} >= 0) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
      )
      /
      sum by (type) (
        (gitlab_component_apdex:weight:score_5m{} >= 0) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
      )
    record: gitlab_service_apdex:ratio_5m
  - expr: |
      sum by (type) (
        (gitlab_component_errors:rate_30m{} >= 0) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
      )
    record: gitlab_service_errors:rate_30m
  - expr: |
      sum by (type) (
        (gitlab_component_ops:rate_30m{} >= 0) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
      )
    record: gitlab_service_ops:rate_30m
  - expr: |
      sum by (type) (
        gitlab_service_errors:rate_30m{}
      )
      /
      sum by (type) (
        gitlab_service_ops:rate_30m{}
      )
    record: gitlab_service_errors:ratio_30m
  - expr: |
      sum by (type) (
        (gitlab_component_apdex:weight:score_30m{} >= 0) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
      )
    record: gitlab_service_apdex:weight:score_30m
  - expr: |
      sum by (type) (
        (gitlab_component_apdex:success:rate_30m{} >= 0) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
      )
    record: gitlab_service_apdex:success:rate_30m
  - expr: |
      sum by (type) (
        (gitlab_component_apdex:success:rate_30m{} >= 0) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
      )
      /
      sum by (type) (
        (gitlab_component_apdex:weight:score_30m{} >= 0) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
      )
    record: gitlab_service_apdex:ratio_30m
  - expr: |
      sum by (type) (
        (gitlab_component_errors:rate_1h{} >= 0) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
      )
    record: gitlab_service_errors:rate_1h
  - expr: |
      sum by (type) (
        (gitlab_component_ops:rate_1h{} >= 0) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
      )
    record: gitlab_service_ops:rate_1h
  - expr: |
      sum by (type) (
        gitlab_service_errors:rate_1h{}
      )
      /
      sum by (type) (
        gitlab_service_ops:rate_1h{}
      )
    record: gitlab_service_errors:ratio_1h
  - expr: |
      sum by (type) (
        (gitlab_component_apdex:weight:score_1h{} >= 0) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
      )
    record: gitlab_service_apdex:weight:score_1h
  - expr: |
      sum by (type) (
        (gitlab_component_apdex:success:rate_1h{} >= 0) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
      )
    record: gitlab_service_apdex:success:rate_1h
  - expr: |
      sum by (type) (
        (gitlab_component_apdex:success:rate_1h{} >= 0) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
      )
      /
      sum by (type) (
        (gitlab_component_apdex:weight:score_1h{} >= 0) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
      )
    record: gitlab_service_apdex:ratio_1h
  - expr: |
      (
        sum by (type) (
          (gitlab_component_errors:rate_6h{} >= 0) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
        )
      )
      or
      (
        sum by (type) (
          avg_over_time(gitlab_component_errors:rate_1h{upscale_source="yes"}[6h]) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
        )
      )
    record: gitlab_service_errors:rate_6h
  - expr: |
      (
        sum by (type) (
          (gitlab_component_ops:rate_6h{} >= 0) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
        )
      )
      or
      (
        sum by (type) (
          avg_over_time(gitlab_component_ops:rate_1h{upscale_source="yes"}[6h]) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
        )
      )
    record: gitlab_service_ops:rate_6h
  - expr: |
      (
        sum by (type) (
          gitlab_service_errors:rate_6h{}
        )
        /
        sum by (type) (
          gitlab_service_ops:rate_6h{}
        )
      )
      or
      (
        sum by (type) (
          sum_over_time(gitlab_component_errors:rate_1h{upscale_source="yes"}[6h]) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
        )
        /
        sum by (type) (
          sum_over_time(gitlab_component_ops:rate_1h{upscale_source="yes"}[6h]) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
        )
      )
    record: gitlab_service_errors:ratio_6h
  - expr: |
      (
        sum by (type) (
          (gitlab_component_apdex:weight:score_6h{} >= 0) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
        )
      )
      or
      (
        sum by (type) (
          avg_over_time(gitlab_component_apdex:weight:score_1h{upscale_source="yes"}[6h]) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
        )
      )
    record: gitlab_service_apdex:weight:score_6h
  - expr: |
      (
        sum by (type) (
          (gitlab_component_apdex:success:rate_6h{} >= 0) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
        )
      )
      or
      (
        sum by (type) (
          avg_over_time(gitlab_component_apdex:success:rate_1h{upscale_source="yes"}[6h]) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
        )
      )
    record: gitlab_service_apdex:success:rate_6h
  - expr: |
      (
        sum by (type) (
          (gitlab_component_apdex:success:rate_6h{} >= 0) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
        )
        /
        sum by (type) (
          (gitlab_component_apdex:weight:score_6h{} >= 0) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
        )
      )
      or
      (
        sum by (type) (
          sum_over_time(gitlab_component_apdex:success:rate_1h{upscale_source="yes"}[6h]) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
        )
        /
        sum by (type) (
          sum_over_time(gitlab_component_apdex:weight:score_1h{upscale_source="yes"}[6h]) and on(component, type) (gitlab_component_service:mapping{service_aggregation="yes"})
        )
      )
    record: gitlab_service_apdex:ratio_6h
- interval: 5m
  name: Autogenerated Service SLOs
  rules:
  - expr: "0.998000"
    labels:
      tier: app
      type: webservice
    record: slo:min:events:gitlab_service_apdex:ratio
  - expr: "0.000100"
    labels:
      tier: app
      type: webservice
    record: slo:max:events:gitlab_service_errors:ratio
  - expr: "0.998000"
    labels:
      component: puma
      tier: app
      type: webservice
    record: slo:min:events:gitlab_service_apdex:ratio
  - expr: "0.000100"
    labels:
      component: puma
      tier: app
      type: webservice
    record: slo:max:events:gitlab_service_errors:ratio
  - expr: "0.998000"
    labels:
      component: workhorse
      tier: app
      type: webservice
    record: slo:min:events:gitlab_service_apdex:ratio
  - expr: "0.000100"
    labels:
      component: workhorse
      tier: app
      type: webservice
    record: slo:max:events:gitlab_service_errors:ratio
  - expr: "0.999000"
    labels:
      tier: stor
      type: gitaly
    record: slo:min:events:gitlab_service_apdex:ratio
  - expr: "0.000500"
    labels:
      tier: stor
      type: gitaly
    record: slo:max:events:gitlab_service_errors:ratio
  - expr: "0.999000"
    labels:
      component: goserver
      tier: stor
      type: gitaly
    record: slo:min:events:gitlab_service_apdex:ratio
  - expr: "0.000500"
    labels:
      component: goserver
      tier: stor
      type: gitaly
    record: slo:max:events:gitlab_service_errors:ratio
- interval: 1m
  name: Saturation Rules (autogenerated)
  rules: []
- interval: 5m
  name: GitLab Component Saturation Max SLOs
  rules: []
- interval: 5m
  name: GitLab Component Saturation Metadata
  rules: []
- interval: 5m
  name: GitLab Component Saturation Statistics
  rules:
  - expr: quantile_over_time(0.95, gitlab_component_saturation:ratio{monitor="global"}[1w])
    record: gitlab_component_saturation:ratio_quantile95_1w
  - expr: quantile_over_time(0.99, gitlab_component_saturation:ratio{monitor="global"}[1w])
    record: gitlab_component_saturation:ratio_quantile99_1w
  - expr: quantile_over_time(0.95, gitlab_component_saturation:ratio{monitor="global"}[1h])
    record: gitlab_component_saturation:ratio_quantile95_1h
  - expr: quantile_over_time(0.99, gitlab_component_saturation:ratio{monitor="global"}[1h])
    record: gitlab_component_saturation:ratio_quantile99_1h
  - expr: avg_over_time(gitlab_component_saturation:ratio{monitor="global"}[1h])
    record: gitlab_component_saturation:ratio_avg_1h
- interval: 1m
  name: GitLab Saturation Alerts
  rules: []
