groups:
- name: GitLab Component Apdex Scores
  interval: 1m
  rules:

  # web:workhorse
  # Satisfied -> 1 seconds
  # Acceptable -> 10 seconds
  - record: gitlab_component_apdex:ratio
    labels:
      component: 'workhorse'
    expr: >
      (
        sum(rate(gitlab_workhorse_http_request_duration_seconds_bucket{job="gitlab-workhorse-web", type="web", le="1", code=~"^[23].*"}[1m])) by (environment, type, tier)
      +
        sum(rate(gitlab_workhorse_http_request_duration_seconds_bucket{job="gitlab-workhorse-web", type="web", le="10", code=~"^[23].*"}[1m])) by (environment, type, tier)
      )
      /
      2 / sum(rate(gitlab_workhorse_http_request_duration_seconds_count{job="gitlab-workhorse-web", type="web", code=~"^[235].*"}[1m])) by (environment, type, tier) > 0

  # api:workhorse
  # Satisfied -> 10 seconds
  # Acceptable -> 30 seconds
  - record: gitlab_component_apdex:ratio
    labels:
      component: 'workhorse'
    expr: >
      (
        sum(rate(gitlab_workhorse_http_request_duration_seconds_bucket{job="gitlab-workhorse-api", type="api", le="10", code=~"^[23].*", route!="^/api/v4/jobs/request\\z"}[1m])) by (environment, type, tier)
      +
        sum(rate(gitlab_workhorse_http_request_duration_seconds_bucket{job="gitlab-workhorse-api", type="api", le="30", code=~"^[23].*", route!="^/api/v4/jobs/request\\z"}[1m])) by (environment, type, tier)
      )
      /
      2 / sum(rate(gitlab_workhorse_http_request_duration_seconds_count{job="gitlab-workhorse-api", type="api", code=~"^[235].*", route!="^/api/v4/jobs/request\\z"}[1m])) by (environment, type, tier) > 0

  # git:workhorse
  # Satisfied -> 30 seconds
  # Acceptable -> 60 seconds
  - record: gitlab_component_apdex:ratio
    labels:
      component: 'workhorse'
    expr: >
      (
        sum(rate(gitlab_workhorse_http_request_duration_seconds_bucket{job="gitlab-workhorse-git", type="git", le="30", code=~"^[23].*"}[1m])) by (environment, type, tier)
      +
        sum(rate(gitlab_workhorse_http_request_duration_seconds_bucket{job="gitlab-workhorse-git", type="git", le="60", code=~"^[23].*"}[1m])) by (environment, type, tier)
      )
      /
      2 / sum(rate(gitlab_workhorse_http_request_duration_seconds_count{job="gitlab-workhorse-git", type="git", code=~"^[235].*"}[1m])) by (environment, type, tier) > 0

  # gitaly:goserver
  # Satisfied -> 0.5 seconds
  # Acceptable -> 1 seconds
  - record: gitlab_component_apdex:ratio
    labels:
      type: gitaly
      component: 'goserver'
    expr: >
      (
        sum(rate(grpc_server_handling_seconds_bucket{type="gitaly", grpc_type="unary", le="0.5", grpc_method!~"GarbageCollect|Fsck|RepackFull|RepackIncremental|CommitLanguages|CreateRepositoryFromURL|UserRebase|UserSquash|CreateFork|UserUpdateBranch|FindRemoteRepository|UserCherryPick|FetchRemote|UserRevert|FindRemoteRootRef"}[1m])) by (environment, type, tier)
        +
        sum(rate(grpc_server_handling_seconds_bucket{type="gitaly", grpc_type="unary", le="1", grpc_method!~"GarbageCollect|Fsck|RepackFull|RepackIncremental|CommitLanguages|CreateRepositoryFromURL|UserRebase|UserSquash|CreateFork|UserUpdateBranch|FindRemoteRepository|UserCherryPick|FetchRemote|UserRevert|FindRemoteRootRef"}[1m])) by (environment, type, tier)
      )
      /
      2 / (sum(rate(grpc_server_handling_seconds_count{type="gitaly", grpc_type="unary", grpc_method!~"GarbageCollect|Fsck|RepackFull|RepackIncremental|CommitLanguages|CreateRepositoryFromURL|UserRebase|UserSquash|CreateFork|UserUpdateBranch|FindRemoteRepository|UserCherryPick|FetchRemote|UserRevert|FindRemoteRootRef"}[1m])) by (environment, type, tier) > 0)

- name: GitLab Service Apdex Scores
  interval: 1m
  rules:
  # Aggregate over all components within a service
  # Note that since this aggregates on average, the values are
  # not weighted.
  # TODO: using weighted averages
  - record: gitlab_service_apdex:ratio
    expr: >
      avg by (environment, tier, type) (gitlab_component_apdex:ratio)

- name: GitLab Component Apdex Score Stats
  interval: 5m
  rules:
  # Average values for each component, over a week
  - record: gitlab_component_apdex:ratio:avg_over_time_1w
    expr: >
      avg_over_time(gitlab_component_apdex:ratio[1w])
  # Stddev for each component, over a week
  - record: gitlab_component_apdex:ratio:stddev_over_time_1w
    expr: >
      stddev_over_time(gitlab_component_apdex:ratio[1w])

- name: GitLab Service Apdex Score Stats
  interval: 5m
  rules:
  # Average values for each service, over a week
  - record: gitlab_service_apdex:ratio:avg_over_time_1w
    expr: >
      avg_over_time(gitlab_service_apdex:ratio[1w])
  # Stddev for each service, over a week
  - record: gitlab_service_apdex:ratio:stddev_over_time_1w
    expr: >
      stddev_over_time(gitlab_service_apdex:ratio[1w])
