local selectors = import 'promql/selectors.libsonnet';

local generateUtilizationRules(utilizationRules) =
  local selectorHash = {};
  local selector = selectors.serializeHash(selectorHash);

  local utilizationRuleNames = std.objectFields(utilizationRules);
  local rules = std.flatMap(function(key) utilizationRules[key].getRecordingRuleDefinitions(key), utilizationRuleNames);

  {
    'utilization.yml':
      std.manifestYamlDoc({
        groups: std.map(function(group) group, [{
          // Recording rules for each saturation metric
          name: 'Utilization Rules (autogenerated)',
          interval: '5m',
          rules: rules,
        }]),
      }),
  };

{
  generateUtilizationRules:: generateUtilizationRules,
}
